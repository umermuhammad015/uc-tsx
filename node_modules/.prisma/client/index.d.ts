
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Buildings
 * 
 */
export type Buildings = $Result.DefaultSelection<Prisma.$BuildingsPayload>
/**
 * Model Buildings_history
 * 
 */
export type Buildings_history = $Result.DefaultSelection<Prisma.$Buildings_historyPayload>
/**
 * Model Floors
 * 
 */
export type Floors = $Result.DefaultSelection<Prisma.$FloorsPayload>
/**
 * Model Floors_history
 * 
 */
export type Floors_history = $Result.DefaultSelection<Prisma.$Floors_historyPayload>
/**
 * Model Societies
 * 
 */
export type Societies = $Result.DefaultSelection<Prisma.$SocietiesPayload>
/**
 * Model Societies_history
 * 
 */
export type Societies_history = $Result.DefaultSelection<Prisma.$Societies_historyPayload>
/**
 * Model Commercial
 * 
 */
export type Commercial = $Result.DefaultSelection<Prisma.$CommercialPayload>
/**
 * Model Commercial_history
 * 
 */
export type Commercial_history = $Result.DefaultSelection<Prisma.$Commercial_historyPayload>
/**
 * Model Houses
 * 
 */
export type Houses = $Result.DefaultSelection<Prisma.$HousesPayload>
/**
 * Model Plots
 * 
 */
export type Plots = $Result.DefaultSelection<Prisma.$PlotsPayload>
/**
 * Model Plots_history
 * 
 */
export type Plots_history = $Result.DefaultSelection<Prisma.$Plots_historyPayload>
/**
 * Model Price
 * 
 */
export type Price = $Result.DefaultSelection<Prisma.$PricePayload>
/**
 * Model Price_history
 * 
 */
export type Price_history = $Result.DefaultSelection<Prisma.$Price_historyPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.buildings`: Exposes CRUD operations for the **Buildings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Buildings
    * const buildings = await prisma.buildings.findMany()
    * ```
    */
  get buildings(): Prisma.BuildingsDelegate<ExtArgs>;

  /**
   * `prisma.buildings_history`: Exposes CRUD operations for the **Buildings_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Buildings_histories
    * const buildings_histories = await prisma.buildings_history.findMany()
    * ```
    */
  get buildings_history(): Prisma.Buildings_historyDelegate<ExtArgs>;

  /**
   * `prisma.floors`: Exposes CRUD operations for the **Floors** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Floors
    * const floors = await prisma.floors.findMany()
    * ```
    */
  get floors(): Prisma.FloorsDelegate<ExtArgs>;

  /**
   * `prisma.floors_history`: Exposes CRUD operations for the **Floors_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Floors_histories
    * const floors_histories = await prisma.floors_history.findMany()
    * ```
    */
  get floors_history(): Prisma.Floors_historyDelegate<ExtArgs>;

  /**
   * `prisma.societies`: Exposes CRUD operations for the **Societies** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Societies
    * const societies = await prisma.societies.findMany()
    * ```
    */
  get societies(): Prisma.SocietiesDelegate<ExtArgs>;

  /**
   * `prisma.societies_history`: Exposes CRUD operations for the **Societies_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Societies_histories
    * const societies_histories = await prisma.societies_history.findMany()
    * ```
    */
  get societies_history(): Prisma.Societies_historyDelegate<ExtArgs>;

  /**
   * `prisma.commercial`: Exposes CRUD operations for the **Commercial** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Commercials
    * const commercials = await prisma.commercial.findMany()
    * ```
    */
  get commercial(): Prisma.CommercialDelegate<ExtArgs>;

  /**
   * `prisma.commercial_history`: Exposes CRUD operations for the **Commercial_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Commercial_histories
    * const commercial_histories = await prisma.commercial_history.findMany()
    * ```
    */
  get commercial_history(): Prisma.Commercial_historyDelegate<ExtArgs>;

  /**
   * `prisma.houses`: Exposes CRUD operations for the **Houses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Houses
    * const houses = await prisma.houses.findMany()
    * ```
    */
  get houses(): Prisma.HousesDelegate<ExtArgs>;

  /**
   * `prisma.plots`: Exposes CRUD operations for the **Plots** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Plots
    * const plots = await prisma.plots.findMany()
    * ```
    */
  get plots(): Prisma.PlotsDelegate<ExtArgs>;

  /**
   * `prisma.plots_history`: Exposes CRUD operations for the **Plots_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Plots_histories
    * const plots_histories = await prisma.plots_history.findMany()
    * ```
    */
  get plots_history(): Prisma.Plots_historyDelegate<ExtArgs>;

  /**
   * `prisma.price`: Exposes CRUD operations for the **Price** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Prices
    * const prices = await prisma.price.findMany()
    * ```
    */
  get price(): Prisma.PriceDelegate<ExtArgs>;

  /**
   * `prisma.price_history`: Exposes CRUD operations for the **Price_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Price_histories
    * const price_histories = await prisma.price_history.findMany()
    * ```
    */
  get price_history(): Prisma.Price_historyDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.1.0
   * Query Engine version: 11f085a2012c0f4778414c8db2651556ee0ef959
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Buildings: 'Buildings',
    Buildings_history: 'Buildings_history',
    Floors: 'Floors',
    Floors_history: 'Floors_history',
    Societies: 'Societies',
    Societies_history: 'Societies_history',
    Commercial: 'Commercial',
    Commercial_history: 'Commercial_history',
    Houses: 'Houses',
    Plots: 'Plots',
    Plots_history: 'Plots_history',
    Price: 'Price',
    Price_history: 'Price_history'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "buildings" | "buildings_history" | "floors" | "floors_history" | "societies" | "societies_history" | "commercial" | "commercial_history" | "houses" | "plots" | "plots_history" | "price" | "price_history"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Buildings: {
        payload: Prisma.$BuildingsPayload<ExtArgs>
        fields: Prisma.BuildingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BuildingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BuildingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload>
          }
          findFirst: {
            args: Prisma.BuildingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BuildingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload>
          }
          findMany: {
            args: Prisma.BuildingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload>[]
          }
          create: {
            args: Prisma.BuildingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload>
          }
          createMany: {
            args: Prisma.BuildingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.BuildingsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload>[]
          }
          delete: {
            args: Prisma.BuildingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload>
          }
          update: {
            args: Prisma.BuildingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload>
          }
          deleteMany: {
            args: Prisma.BuildingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BuildingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BuildingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BuildingsPayload>
          }
          aggregate: {
            args: Prisma.BuildingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBuildings>
          }
          groupBy: {
            args: Prisma.BuildingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<BuildingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.BuildingsCountArgs<ExtArgs>
            result: $Utils.Optional<BuildingsCountAggregateOutputType> | number
          }
        }
      }
      Buildings_history: {
        payload: Prisma.$Buildings_historyPayload<ExtArgs>
        fields: Prisma.Buildings_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Buildings_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Buildings_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload>
          }
          findFirst: {
            args: Prisma.Buildings_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Buildings_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload>
          }
          findMany: {
            args: Prisma.Buildings_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload>[]
          }
          create: {
            args: Prisma.Buildings_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload>
          }
          createMany: {
            args: Prisma.Buildings_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Buildings_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload>[]
          }
          delete: {
            args: Prisma.Buildings_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload>
          }
          update: {
            args: Prisma.Buildings_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload>
          }
          deleteMany: {
            args: Prisma.Buildings_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Buildings_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Buildings_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Buildings_historyPayload>
          }
          aggregate: {
            args: Prisma.Buildings_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBuildings_history>
          }
          groupBy: {
            args: Prisma.Buildings_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Buildings_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.Buildings_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Buildings_historyCountAggregateOutputType> | number
          }
        }
      }
      Floors: {
        payload: Prisma.$FloorsPayload<ExtArgs>
        fields: Prisma.FloorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FloorsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FloorsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload>
          }
          findFirst: {
            args: Prisma.FloorsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FloorsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload>
          }
          findMany: {
            args: Prisma.FloorsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload>[]
          }
          create: {
            args: Prisma.FloorsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload>
          }
          createMany: {
            args: Prisma.FloorsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FloorsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload>[]
          }
          delete: {
            args: Prisma.FloorsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload>
          }
          update: {
            args: Prisma.FloorsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload>
          }
          deleteMany: {
            args: Prisma.FloorsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FloorsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FloorsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FloorsPayload>
          }
          aggregate: {
            args: Prisma.FloorsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFloors>
          }
          groupBy: {
            args: Prisma.FloorsGroupByArgs<ExtArgs>
            result: $Utils.Optional<FloorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.FloorsCountArgs<ExtArgs>
            result: $Utils.Optional<FloorsCountAggregateOutputType> | number
          }
        }
      }
      Floors_history: {
        payload: Prisma.$Floors_historyPayload<ExtArgs>
        fields: Prisma.Floors_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Floors_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Floors_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload>
          }
          findFirst: {
            args: Prisma.Floors_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Floors_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload>
          }
          findMany: {
            args: Prisma.Floors_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload>[]
          }
          create: {
            args: Prisma.Floors_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload>
          }
          createMany: {
            args: Prisma.Floors_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Floors_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload>[]
          }
          delete: {
            args: Prisma.Floors_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload>
          }
          update: {
            args: Prisma.Floors_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload>
          }
          deleteMany: {
            args: Prisma.Floors_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Floors_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Floors_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Floors_historyPayload>
          }
          aggregate: {
            args: Prisma.Floors_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFloors_history>
          }
          groupBy: {
            args: Prisma.Floors_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Floors_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.Floors_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Floors_historyCountAggregateOutputType> | number
          }
        }
      }
      Societies: {
        payload: Prisma.$SocietiesPayload<ExtArgs>
        fields: Prisma.SocietiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SocietiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SocietiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload>
          }
          findFirst: {
            args: Prisma.SocietiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SocietiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload>
          }
          findMany: {
            args: Prisma.SocietiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload>[]
          }
          create: {
            args: Prisma.SocietiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload>
          }
          createMany: {
            args: Prisma.SocietiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SocietiesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload>[]
          }
          delete: {
            args: Prisma.SocietiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload>
          }
          update: {
            args: Prisma.SocietiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload>
          }
          deleteMany: {
            args: Prisma.SocietiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SocietiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SocietiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SocietiesPayload>
          }
          aggregate: {
            args: Prisma.SocietiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSocieties>
          }
          groupBy: {
            args: Prisma.SocietiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<SocietiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.SocietiesCountArgs<ExtArgs>
            result: $Utils.Optional<SocietiesCountAggregateOutputType> | number
          }
        }
      }
      Societies_history: {
        payload: Prisma.$Societies_historyPayload<ExtArgs>
        fields: Prisma.Societies_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Societies_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Societies_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload>
          }
          findFirst: {
            args: Prisma.Societies_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Societies_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload>
          }
          findMany: {
            args: Prisma.Societies_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload>[]
          }
          create: {
            args: Prisma.Societies_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload>
          }
          createMany: {
            args: Prisma.Societies_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Societies_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload>[]
          }
          delete: {
            args: Prisma.Societies_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload>
          }
          update: {
            args: Prisma.Societies_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload>
          }
          deleteMany: {
            args: Prisma.Societies_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Societies_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Societies_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Societies_historyPayload>
          }
          aggregate: {
            args: Prisma.Societies_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSocieties_history>
          }
          groupBy: {
            args: Prisma.Societies_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Societies_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.Societies_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Societies_historyCountAggregateOutputType> | number
          }
        }
      }
      Commercial: {
        payload: Prisma.$CommercialPayload<ExtArgs>
        fields: Prisma.CommercialFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CommercialFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CommercialFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload>
          }
          findFirst: {
            args: Prisma.CommercialFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CommercialFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload>
          }
          findMany: {
            args: Prisma.CommercialFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload>[]
          }
          create: {
            args: Prisma.CommercialCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload>
          }
          createMany: {
            args: Prisma.CommercialCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CommercialCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload>[]
          }
          delete: {
            args: Prisma.CommercialDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload>
          }
          update: {
            args: Prisma.CommercialUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload>
          }
          deleteMany: {
            args: Prisma.CommercialDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CommercialUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CommercialUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CommercialPayload>
          }
          aggregate: {
            args: Prisma.CommercialAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommercial>
          }
          groupBy: {
            args: Prisma.CommercialGroupByArgs<ExtArgs>
            result: $Utils.Optional<CommercialGroupByOutputType>[]
          }
          count: {
            args: Prisma.CommercialCountArgs<ExtArgs>
            result: $Utils.Optional<CommercialCountAggregateOutputType> | number
          }
        }
      }
      Commercial_history: {
        payload: Prisma.$Commercial_historyPayload<ExtArgs>
        fields: Prisma.Commercial_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Commercial_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Commercial_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload>
          }
          findFirst: {
            args: Prisma.Commercial_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Commercial_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload>
          }
          findMany: {
            args: Prisma.Commercial_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload>[]
          }
          create: {
            args: Prisma.Commercial_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload>
          }
          createMany: {
            args: Prisma.Commercial_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Commercial_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload>[]
          }
          delete: {
            args: Prisma.Commercial_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload>
          }
          update: {
            args: Prisma.Commercial_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload>
          }
          deleteMany: {
            args: Prisma.Commercial_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Commercial_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Commercial_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Commercial_historyPayload>
          }
          aggregate: {
            args: Prisma.Commercial_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCommercial_history>
          }
          groupBy: {
            args: Prisma.Commercial_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Commercial_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.Commercial_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Commercial_historyCountAggregateOutputType> | number
          }
        }
      }
      Houses: {
        payload: Prisma.$HousesPayload<ExtArgs>
        fields: Prisma.HousesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HousesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HousesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload>
          }
          findFirst: {
            args: Prisma.HousesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HousesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload>
          }
          findMany: {
            args: Prisma.HousesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload>[]
          }
          create: {
            args: Prisma.HousesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload>
          }
          createMany: {
            args: Prisma.HousesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HousesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload>[]
          }
          delete: {
            args: Prisma.HousesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload>
          }
          update: {
            args: Prisma.HousesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload>
          }
          deleteMany: {
            args: Prisma.HousesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HousesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.HousesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HousesPayload>
          }
          aggregate: {
            args: Prisma.HousesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHouses>
          }
          groupBy: {
            args: Prisma.HousesGroupByArgs<ExtArgs>
            result: $Utils.Optional<HousesGroupByOutputType>[]
          }
          count: {
            args: Prisma.HousesCountArgs<ExtArgs>
            result: $Utils.Optional<HousesCountAggregateOutputType> | number
          }
        }
      }
      Plots: {
        payload: Prisma.$PlotsPayload<ExtArgs>
        fields: Prisma.PlotsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PlotsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PlotsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload>
          }
          findFirst: {
            args: Prisma.PlotsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PlotsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload>
          }
          findMany: {
            args: Prisma.PlotsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload>[]
          }
          create: {
            args: Prisma.PlotsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload>
          }
          createMany: {
            args: Prisma.PlotsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PlotsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload>[]
          }
          delete: {
            args: Prisma.PlotsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload>
          }
          update: {
            args: Prisma.PlotsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload>
          }
          deleteMany: {
            args: Prisma.PlotsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PlotsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PlotsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PlotsPayload>
          }
          aggregate: {
            args: Prisma.PlotsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlots>
          }
          groupBy: {
            args: Prisma.PlotsGroupByArgs<ExtArgs>
            result: $Utils.Optional<PlotsGroupByOutputType>[]
          }
          count: {
            args: Prisma.PlotsCountArgs<ExtArgs>
            result: $Utils.Optional<PlotsCountAggregateOutputType> | number
          }
        }
      }
      Plots_history: {
        payload: Prisma.$Plots_historyPayload<ExtArgs>
        fields: Prisma.Plots_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Plots_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Plots_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload>
          }
          findFirst: {
            args: Prisma.Plots_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Plots_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload>
          }
          findMany: {
            args: Prisma.Plots_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload>[]
          }
          create: {
            args: Prisma.Plots_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload>
          }
          createMany: {
            args: Prisma.Plots_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Plots_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload>[]
          }
          delete: {
            args: Prisma.Plots_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload>
          }
          update: {
            args: Prisma.Plots_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload>
          }
          deleteMany: {
            args: Prisma.Plots_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Plots_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Plots_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Plots_historyPayload>
          }
          aggregate: {
            args: Prisma.Plots_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePlots_history>
          }
          groupBy: {
            args: Prisma.Plots_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Plots_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.Plots_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Plots_historyCountAggregateOutputType> | number
          }
        }
      }
      Price: {
        payload: Prisma.$PricePayload<ExtArgs>
        fields: Prisma.PriceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PriceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PriceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          findFirst: {
            args: Prisma.PriceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PriceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          findMany: {
            args: Prisma.PriceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>[]
          }
          create: {
            args: Prisma.PriceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          createMany: {
            args: Prisma.PriceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PriceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>[]
          }
          delete: {
            args: Prisma.PriceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          update: {
            args: Prisma.PriceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          deleteMany: {
            args: Prisma.PriceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PriceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PriceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PricePayload>
          }
          aggregate: {
            args: Prisma.PriceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrice>
          }
          groupBy: {
            args: Prisma.PriceGroupByArgs<ExtArgs>
            result: $Utils.Optional<PriceGroupByOutputType>[]
          }
          count: {
            args: Prisma.PriceCountArgs<ExtArgs>
            result: $Utils.Optional<PriceCountAggregateOutputType> | number
          }
        }
      }
      Price_history: {
        payload: Prisma.$Price_historyPayload<ExtArgs>
        fields: Prisma.Price_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Price_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Price_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload>
          }
          findFirst: {
            args: Prisma.Price_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Price_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload>
          }
          findMany: {
            args: Prisma.Price_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload>[]
          }
          create: {
            args: Prisma.Price_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload>
          }
          createMany: {
            args: Prisma.Price_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.Price_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload>[]
          }
          delete: {
            args: Prisma.Price_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload>
          }
          update: {
            args: Prisma.Price_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload>
          }
          deleteMany: {
            args: Prisma.Price_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Price_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Price_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Price_historyPayload>
          }
          aggregate: {
            args: Prisma.Price_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePrice_history>
          }
          groupBy: {
            args: Prisma.Price_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Price_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.Price_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Price_historyCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type BuildingsCountOutputType
   */

  export type BuildingsCountOutputType = {
    floors: number
  }

  export type BuildingsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    floors?: boolean | BuildingsCountOutputTypeCountFloorsArgs
  }

  // Custom InputTypes
  /**
   * BuildingsCountOutputType without action
   */
  export type BuildingsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BuildingsCountOutputType
     */
    select?: BuildingsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BuildingsCountOutputType without action
   */
  export type BuildingsCountOutputTypeCountFloorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FloorsWhereInput
  }


  /**
   * Count Type SocietiesCountOutputType
   */

  export type SocietiesCountOutputType = {
    Plots: number
    Houses: number
  }

  export type SocietiesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Plots?: boolean | SocietiesCountOutputTypeCountPlotsArgs
    Houses?: boolean | SocietiesCountOutputTypeCountHousesArgs
  }

  // Custom InputTypes
  /**
   * SocietiesCountOutputType without action
   */
  export type SocietiesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SocietiesCountOutputType
     */
    select?: SocietiesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SocietiesCountOutputType without action
   */
  export type SocietiesCountOutputTypeCountPlotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlotsWhereInput
  }

  /**
   * SocietiesCountOutputType without action
   */
  export type SocietiesCountOutputTypeCountHousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HousesWhereInput
  }


  /**
   * Count Type CommercialCountOutputType
   */

  export type CommercialCountOutputType = {
    Price: number
  }

  export type CommercialCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Price?: boolean | CommercialCountOutputTypeCountPriceArgs
  }

  // Custom InputTypes
  /**
   * CommercialCountOutputType without action
   */
  export type CommercialCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CommercialCountOutputType
     */
    select?: CommercialCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CommercialCountOutputType without action
   */
  export type CommercialCountOutputTypeCountPriceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    contact: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    contact: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    contact: number
    isActive: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    contact?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    contact?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    contact?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    name: string
    email: string
    contact: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    contact?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    contact?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    contact?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      contact: string | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'Int'>
    readonly name: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly contact: FieldRef<"User", 'String'>
    readonly isActive: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
  }


  /**
   * Model Buildings
   */

  export type AggregateBuildings = {
    _count: BuildingsCountAggregateOutputType | null
    _avg: BuildingsAvgAggregateOutputType | null
    _sum: BuildingsSumAggregateOutputType | null
    _min: BuildingsMinAggregateOutputType | null
    _max: BuildingsMaxAggregateOutputType | null
  }

  export type BuildingsAvgAggregateOutputType = {
    id: number | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
  }

  export type BuildingsSumAggregateOutputType = {
    id: number | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
  }

  export type BuildingsMinAggregateOutputType = {
    id: number | null
    name: string | null
    city: string | null
    status: string | null
    is_centrally_air_conditioned: string | null
    has_security: string | null
    has_escalators: string | null
    has_food_court: string | null
    has_entertainment_area: string | null
    has_none: string | null
    type_mixed_use: string | null
    type_retail: string | null
    type_offices: string | null
    type_apartments: string | null
    type_other: string | null
    zone: string | null
    area: string | null
    address: string | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    builder_name: string | null
    building_rank: string | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_studio: string | null
    apartments_has_type_1_bed: string | null
    apartments_has_type_2_bed: string | null
    apartments_has_type_3_bed: string | null
    apartments_has_type_4_bed: string | null
    apartments_has_type_5_bed: string | null
    apartments_has_type_duplex: string | null
    apartments_has_type_penthouse: string | null
    apartments_has_servant_quarter: string | null
    has_furnished: string | null
    has_semi_furnished: string | null
    has_service_apartments: string | null
    has_hotel_suites_apartments: string | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    retail_floors_brands: string | null
    has_fashion_health: string | null
    has_electronics_appliancecs: string | null
    has_home_living: string | null
    has_restaurants_courts: string | null
    has_bakery_ice: string | null
    has_grocery_supermarkets: string | null
    has_banks_atm: string | null
    has_real_estate: string | null
    has_labs_pharmacies: string | null
    has_play_fitness: string | null
    has_swimming_pool: string | null
    has_cinema: string | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
    survey_date: string | null
    surveyor_name: string | null
    building_survery_remarks: string | null
    building_draft: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BuildingsMaxAggregateOutputType = {
    id: number | null
    name: string | null
    city: string | null
    status: string | null
    is_centrally_air_conditioned: string | null
    has_security: string | null
    has_escalators: string | null
    has_food_court: string | null
    has_entertainment_area: string | null
    has_none: string | null
    type_mixed_use: string | null
    type_retail: string | null
    type_offices: string | null
    type_apartments: string | null
    type_other: string | null
    zone: string | null
    area: string | null
    address: string | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    builder_name: string | null
    building_rank: string | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_studio: string | null
    apartments_has_type_1_bed: string | null
    apartments_has_type_2_bed: string | null
    apartments_has_type_3_bed: string | null
    apartments_has_type_4_bed: string | null
    apartments_has_type_5_bed: string | null
    apartments_has_type_duplex: string | null
    apartments_has_type_penthouse: string | null
    apartments_has_servant_quarter: string | null
    has_furnished: string | null
    has_semi_furnished: string | null
    has_service_apartments: string | null
    has_hotel_suites_apartments: string | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    retail_floors_brands: string | null
    has_fashion_health: string | null
    has_electronics_appliancecs: string | null
    has_home_living: string | null
    has_restaurants_courts: string | null
    has_bakery_ice: string | null
    has_grocery_supermarkets: string | null
    has_banks_atm: string | null
    has_real_estate: string | null
    has_labs_pharmacies: string | null
    has_play_fitness: string | null
    has_swimming_pool: string | null
    has_cinema: string | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
    survey_date: string | null
    surveyor_name: string | null
    building_survery_remarks: string | null
    building_draft: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type BuildingsCountAggregateOutputType = {
    id: number
    name: number
    city: number
    status: number
    is_centrally_air_conditioned: number
    has_security: number
    has_escalators: number
    has_food_court: number
    has_entertainment_area: number
    has_none: number
    type_mixed_use: number
    type_retail: number
    type_offices: number
    type_apartments: number
    type_other: number
    zone: number
    area: number
    address: number
    plot_size: number
    construction_area: number
    construction_year: number
    launch_year: number
    builder_name: number
    building_rank: number
    total_floors: number
    parking_floors: number
    apartment_floors: number
    apartments_count: number
    apartments_studio: number
    apartments_has_type_1_bed: number
    apartments_has_type_2_bed: number
    apartments_has_type_3_bed: number
    apartments_has_type_4_bed: number
    apartments_has_type_5_bed: number
    apartments_has_type_duplex: number
    apartments_has_type_penthouse: number
    apartments_has_servant_quarter: number
    has_furnished: number
    has_semi_furnished: number
    has_service_apartments: number
    has_hotel_suites_apartments: number
    apartments_maintenance_fee: number
    retail_floors_count: number
    retail_floors_shops_count: number
    retail_floors_maintenance_fee: number
    retail_floors_brands: number
    has_fashion_health: number
    has_electronics_appliancecs: number
    has_home_living: number
    has_restaurants_courts: number
    has_bakery_ice: number
    has_grocery_supermarkets: number
    has_banks_atm: number
    has_real_estate: number
    has_labs_pharmacies: number
    has_play_fitness: number
    has_swimming_pool: number
    has_cinema: number
    office_floors_count: number
    offices_count: number
    office_maintenance_fee: number
    survey_date: number
    surveyor_name: number
    building_survery_remarks: number
    building_draft: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type BuildingsAvgAggregateInputType = {
    id?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
  }

  export type BuildingsSumAggregateInputType = {
    id?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
  }

  export type BuildingsMinAggregateInputType = {
    id?: true
    name?: true
    city?: true
    status?: true
    is_centrally_air_conditioned?: true
    has_security?: true
    has_escalators?: true
    has_food_court?: true
    has_entertainment_area?: true
    has_none?: true
    type_mixed_use?: true
    type_retail?: true
    type_offices?: true
    type_apartments?: true
    type_other?: true
    zone?: true
    area?: true
    address?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    builder_name?: true
    building_rank?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_studio?: true
    apartments_has_type_1_bed?: true
    apartments_has_type_2_bed?: true
    apartments_has_type_3_bed?: true
    apartments_has_type_4_bed?: true
    apartments_has_type_5_bed?: true
    apartments_has_type_duplex?: true
    apartments_has_type_penthouse?: true
    apartments_has_servant_quarter?: true
    has_furnished?: true
    has_semi_furnished?: true
    has_service_apartments?: true
    has_hotel_suites_apartments?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    retail_floors_brands?: true
    has_fashion_health?: true
    has_electronics_appliancecs?: true
    has_home_living?: true
    has_restaurants_courts?: true
    has_bakery_ice?: true
    has_grocery_supermarkets?: true
    has_banks_atm?: true
    has_real_estate?: true
    has_labs_pharmacies?: true
    has_play_fitness?: true
    has_swimming_pool?: true
    has_cinema?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
    survey_date?: true
    surveyor_name?: true
    building_survery_remarks?: true
    building_draft?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BuildingsMaxAggregateInputType = {
    id?: true
    name?: true
    city?: true
    status?: true
    is_centrally_air_conditioned?: true
    has_security?: true
    has_escalators?: true
    has_food_court?: true
    has_entertainment_area?: true
    has_none?: true
    type_mixed_use?: true
    type_retail?: true
    type_offices?: true
    type_apartments?: true
    type_other?: true
    zone?: true
    area?: true
    address?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    builder_name?: true
    building_rank?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_studio?: true
    apartments_has_type_1_bed?: true
    apartments_has_type_2_bed?: true
    apartments_has_type_3_bed?: true
    apartments_has_type_4_bed?: true
    apartments_has_type_5_bed?: true
    apartments_has_type_duplex?: true
    apartments_has_type_penthouse?: true
    apartments_has_servant_quarter?: true
    has_furnished?: true
    has_semi_furnished?: true
    has_service_apartments?: true
    has_hotel_suites_apartments?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    retail_floors_brands?: true
    has_fashion_health?: true
    has_electronics_appliancecs?: true
    has_home_living?: true
    has_restaurants_courts?: true
    has_bakery_ice?: true
    has_grocery_supermarkets?: true
    has_banks_atm?: true
    has_real_estate?: true
    has_labs_pharmacies?: true
    has_play_fitness?: true
    has_swimming_pool?: true
    has_cinema?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
    survey_date?: true
    surveyor_name?: true
    building_survery_remarks?: true
    building_draft?: true
    createdAt?: true
    updatedAt?: true
  }

  export type BuildingsCountAggregateInputType = {
    id?: true
    name?: true
    city?: true
    status?: true
    is_centrally_air_conditioned?: true
    has_security?: true
    has_escalators?: true
    has_food_court?: true
    has_entertainment_area?: true
    has_none?: true
    type_mixed_use?: true
    type_retail?: true
    type_offices?: true
    type_apartments?: true
    type_other?: true
    zone?: true
    area?: true
    address?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    builder_name?: true
    building_rank?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_studio?: true
    apartments_has_type_1_bed?: true
    apartments_has_type_2_bed?: true
    apartments_has_type_3_bed?: true
    apartments_has_type_4_bed?: true
    apartments_has_type_5_bed?: true
    apartments_has_type_duplex?: true
    apartments_has_type_penthouse?: true
    apartments_has_servant_quarter?: true
    has_furnished?: true
    has_semi_furnished?: true
    has_service_apartments?: true
    has_hotel_suites_apartments?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    retail_floors_brands?: true
    has_fashion_health?: true
    has_electronics_appliancecs?: true
    has_home_living?: true
    has_restaurants_courts?: true
    has_bakery_ice?: true
    has_grocery_supermarkets?: true
    has_banks_atm?: true
    has_real_estate?: true
    has_labs_pharmacies?: true
    has_play_fitness?: true
    has_swimming_pool?: true
    has_cinema?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
    survey_date?: true
    surveyor_name?: true
    building_survery_remarks?: true
    building_draft?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type BuildingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Buildings to aggregate.
     */
    where?: BuildingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Buildings to fetch.
     */
    orderBy?: BuildingsOrderByWithRelationInput | BuildingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BuildingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Buildings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Buildings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Buildings
    **/
    _count?: true | BuildingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BuildingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BuildingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BuildingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BuildingsMaxAggregateInputType
  }

  export type GetBuildingsAggregateType<T extends BuildingsAggregateArgs> = {
        [P in keyof T & keyof AggregateBuildings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBuildings[P]>
      : GetScalarType<T[P], AggregateBuildings[P]>
  }




  export type BuildingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BuildingsWhereInput
    orderBy?: BuildingsOrderByWithAggregationInput | BuildingsOrderByWithAggregationInput[]
    by: BuildingsScalarFieldEnum[] | BuildingsScalarFieldEnum
    having?: BuildingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BuildingsCountAggregateInputType | true
    _avg?: BuildingsAvgAggregateInputType
    _sum?: BuildingsSumAggregateInputType
    _min?: BuildingsMinAggregateInputType
    _max?: BuildingsMaxAggregateInputType
  }

  export type BuildingsGroupByOutputType = {
    id: number
    name: string
    city: string
    status: string | null
    is_centrally_air_conditioned: string | null
    has_security: string | null
    has_escalators: string | null
    has_food_court: string | null
    has_entertainment_area: string | null
    has_none: string | null
    type_mixed_use: string | null
    type_retail: string | null
    type_offices: string | null
    type_apartments: string | null
    type_other: string | null
    zone: string | null
    area: string | null
    address: string | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    builder_name: string | null
    building_rank: string | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_studio: string | null
    apartments_has_type_1_bed: string | null
    apartments_has_type_2_bed: string | null
    apartments_has_type_3_bed: string | null
    apartments_has_type_4_bed: string | null
    apartments_has_type_5_bed: string | null
    apartments_has_type_duplex: string | null
    apartments_has_type_penthouse: string | null
    apartments_has_servant_quarter: string | null
    has_furnished: string | null
    has_semi_furnished: string | null
    has_service_apartments: string | null
    has_hotel_suites_apartments: string | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    retail_floors_brands: string | null
    has_fashion_health: string | null
    has_electronics_appliancecs: string | null
    has_home_living: string | null
    has_restaurants_courts: string | null
    has_bakery_ice: string | null
    has_grocery_supermarkets: string | null
    has_banks_atm: string | null
    has_real_estate: string | null
    has_labs_pharmacies: string | null
    has_play_fitness: string | null
    has_swimming_pool: string | null
    has_cinema: string | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
    survey_date: string | null
    surveyor_name: string | null
    building_survery_remarks: string | null
    building_draft: string | null
    createdAt: Date
    updatedAt: Date
    _count: BuildingsCountAggregateOutputType | null
    _avg: BuildingsAvgAggregateOutputType | null
    _sum: BuildingsSumAggregateOutputType | null
    _min: BuildingsMinAggregateOutputType | null
    _max: BuildingsMaxAggregateOutputType | null
  }

  type GetBuildingsGroupByPayload<T extends BuildingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BuildingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BuildingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BuildingsGroupByOutputType[P]>
            : GetScalarType<T[P], BuildingsGroupByOutputType[P]>
        }
      >
    >


  export type BuildingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    city?: boolean
    status?: boolean
    is_centrally_air_conditioned?: boolean
    has_security?: boolean
    has_escalators?: boolean
    has_food_court?: boolean
    has_entertainment_area?: boolean
    has_none?: boolean
    type_mixed_use?: boolean
    type_retail?: boolean
    type_offices?: boolean
    type_apartments?: boolean
    type_other?: boolean
    zone?: boolean
    area?: boolean
    address?: boolean
    plot_size?: boolean
    construction_area?: boolean
    construction_year?: boolean
    launch_year?: boolean
    builder_name?: boolean
    building_rank?: boolean
    total_floors?: boolean
    parking_floors?: boolean
    apartment_floors?: boolean
    apartments_count?: boolean
    apartments_studio?: boolean
    apartments_has_type_1_bed?: boolean
    apartments_has_type_2_bed?: boolean
    apartments_has_type_3_bed?: boolean
    apartments_has_type_4_bed?: boolean
    apartments_has_type_5_bed?: boolean
    apartments_has_type_duplex?: boolean
    apartments_has_type_penthouse?: boolean
    apartments_has_servant_quarter?: boolean
    has_furnished?: boolean
    has_semi_furnished?: boolean
    has_service_apartments?: boolean
    has_hotel_suites_apartments?: boolean
    apartments_maintenance_fee?: boolean
    retail_floors_count?: boolean
    retail_floors_shops_count?: boolean
    retail_floors_maintenance_fee?: boolean
    retail_floors_brands?: boolean
    has_fashion_health?: boolean
    has_electronics_appliancecs?: boolean
    has_home_living?: boolean
    has_restaurants_courts?: boolean
    has_bakery_ice?: boolean
    has_grocery_supermarkets?: boolean
    has_banks_atm?: boolean
    has_real_estate?: boolean
    has_labs_pharmacies?: boolean
    has_play_fitness?: boolean
    has_swimming_pool?: boolean
    has_cinema?: boolean
    office_floors_count?: boolean
    offices_count?: boolean
    office_maintenance_fee?: boolean
    survey_date?: boolean
    surveyor_name?: boolean
    building_survery_remarks?: boolean
    building_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    floors?: boolean | Buildings$floorsArgs<ExtArgs>
    _count?: boolean | BuildingsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["buildings"]>

  export type BuildingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    city?: boolean
    status?: boolean
    is_centrally_air_conditioned?: boolean
    has_security?: boolean
    has_escalators?: boolean
    has_food_court?: boolean
    has_entertainment_area?: boolean
    has_none?: boolean
    type_mixed_use?: boolean
    type_retail?: boolean
    type_offices?: boolean
    type_apartments?: boolean
    type_other?: boolean
    zone?: boolean
    area?: boolean
    address?: boolean
    plot_size?: boolean
    construction_area?: boolean
    construction_year?: boolean
    launch_year?: boolean
    builder_name?: boolean
    building_rank?: boolean
    total_floors?: boolean
    parking_floors?: boolean
    apartment_floors?: boolean
    apartments_count?: boolean
    apartments_studio?: boolean
    apartments_has_type_1_bed?: boolean
    apartments_has_type_2_bed?: boolean
    apartments_has_type_3_bed?: boolean
    apartments_has_type_4_bed?: boolean
    apartments_has_type_5_bed?: boolean
    apartments_has_type_duplex?: boolean
    apartments_has_type_penthouse?: boolean
    apartments_has_servant_quarter?: boolean
    has_furnished?: boolean
    has_semi_furnished?: boolean
    has_service_apartments?: boolean
    has_hotel_suites_apartments?: boolean
    apartments_maintenance_fee?: boolean
    retail_floors_count?: boolean
    retail_floors_shops_count?: boolean
    retail_floors_maintenance_fee?: boolean
    retail_floors_brands?: boolean
    has_fashion_health?: boolean
    has_electronics_appliancecs?: boolean
    has_home_living?: boolean
    has_restaurants_courts?: boolean
    has_bakery_ice?: boolean
    has_grocery_supermarkets?: boolean
    has_banks_atm?: boolean
    has_real_estate?: boolean
    has_labs_pharmacies?: boolean
    has_play_fitness?: boolean
    has_swimming_pool?: boolean
    has_cinema?: boolean
    office_floors_count?: boolean
    offices_count?: boolean
    office_maintenance_fee?: boolean
    survey_date?: boolean
    surveyor_name?: boolean
    building_survery_remarks?: boolean
    building_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["buildings"]>

  export type BuildingsSelectScalar = {
    id?: boolean
    name?: boolean
    city?: boolean
    status?: boolean
    is_centrally_air_conditioned?: boolean
    has_security?: boolean
    has_escalators?: boolean
    has_food_court?: boolean
    has_entertainment_area?: boolean
    has_none?: boolean
    type_mixed_use?: boolean
    type_retail?: boolean
    type_offices?: boolean
    type_apartments?: boolean
    type_other?: boolean
    zone?: boolean
    area?: boolean
    address?: boolean
    plot_size?: boolean
    construction_area?: boolean
    construction_year?: boolean
    launch_year?: boolean
    builder_name?: boolean
    building_rank?: boolean
    total_floors?: boolean
    parking_floors?: boolean
    apartment_floors?: boolean
    apartments_count?: boolean
    apartments_studio?: boolean
    apartments_has_type_1_bed?: boolean
    apartments_has_type_2_bed?: boolean
    apartments_has_type_3_bed?: boolean
    apartments_has_type_4_bed?: boolean
    apartments_has_type_5_bed?: boolean
    apartments_has_type_duplex?: boolean
    apartments_has_type_penthouse?: boolean
    apartments_has_servant_quarter?: boolean
    has_furnished?: boolean
    has_semi_furnished?: boolean
    has_service_apartments?: boolean
    has_hotel_suites_apartments?: boolean
    apartments_maintenance_fee?: boolean
    retail_floors_count?: boolean
    retail_floors_shops_count?: boolean
    retail_floors_maintenance_fee?: boolean
    retail_floors_brands?: boolean
    has_fashion_health?: boolean
    has_electronics_appliancecs?: boolean
    has_home_living?: boolean
    has_restaurants_courts?: boolean
    has_bakery_ice?: boolean
    has_grocery_supermarkets?: boolean
    has_banks_atm?: boolean
    has_real_estate?: boolean
    has_labs_pharmacies?: boolean
    has_play_fitness?: boolean
    has_swimming_pool?: boolean
    has_cinema?: boolean
    office_floors_count?: boolean
    offices_count?: boolean
    office_maintenance_fee?: boolean
    survey_date?: boolean
    surveyor_name?: boolean
    building_survery_remarks?: boolean
    building_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type BuildingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    floors?: boolean | Buildings$floorsArgs<ExtArgs>
    _count?: boolean | BuildingsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type BuildingsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $BuildingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Buildings"
    objects: {
      floors: Prisma.$FloorsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      city: string
      status: string | null
      is_centrally_air_conditioned: string | null
      has_security: string | null
      has_escalators: string | null
      has_food_court: string | null
      has_entertainment_area: string | null
      has_none: string | null
      type_mixed_use: string | null
      type_retail: string | null
      type_offices: string | null
      type_apartments: string | null
      type_other: string | null
      zone: string | null
      area: string | null
      address: string | null
      plot_size: number | null
      construction_area: number | null
      construction_year: number | null
      launch_year: number | null
      builder_name: string | null
      building_rank: string | null
      total_floors: number | null
      parking_floors: number | null
      apartment_floors: number | null
      apartments_count: number | null
      apartments_studio: string | null
      apartments_has_type_1_bed: string | null
      apartments_has_type_2_bed: string | null
      apartments_has_type_3_bed: string | null
      apartments_has_type_4_bed: string | null
      apartments_has_type_5_bed: string | null
      apartments_has_type_duplex: string | null
      apartments_has_type_penthouse: string | null
      apartments_has_servant_quarter: string | null
      has_furnished: string | null
      has_semi_furnished: string | null
      has_service_apartments: string | null
      has_hotel_suites_apartments: string | null
      apartments_maintenance_fee: number | null
      retail_floors_count: number | null
      retail_floors_shops_count: number | null
      retail_floors_maintenance_fee: number | null
      retail_floors_brands: string | null
      has_fashion_health: string | null
      has_electronics_appliancecs: string | null
      has_home_living: string | null
      has_restaurants_courts: string | null
      has_bakery_ice: string | null
      has_grocery_supermarkets: string | null
      has_banks_atm: string | null
      has_real_estate: string | null
      has_labs_pharmacies: string | null
      has_play_fitness: string | null
      has_swimming_pool: string | null
      has_cinema: string | null
      office_floors_count: number | null
      offices_count: number | null
      office_maintenance_fee: number | null
      survey_date: string | null
      surveyor_name: string | null
      building_survery_remarks: string | null
      building_draft: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["buildings"]>
    composites: {}
  }

  type BuildingsGetPayload<S extends boolean | null | undefined | BuildingsDefaultArgs> = $Result.GetResult<Prisma.$BuildingsPayload, S>

  type BuildingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BuildingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BuildingsCountAggregateInputType | true
    }

  export interface BuildingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Buildings'], meta: { name: 'Buildings' } }
    /**
     * Find zero or one Buildings that matches the filter.
     * @param {BuildingsFindUniqueArgs} args - Arguments to find a Buildings
     * @example
     * // Get one Buildings
     * const buildings = await prisma.buildings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BuildingsFindUniqueArgs>(args: SelectSubset<T, BuildingsFindUniqueArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Buildings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BuildingsFindUniqueOrThrowArgs} args - Arguments to find a Buildings
     * @example
     * // Get one Buildings
     * const buildings = await prisma.buildings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BuildingsFindUniqueOrThrowArgs>(args: SelectSubset<T, BuildingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Buildings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuildingsFindFirstArgs} args - Arguments to find a Buildings
     * @example
     * // Get one Buildings
     * const buildings = await prisma.buildings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BuildingsFindFirstArgs>(args?: SelectSubset<T, BuildingsFindFirstArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Buildings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuildingsFindFirstOrThrowArgs} args - Arguments to find a Buildings
     * @example
     * // Get one Buildings
     * const buildings = await prisma.buildings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BuildingsFindFirstOrThrowArgs>(args?: SelectSubset<T, BuildingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Buildings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuildingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Buildings
     * const buildings = await prisma.buildings.findMany()
     * 
     * // Get first 10 Buildings
     * const buildings = await prisma.buildings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const buildingsWithIdOnly = await prisma.buildings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BuildingsFindManyArgs>(args?: SelectSubset<T, BuildingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Buildings.
     * @param {BuildingsCreateArgs} args - Arguments to create a Buildings.
     * @example
     * // Create one Buildings
     * const Buildings = await prisma.buildings.create({
     *   data: {
     *     // ... data to create a Buildings
     *   }
     * })
     * 
     */
    create<T extends BuildingsCreateArgs>(args: SelectSubset<T, BuildingsCreateArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Buildings.
     * @param {BuildingsCreateManyArgs} args - Arguments to create many Buildings.
     * @example
     * // Create many Buildings
     * const buildings = await prisma.buildings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BuildingsCreateManyArgs>(args?: SelectSubset<T, BuildingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Buildings and returns the data saved in the database.
     * @param {BuildingsCreateManyAndReturnArgs} args - Arguments to create many Buildings.
     * @example
     * // Create many Buildings
     * const buildings = await prisma.buildings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Buildings and only return the `id`
     * const buildingsWithIdOnly = await prisma.buildings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends BuildingsCreateManyAndReturnArgs>(args?: SelectSubset<T, BuildingsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Buildings.
     * @param {BuildingsDeleteArgs} args - Arguments to delete one Buildings.
     * @example
     * // Delete one Buildings
     * const Buildings = await prisma.buildings.delete({
     *   where: {
     *     // ... filter to delete one Buildings
     *   }
     * })
     * 
     */
    delete<T extends BuildingsDeleteArgs>(args: SelectSubset<T, BuildingsDeleteArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Buildings.
     * @param {BuildingsUpdateArgs} args - Arguments to update one Buildings.
     * @example
     * // Update one Buildings
     * const buildings = await prisma.buildings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BuildingsUpdateArgs>(args: SelectSubset<T, BuildingsUpdateArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Buildings.
     * @param {BuildingsDeleteManyArgs} args - Arguments to filter Buildings to delete.
     * @example
     * // Delete a few Buildings
     * const { count } = await prisma.buildings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BuildingsDeleteManyArgs>(args?: SelectSubset<T, BuildingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buildings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuildingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Buildings
     * const buildings = await prisma.buildings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BuildingsUpdateManyArgs>(args: SelectSubset<T, BuildingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Buildings.
     * @param {BuildingsUpsertArgs} args - Arguments to update or create a Buildings.
     * @example
     * // Update or create a Buildings
     * const buildings = await prisma.buildings.upsert({
     *   create: {
     *     // ... data to create a Buildings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Buildings we want to update
     *   }
     * })
     */
    upsert<T extends BuildingsUpsertArgs>(args: SelectSubset<T, BuildingsUpsertArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Buildings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuildingsCountArgs} args - Arguments to filter Buildings to count.
     * @example
     * // Count the number of Buildings
     * const count = await prisma.buildings.count({
     *   where: {
     *     // ... the filter for the Buildings we want to count
     *   }
     * })
    **/
    count<T extends BuildingsCountArgs>(
      args?: Subset<T, BuildingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BuildingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Buildings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuildingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BuildingsAggregateArgs>(args: Subset<T, BuildingsAggregateArgs>): Prisma.PrismaPromise<GetBuildingsAggregateType<T>>

    /**
     * Group by Buildings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BuildingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BuildingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BuildingsGroupByArgs['orderBy'] }
        : { orderBy?: BuildingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BuildingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBuildingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Buildings model
   */
  readonly fields: BuildingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Buildings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BuildingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    floors<T extends Buildings$floorsArgs<ExtArgs> = {}>(args?: Subset<T, Buildings$floorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Buildings model
   */ 
  interface BuildingsFieldRefs {
    readonly id: FieldRef<"Buildings", 'Int'>
    readonly name: FieldRef<"Buildings", 'String'>
    readonly city: FieldRef<"Buildings", 'String'>
    readonly status: FieldRef<"Buildings", 'String'>
    readonly is_centrally_air_conditioned: FieldRef<"Buildings", 'String'>
    readonly has_security: FieldRef<"Buildings", 'String'>
    readonly has_escalators: FieldRef<"Buildings", 'String'>
    readonly has_food_court: FieldRef<"Buildings", 'String'>
    readonly has_entertainment_area: FieldRef<"Buildings", 'String'>
    readonly has_none: FieldRef<"Buildings", 'String'>
    readonly type_mixed_use: FieldRef<"Buildings", 'String'>
    readonly type_retail: FieldRef<"Buildings", 'String'>
    readonly type_offices: FieldRef<"Buildings", 'String'>
    readonly type_apartments: FieldRef<"Buildings", 'String'>
    readonly type_other: FieldRef<"Buildings", 'String'>
    readonly zone: FieldRef<"Buildings", 'String'>
    readonly area: FieldRef<"Buildings", 'String'>
    readonly address: FieldRef<"Buildings", 'String'>
    readonly plot_size: FieldRef<"Buildings", 'Int'>
    readonly construction_area: FieldRef<"Buildings", 'Int'>
    readonly construction_year: FieldRef<"Buildings", 'Int'>
    readonly launch_year: FieldRef<"Buildings", 'Int'>
    readonly builder_name: FieldRef<"Buildings", 'String'>
    readonly building_rank: FieldRef<"Buildings", 'String'>
    readonly total_floors: FieldRef<"Buildings", 'Int'>
    readonly parking_floors: FieldRef<"Buildings", 'Int'>
    readonly apartment_floors: FieldRef<"Buildings", 'Int'>
    readonly apartments_count: FieldRef<"Buildings", 'Int'>
    readonly apartments_studio: FieldRef<"Buildings", 'String'>
    readonly apartments_has_type_1_bed: FieldRef<"Buildings", 'String'>
    readonly apartments_has_type_2_bed: FieldRef<"Buildings", 'String'>
    readonly apartments_has_type_3_bed: FieldRef<"Buildings", 'String'>
    readonly apartments_has_type_4_bed: FieldRef<"Buildings", 'String'>
    readonly apartments_has_type_5_bed: FieldRef<"Buildings", 'String'>
    readonly apartments_has_type_duplex: FieldRef<"Buildings", 'String'>
    readonly apartments_has_type_penthouse: FieldRef<"Buildings", 'String'>
    readonly apartments_has_servant_quarter: FieldRef<"Buildings", 'String'>
    readonly has_furnished: FieldRef<"Buildings", 'String'>
    readonly has_semi_furnished: FieldRef<"Buildings", 'String'>
    readonly has_service_apartments: FieldRef<"Buildings", 'String'>
    readonly has_hotel_suites_apartments: FieldRef<"Buildings", 'String'>
    readonly apartments_maintenance_fee: FieldRef<"Buildings", 'Int'>
    readonly retail_floors_count: FieldRef<"Buildings", 'Int'>
    readonly retail_floors_shops_count: FieldRef<"Buildings", 'Int'>
    readonly retail_floors_maintenance_fee: FieldRef<"Buildings", 'Int'>
    readonly retail_floors_brands: FieldRef<"Buildings", 'String'>
    readonly has_fashion_health: FieldRef<"Buildings", 'String'>
    readonly has_electronics_appliancecs: FieldRef<"Buildings", 'String'>
    readonly has_home_living: FieldRef<"Buildings", 'String'>
    readonly has_restaurants_courts: FieldRef<"Buildings", 'String'>
    readonly has_bakery_ice: FieldRef<"Buildings", 'String'>
    readonly has_grocery_supermarkets: FieldRef<"Buildings", 'String'>
    readonly has_banks_atm: FieldRef<"Buildings", 'String'>
    readonly has_real_estate: FieldRef<"Buildings", 'String'>
    readonly has_labs_pharmacies: FieldRef<"Buildings", 'String'>
    readonly has_play_fitness: FieldRef<"Buildings", 'String'>
    readonly has_swimming_pool: FieldRef<"Buildings", 'String'>
    readonly has_cinema: FieldRef<"Buildings", 'String'>
    readonly office_floors_count: FieldRef<"Buildings", 'Int'>
    readonly offices_count: FieldRef<"Buildings", 'Int'>
    readonly office_maintenance_fee: FieldRef<"Buildings", 'Int'>
    readonly survey_date: FieldRef<"Buildings", 'String'>
    readonly surveyor_name: FieldRef<"Buildings", 'String'>
    readonly building_survery_remarks: FieldRef<"Buildings", 'String'>
    readonly building_draft: FieldRef<"Buildings", 'String'>
    readonly createdAt: FieldRef<"Buildings", 'DateTime'>
    readonly updatedAt: FieldRef<"Buildings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Buildings findUnique
   */
  export type BuildingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * Filter, which Buildings to fetch.
     */
    where: BuildingsWhereUniqueInput
  }

  /**
   * Buildings findUniqueOrThrow
   */
  export type BuildingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * Filter, which Buildings to fetch.
     */
    where: BuildingsWhereUniqueInput
  }

  /**
   * Buildings findFirst
   */
  export type BuildingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * Filter, which Buildings to fetch.
     */
    where?: BuildingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Buildings to fetch.
     */
    orderBy?: BuildingsOrderByWithRelationInput | BuildingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Buildings.
     */
    cursor?: BuildingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Buildings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Buildings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Buildings.
     */
    distinct?: BuildingsScalarFieldEnum | BuildingsScalarFieldEnum[]
  }

  /**
   * Buildings findFirstOrThrow
   */
  export type BuildingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * Filter, which Buildings to fetch.
     */
    where?: BuildingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Buildings to fetch.
     */
    orderBy?: BuildingsOrderByWithRelationInput | BuildingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Buildings.
     */
    cursor?: BuildingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Buildings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Buildings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Buildings.
     */
    distinct?: BuildingsScalarFieldEnum | BuildingsScalarFieldEnum[]
  }

  /**
   * Buildings findMany
   */
  export type BuildingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * Filter, which Buildings to fetch.
     */
    where?: BuildingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Buildings to fetch.
     */
    orderBy?: BuildingsOrderByWithRelationInput | BuildingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Buildings.
     */
    cursor?: BuildingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Buildings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Buildings.
     */
    skip?: number
    distinct?: BuildingsScalarFieldEnum | BuildingsScalarFieldEnum[]
  }

  /**
   * Buildings create
   */
  export type BuildingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * The data needed to create a Buildings.
     */
    data: XOR<BuildingsCreateInput, BuildingsUncheckedCreateInput>
  }

  /**
   * Buildings createMany
   */
  export type BuildingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Buildings.
     */
    data: BuildingsCreateManyInput | BuildingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Buildings createManyAndReturn
   */
  export type BuildingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Buildings.
     */
    data: BuildingsCreateManyInput | BuildingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Buildings update
   */
  export type BuildingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * The data needed to update a Buildings.
     */
    data: XOR<BuildingsUpdateInput, BuildingsUncheckedUpdateInput>
    /**
     * Choose, which Buildings to update.
     */
    where: BuildingsWhereUniqueInput
  }

  /**
   * Buildings updateMany
   */
  export type BuildingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Buildings.
     */
    data: XOR<BuildingsUpdateManyMutationInput, BuildingsUncheckedUpdateManyInput>
    /**
     * Filter which Buildings to update
     */
    where?: BuildingsWhereInput
  }

  /**
   * Buildings upsert
   */
  export type BuildingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * The filter to search for the Buildings to update in case it exists.
     */
    where: BuildingsWhereUniqueInput
    /**
     * In case the Buildings found by the `where` argument doesn't exist, create a new Buildings with this data.
     */
    create: XOR<BuildingsCreateInput, BuildingsUncheckedCreateInput>
    /**
     * In case the Buildings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BuildingsUpdateInput, BuildingsUncheckedUpdateInput>
  }

  /**
   * Buildings delete
   */
  export type BuildingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
    /**
     * Filter which Buildings to delete.
     */
    where: BuildingsWhereUniqueInput
  }

  /**
   * Buildings deleteMany
   */
  export type BuildingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Buildings to delete
     */
    where?: BuildingsWhereInput
  }

  /**
   * Buildings.floors
   */
  export type Buildings$floorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    where?: FloorsWhereInput
    orderBy?: FloorsOrderByWithRelationInput | FloorsOrderByWithRelationInput[]
    cursor?: FloorsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FloorsScalarFieldEnum | FloorsScalarFieldEnum[]
  }

  /**
   * Buildings without action
   */
  export type BuildingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings
     */
    select?: BuildingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BuildingsInclude<ExtArgs> | null
  }


  /**
   * Model Buildings_history
   */

  export type AggregateBuildings_history = {
    _count: Buildings_historyCountAggregateOutputType | null
    _avg: Buildings_historyAvgAggregateOutputType | null
    _sum: Buildings_historySumAggregateOutputType | null
    _min: Buildings_historyMinAggregateOutputType | null
    _max: Buildings_historyMaxAggregateOutputType | null
  }

  export type Buildings_historyAvgAggregateOutputType = {
    id: number | null
    building_id: number | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
  }

  export type Buildings_historySumAggregateOutputType = {
    id: number | null
    building_id: number | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
  }

  export type Buildings_historyMinAggregateOutputType = {
    id: number | null
    building_id: number | null
    name: string | null
    city: string | null
    status: string | null
    is_centrally_air_conditioned: string | null
    has_security: string | null
    has_escalators: string | null
    has_food_court: string | null
    has_entertainment_area: string | null
    has_none: string | null
    type_mixed_use: string | null
    type_retail: string | null
    type_offices: string | null
    type_apartments: string | null
    type_other: string | null
    zone: string | null
    area: string | null
    address: string | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    builder_name: string | null
    building_rank: string | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_studio: string | null
    apartments_has_type_1_bed: string | null
    apartments_has_type_2_bed: string | null
    apartments_has_type_3_bed: string | null
    apartments_has_type_4_bed: string | null
    apartments_has_type_5_bed: string | null
    apartments_has_type_duplex: string | null
    apartments_has_type_penthouse: string | null
    apartments_has_servant_quarter: string | null
    has_furnished: string | null
    has_semi_furnished: string | null
    has_service_apartments: string | null
    has_hotel_suites_apartments: string | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    retail_floors_brands: string | null
    has_fashion_health: string | null
    has_electronics_appliancecs: string | null
    has_home_living: string | null
    has_restaurants_courts: string | null
    has_bakery_ice: string | null
    has_grocery_supermarkets: string | null
    has_banks_atm: string | null
    has_real_estate: string | null
    has_labs_pharmacies: string | null
    has_play_fitness: string | null
    has_swimming_pool: string | null
    has_cinema: string | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
    survey_date: string | null
    surveyor_name: string | null
    building_survery_remarks: string | null
    building_draft: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Buildings_historyMaxAggregateOutputType = {
    id: number | null
    building_id: number | null
    name: string | null
    city: string | null
    status: string | null
    is_centrally_air_conditioned: string | null
    has_security: string | null
    has_escalators: string | null
    has_food_court: string | null
    has_entertainment_area: string | null
    has_none: string | null
    type_mixed_use: string | null
    type_retail: string | null
    type_offices: string | null
    type_apartments: string | null
    type_other: string | null
    zone: string | null
    area: string | null
    address: string | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    builder_name: string | null
    building_rank: string | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_studio: string | null
    apartments_has_type_1_bed: string | null
    apartments_has_type_2_bed: string | null
    apartments_has_type_3_bed: string | null
    apartments_has_type_4_bed: string | null
    apartments_has_type_5_bed: string | null
    apartments_has_type_duplex: string | null
    apartments_has_type_penthouse: string | null
    apartments_has_servant_quarter: string | null
    has_furnished: string | null
    has_semi_furnished: string | null
    has_service_apartments: string | null
    has_hotel_suites_apartments: string | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    retail_floors_brands: string | null
    has_fashion_health: string | null
    has_electronics_appliancecs: string | null
    has_home_living: string | null
    has_restaurants_courts: string | null
    has_bakery_ice: string | null
    has_grocery_supermarkets: string | null
    has_banks_atm: string | null
    has_real_estate: string | null
    has_labs_pharmacies: string | null
    has_play_fitness: string | null
    has_swimming_pool: string | null
    has_cinema: string | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
    survey_date: string | null
    surveyor_name: string | null
    building_survery_remarks: string | null
    building_draft: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Buildings_historyCountAggregateOutputType = {
    id: number
    building_id: number
    name: number
    city: number
    status: number
    is_centrally_air_conditioned: number
    has_security: number
    has_escalators: number
    has_food_court: number
    has_entertainment_area: number
    has_none: number
    type_mixed_use: number
    type_retail: number
    type_offices: number
    type_apartments: number
    type_other: number
    zone: number
    area: number
    address: number
    plot_size: number
    construction_area: number
    construction_year: number
    launch_year: number
    builder_name: number
    building_rank: number
    total_floors: number
    parking_floors: number
    apartment_floors: number
    apartments_count: number
    apartments_studio: number
    apartments_has_type_1_bed: number
    apartments_has_type_2_bed: number
    apartments_has_type_3_bed: number
    apartments_has_type_4_bed: number
    apartments_has_type_5_bed: number
    apartments_has_type_duplex: number
    apartments_has_type_penthouse: number
    apartments_has_servant_quarter: number
    has_furnished: number
    has_semi_furnished: number
    has_service_apartments: number
    has_hotel_suites_apartments: number
    apartments_maintenance_fee: number
    retail_floors_count: number
    retail_floors_shops_count: number
    retail_floors_maintenance_fee: number
    retail_floors_brands: number
    has_fashion_health: number
    has_electronics_appliancecs: number
    has_home_living: number
    has_restaurants_courts: number
    has_bakery_ice: number
    has_grocery_supermarkets: number
    has_banks_atm: number
    has_real_estate: number
    has_labs_pharmacies: number
    has_play_fitness: number
    has_swimming_pool: number
    has_cinema: number
    office_floors_count: number
    offices_count: number
    office_maintenance_fee: number
    survey_date: number
    surveyor_name: number
    building_survery_remarks: number
    building_draft: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Buildings_historyAvgAggregateInputType = {
    id?: true
    building_id?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
  }

  export type Buildings_historySumAggregateInputType = {
    id?: true
    building_id?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
  }

  export type Buildings_historyMinAggregateInputType = {
    id?: true
    building_id?: true
    name?: true
    city?: true
    status?: true
    is_centrally_air_conditioned?: true
    has_security?: true
    has_escalators?: true
    has_food_court?: true
    has_entertainment_area?: true
    has_none?: true
    type_mixed_use?: true
    type_retail?: true
    type_offices?: true
    type_apartments?: true
    type_other?: true
    zone?: true
    area?: true
    address?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    builder_name?: true
    building_rank?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_studio?: true
    apartments_has_type_1_bed?: true
    apartments_has_type_2_bed?: true
    apartments_has_type_3_bed?: true
    apartments_has_type_4_bed?: true
    apartments_has_type_5_bed?: true
    apartments_has_type_duplex?: true
    apartments_has_type_penthouse?: true
    apartments_has_servant_quarter?: true
    has_furnished?: true
    has_semi_furnished?: true
    has_service_apartments?: true
    has_hotel_suites_apartments?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    retail_floors_brands?: true
    has_fashion_health?: true
    has_electronics_appliancecs?: true
    has_home_living?: true
    has_restaurants_courts?: true
    has_bakery_ice?: true
    has_grocery_supermarkets?: true
    has_banks_atm?: true
    has_real_estate?: true
    has_labs_pharmacies?: true
    has_play_fitness?: true
    has_swimming_pool?: true
    has_cinema?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
    survey_date?: true
    surveyor_name?: true
    building_survery_remarks?: true
    building_draft?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Buildings_historyMaxAggregateInputType = {
    id?: true
    building_id?: true
    name?: true
    city?: true
    status?: true
    is_centrally_air_conditioned?: true
    has_security?: true
    has_escalators?: true
    has_food_court?: true
    has_entertainment_area?: true
    has_none?: true
    type_mixed_use?: true
    type_retail?: true
    type_offices?: true
    type_apartments?: true
    type_other?: true
    zone?: true
    area?: true
    address?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    builder_name?: true
    building_rank?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_studio?: true
    apartments_has_type_1_bed?: true
    apartments_has_type_2_bed?: true
    apartments_has_type_3_bed?: true
    apartments_has_type_4_bed?: true
    apartments_has_type_5_bed?: true
    apartments_has_type_duplex?: true
    apartments_has_type_penthouse?: true
    apartments_has_servant_quarter?: true
    has_furnished?: true
    has_semi_furnished?: true
    has_service_apartments?: true
    has_hotel_suites_apartments?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    retail_floors_brands?: true
    has_fashion_health?: true
    has_electronics_appliancecs?: true
    has_home_living?: true
    has_restaurants_courts?: true
    has_bakery_ice?: true
    has_grocery_supermarkets?: true
    has_banks_atm?: true
    has_real_estate?: true
    has_labs_pharmacies?: true
    has_play_fitness?: true
    has_swimming_pool?: true
    has_cinema?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
    survey_date?: true
    surveyor_name?: true
    building_survery_remarks?: true
    building_draft?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Buildings_historyCountAggregateInputType = {
    id?: true
    building_id?: true
    name?: true
    city?: true
    status?: true
    is_centrally_air_conditioned?: true
    has_security?: true
    has_escalators?: true
    has_food_court?: true
    has_entertainment_area?: true
    has_none?: true
    type_mixed_use?: true
    type_retail?: true
    type_offices?: true
    type_apartments?: true
    type_other?: true
    zone?: true
    area?: true
    address?: true
    plot_size?: true
    construction_area?: true
    construction_year?: true
    launch_year?: true
    builder_name?: true
    building_rank?: true
    total_floors?: true
    parking_floors?: true
    apartment_floors?: true
    apartments_count?: true
    apartments_studio?: true
    apartments_has_type_1_bed?: true
    apartments_has_type_2_bed?: true
    apartments_has_type_3_bed?: true
    apartments_has_type_4_bed?: true
    apartments_has_type_5_bed?: true
    apartments_has_type_duplex?: true
    apartments_has_type_penthouse?: true
    apartments_has_servant_quarter?: true
    has_furnished?: true
    has_semi_furnished?: true
    has_service_apartments?: true
    has_hotel_suites_apartments?: true
    apartments_maintenance_fee?: true
    retail_floors_count?: true
    retail_floors_shops_count?: true
    retail_floors_maintenance_fee?: true
    retail_floors_brands?: true
    has_fashion_health?: true
    has_electronics_appliancecs?: true
    has_home_living?: true
    has_restaurants_courts?: true
    has_bakery_ice?: true
    has_grocery_supermarkets?: true
    has_banks_atm?: true
    has_real_estate?: true
    has_labs_pharmacies?: true
    has_play_fitness?: true
    has_swimming_pool?: true
    has_cinema?: true
    office_floors_count?: true
    offices_count?: true
    office_maintenance_fee?: true
    survey_date?: true
    surveyor_name?: true
    building_survery_remarks?: true
    building_draft?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Buildings_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Buildings_history to aggregate.
     */
    where?: Buildings_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Buildings_histories to fetch.
     */
    orderBy?: Buildings_historyOrderByWithRelationInput | Buildings_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Buildings_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Buildings_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Buildings_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Buildings_histories
    **/
    _count?: true | Buildings_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Buildings_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Buildings_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Buildings_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Buildings_historyMaxAggregateInputType
  }

  export type GetBuildings_historyAggregateType<T extends Buildings_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateBuildings_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBuildings_history[P]>
      : GetScalarType<T[P], AggregateBuildings_history[P]>
  }




  export type Buildings_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Buildings_historyWhereInput
    orderBy?: Buildings_historyOrderByWithAggregationInput | Buildings_historyOrderByWithAggregationInput[]
    by: Buildings_historyScalarFieldEnum[] | Buildings_historyScalarFieldEnum
    having?: Buildings_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Buildings_historyCountAggregateInputType | true
    _avg?: Buildings_historyAvgAggregateInputType
    _sum?: Buildings_historySumAggregateInputType
    _min?: Buildings_historyMinAggregateInputType
    _max?: Buildings_historyMaxAggregateInputType
  }

  export type Buildings_historyGroupByOutputType = {
    id: number
    building_id: number
    name: string
    city: string
    status: string | null
    is_centrally_air_conditioned: string | null
    has_security: string | null
    has_escalators: string | null
    has_food_court: string | null
    has_entertainment_area: string | null
    has_none: string | null
    type_mixed_use: string | null
    type_retail: string | null
    type_offices: string | null
    type_apartments: string | null
    type_other: string | null
    zone: string | null
    area: string | null
    address: string | null
    plot_size: number | null
    construction_area: number | null
    construction_year: number | null
    launch_year: number | null
    builder_name: string | null
    building_rank: string | null
    total_floors: number | null
    parking_floors: number | null
    apartment_floors: number | null
    apartments_count: number | null
    apartments_studio: string | null
    apartments_has_type_1_bed: string | null
    apartments_has_type_2_bed: string | null
    apartments_has_type_3_bed: string | null
    apartments_has_type_4_bed: string | null
    apartments_has_type_5_bed: string | null
    apartments_has_type_duplex: string | null
    apartments_has_type_penthouse: string | null
    apartments_has_servant_quarter: string | null
    has_furnished: string | null
    has_semi_furnished: string | null
    has_service_apartments: string | null
    has_hotel_suites_apartments: string | null
    apartments_maintenance_fee: number | null
    retail_floors_count: number | null
    retail_floors_shops_count: number | null
    retail_floors_maintenance_fee: number | null
    retail_floors_brands: string | null
    has_fashion_health: string | null
    has_electronics_appliancecs: string | null
    has_home_living: string | null
    has_restaurants_courts: string | null
    has_bakery_ice: string | null
    has_grocery_supermarkets: string | null
    has_banks_atm: string | null
    has_real_estate: string | null
    has_labs_pharmacies: string | null
    has_play_fitness: string | null
    has_swimming_pool: string | null
    has_cinema: string | null
    office_floors_count: number | null
    offices_count: number | null
    office_maintenance_fee: number | null
    survey_date: string | null
    surveyor_name: string | null
    building_survery_remarks: string | null
    building_draft: string | null
    createdAt: Date
    updatedAt: Date
    _count: Buildings_historyCountAggregateOutputType | null
    _avg: Buildings_historyAvgAggregateOutputType | null
    _sum: Buildings_historySumAggregateOutputType | null
    _min: Buildings_historyMinAggregateOutputType | null
    _max: Buildings_historyMaxAggregateOutputType | null
  }

  type GetBuildings_historyGroupByPayload<T extends Buildings_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Buildings_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Buildings_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Buildings_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Buildings_historyGroupByOutputType[P]>
        }
      >
    >


  export type Buildings_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    building_id?: boolean
    name?: boolean
    city?: boolean
    status?: boolean
    is_centrally_air_conditioned?: boolean
    has_security?: boolean
    has_escalators?: boolean
    has_food_court?: boolean
    has_entertainment_area?: boolean
    has_none?: boolean
    type_mixed_use?: boolean
    type_retail?: boolean
    type_offices?: boolean
    type_apartments?: boolean
    type_other?: boolean
    zone?: boolean
    area?: boolean
    address?: boolean
    plot_size?: boolean
    construction_area?: boolean
    construction_year?: boolean
    launch_year?: boolean
    builder_name?: boolean
    building_rank?: boolean
    total_floors?: boolean
    parking_floors?: boolean
    apartment_floors?: boolean
    apartments_count?: boolean
    apartments_studio?: boolean
    apartments_has_type_1_bed?: boolean
    apartments_has_type_2_bed?: boolean
    apartments_has_type_3_bed?: boolean
    apartments_has_type_4_bed?: boolean
    apartments_has_type_5_bed?: boolean
    apartments_has_type_duplex?: boolean
    apartments_has_type_penthouse?: boolean
    apartments_has_servant_quarter?: boolean
    has_furnished?: boolean
    has_semi_furnished?: boolean
    has_service_apartments?: boolean
    has_hotel_suites_apartments?: boolean
    apartments_maintenance_fee?: boolean
    retail_floors_count?: boolean
    retail_floors_shops_count?: boolean
    retail_floors_maintenance_fee?: boolean
    retail_floors_brands?: boolean
    has_fashion_health?: boolean
    has_electronics_appliancecs?: boolean
    has_home_living?: boolean
    has_restaurants_courts?: boolean
    has_bakery_ice?: boolean
    has_grocery_supermarkets?: boolean
    has_banks_atm?: boolean
    has_real_estate?: boolean
    has_labs_pharmacies?: boolean
    has_play_fitness?: boolean
    has_swimming_pool?: boolean
    has_cinema?: boolean
    office_floors_count?: boolean
    offices_count?: boolean
    office_maintenance_fee?: boolean
    survey_date?: boolean
    surveyor_name?: boolean
    building_survery_remarks?: boolean
    building_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["buildings_history"]>

  export type Buildings_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    building_id?: boolean
    name?: boolean
    city?: boolean
    status?: boolean
    is_centrally_air_conditioned?: boolean
    has_security?: boolean
    has_escalators?: boolean
    has_food_court?: boolean
    has_entertainment_area?: boolean
    has_none?: boolean
    type_mixed_use?: boolean
    type_retail?: boolean
    type_offices?: boolean
    type_apartments?: boolean
    type_other?: boolean
    zone?: boolean
    area?: boolean
    address?: boolean
    plot_size?: boolean
    construction_area?: boolean
    construction_year?: boolean
    launch_year?: boolean
    builder_name?: boolean
    building_rank?: boolean
    total_floors?: boolean
    parking_floors?: boolean
    apartment_floors?: boolean
    apartments_count?: boolean
    apartments_studio?: boolean
    apartments_has_type_1_bed?: boolean
    apartments_has_type_2_bed?: boolean
    apartments_has_type_3_bed?: boolean
    apartments_has_type_4_bed?: boolean
    apartments_has_type_5_bed?: boolean
    apartments_has_type_duplex?: boolean
    apartments_has_type_penthouse?: boolean
    apartments_has_servant_quarter?: boolean
    has_furnished?: boolean
    has_semi_furnished?: boolean
    has_service_apartments?: boolean
    has_hotel_suites_apartments?: boolean
    apartments_maintenance_fee?: boolean
    retail_floors_count?: boolean
    retail_floors_shops_count?: boolean
    retail_floors_maintenance_fee?: boolean
    retail_floors_brands?: boolean
    has_fashion_health?: boolean
    has_electronics_appliancecs?: boolean
    has_home_living?: boolean
    has_restaurants_courts?: boolean
    has_bakery_ice?: boolean
    has_grocery_supermarkets?: boolean
    has_banks_atm?: boolean
    has_real_estate?: boolean
    has_labs_pharmacies?: boolean
    has_play_fitness?: boolean
    has_swimming_pool?: boolean
    has_cinema?: boolean
    office_floors_count?: boolean
    offices_count?: boolean
    office_maintenance_fee?: boolean
    survey_date?: boolean
    surveyor_name?: boolean
    building_survery_remarks?: boolean
    building_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["buildings_history"]>

  export type Buildings_historySelectScalar = {
    id?: boolean
    building_id?: boolean
    name?: boolean
    city?: boolean
    status?: boolean
    is_centrally_air_conditioned?: boolean
    has_security?: boolean
    has_escalators?: boolean
    has_food_court?: boolean
    has_entertainment_area?: boolean
    has_none?: boolean
    type_mixed_use?: boolean
    type_retail?: boolean
    type_offices?: boolean
    type_apartments?: boolean
    type_other?: boolean
    zone?: boolean
    area?: boolean
    address?: boolean
    plot_size?: boolean
    construction_area?: boolean
    construction_year?: boolean
    launch_year?: boolean
    builder_name?: boolean
    building_rank?: boolean
    total_floors?: boolean
    parking_floors?: boolean
    apartment_floors?: boolean
    apartments_count?: boolean
    apartments_studio?: boolean
    apartments_has_type_1_bed?: boolean
    apartments_has_type_2_bed?: boolean
    apartments_has_type_3_bed?: boolean
    apartments_has_type_4_bed?: boolean
    apartments_has_type_5_bed?: boolean
    apartments_has_type_duplex?: boolean
    apartments_has_type_penthouse?: boolean
    apartments_has_servant_quarter?: boolean
    has_furnished?: boolean
    has_semi_furnished?: boolean
    has_service_apartments?: boolean
    has_hotel_suites_apartments?: boolean
    apartments_maintenance_fee?: boolean
    retail_floors_count?: boolean
    retail_floors_shops_count?: boolean
    retail_floors_maintenance_fee?: boolean
    retail_floors_brands?: boolean
    has_fashion_health?: boolean
    has_electronics_appliancecs?: boolean
    has_home_living?: boolean
    has_restaurants_courts?: boolean
    has_bakery_ice?: boolean
    has_grocery_supermarkets?: boolean
    has_banks_atm?: boolean
    has_real_estate?: boolean
    has_labs_pharmacies?: boolean
    has_play_fitness?: boolean
    has_swimming_pool?: boolean
    has_cinema?: boolean
    office_floors_count?: boolean
    offices_count?: boolean
    office_maintenance_fee?: boolean
    survey_date?: boolean
    surveyor_name?: boolean
    building_survery_remarks?: boolean
    building_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $Buildings_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Buildings_history"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      building_id: number
      name: string
      city: string
      status: string | null
      is_centrally_air_conditioned: string | null
      has_security: string | null
      has_escalators: string | null
      has_food_court: string | null
      has_entertainment_area: string | null
      has_none: string | null
      type_mixed_use: string | null
      type_retail: string | null
      type_offices: string | null
      type_apartments: string | null
      type_other: string | null
      zone: string | null
      area: string | null
      address: string | null
      plot_size: number | null
      construction_area: number | null
      construction_year: number | null
      launch_year: number | null
      builder_name: string | null
      building_rank: string | null
      total_floors: number | null
      parking_floors: number | null
      apartment_floors: number | null
      apartments_count: number | null
      apartments_studio: string | null
      apartments_has_type_1_bed: string | null
      apartments_has_type_2_bed: string | null
      apartments_has_type_3_bed: string | null
      apartments_has_type_4_bed: string | null
      apartments_has_type_5_bed: string | null
      apartments_has_type_duplex: string | null
      apartments_has_type_penthouse: string | null
      apartments_has_servant_quarter: string | null
      has_furnished: string | null
      has_semi_furnished: string | null
      has_service_apartments: string | null
      has_hotel_suites_apartments: string | null
      apartments_maintenance_fee: number | null
      retail_floors_count: number | null
      retail_floors_shops_count: number | null
      retail_floors_maintenance_fee: number | null
      retail_floors_brands: string | null
      has_fashion_health: string | null
      has_electronics_appliancecs: string | null
      has_home_living: string | null
      has_restaurants_courts: string | null
      has_bakery_ice: string | null
      has_grocery_supermarkets: string | null
      has_banks_atm: string | null
      has_real_estate: string | null
      has_labs_pharmacies: string | null
      has_play_fitness: string | null
      has_swimming_pool: string | null
      has_cinema: string | null
      office_floors_count: number | null
      offices_count: number | null
      office_maintenance_fee: number | null
      survey_date: string | null
      surveyor_name: string | null
      building_survery_remarks: string | null
      building_draft: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["buildings_history"]>
    composites: {}
  }

  type Buildings_historyGetPayload<S extends boolean | null | undefined | Buildings_historyDefaultArgs> = $Result.GetResult<Prisma.$Buildings_historyPayload, S>

  type Buildings_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Buildings_historyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Buildings_historyCountAggregateInputType | true
    }

  export interface Buildings_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Buildings_history'], meta: { name: 'Buildings_history' } }
    /**
     * Find zero or one Buildings_history that matches the filter.
     * @param {Buildings_historyFindUniqueArgs} args - Arguments to find a Buildings_history
     * @example
     * // Get one Buildings_history
     * const buildings_history = await prisma.buildings_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Buildings_historyFindUniqueArgs>(args: SelectSubset<T, Buildings_historyFindUniqueArgs<ExtArgs>>): Prisma__Buildings_historyClient<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Buildings_history that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Buildings_historyFindUniqueOrThrowArgs} args - Arguments to find a Buildings_history
     * @example
     * // Get one Buildings_history
     * const buildings_history = await prisma.buildings_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Buildings_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, Buildings_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Buildings_historyClient<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Buildings_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buildings_historyFindFirstArgs} args - Arguments to find a Buildings_history
     * @example
     * // Get one Buildings_history
     * const buildings_history = await prisma.buildings_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Buildings_historyFindFirstArgs>(args?: SelectSubset<T, Buildings_historyFindFirstArgs<ExtArgs>>): Prisma__Buildings_historyClient<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Buildings_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buildings_historyFindFirstOrThrowArgs} args - Arguments to find a Buildings_history
     * @example
     * // Get one Buildings_history
     * const buildings_history = await prisma.buildings_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Buildings_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, Buildings_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__Buildings_historyClient<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Buildings_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buildings_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Buildings_histories
     * const buildings_histories = await prisma.buildings_history.findMany()
     * 
     * // Get first 10 Buildings_histories
     * const buildings_histories = await prisma.buildings_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const buildings_historyWithIdOnly = await prisma.buildings_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Buildings_historyFindManyArgs>(args?: SelectSubset<T, Buildings_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Buildings_history.
     * @param {Buildings_historyCreateArgs} args - Arguments to create a Buildings_history.
     * @example
     * // Create one Buildings_history
     * const Buildings_history = await prisma.buildings_history.create({
     *   data: {
     *     // ... data to create a Buildings_history
     *   }
     * })
     * 
     */
    create<T extends Buildings_historyCreateArgs>(args: SelectSubset<T, Buildings_historyCreateArgs<ExtArgs>>): Prisma__Buildings_historyClient<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Buildings_histories.
     * @param {Buildings_historyCreateManyArgs} args - Arguments to create many Buildings_histories.
     * @example
     * // Create many Buildings_histories
     * const buildings_history = await prisma.buildings_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Buildings_historyCreateManyArgs>(args?: SelectSubset<T, Buildings_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Buildings_histories and returns the data saved in the database.
     * @param {Buildings_historyCreateManyAndReturnArgs} args - Arguments to create many Buildings_histories.
     * @example
     * // Create many Buildings_histories
     * const buildings_history = await prisma.buildings_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Buildings_histories and only return the `id`
     * const buildings_historyWithIdOnly = await prisma.buildings_history.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Buildings_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, Buildings_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Buildings_history.
     * @param {Buildings_historyDeleteArgs} args - Arguments to delete one Buildings_history.
     * @example
     * // Delete one Buildings_history
     * const Buildings_history = await prisma.buildings_history.delete({
     *   where: {
     *     // ... filter to delete one Buildings_history
     *   }
     * })
     * 
     */
    delete<T extends Buildings_historyDeleteArgs>(args: SelectSubset<T, Buildings_historyDeleteArgs<ExtArgs>>): Prisma__Buildings_historyClient<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Buildings_history.
     * @param {Buildings_historyUpdateArgs} args - Arguments to update one Buildings_history.
     * @example
     * // Update one Buildings_history
     * const buildings_history = await prisma.buildings_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Buildings_historyUpdateArgs>(args: SelectSubset<T, Buildings_historyUpdateArgs<ExtArgs>>): Prisma__Buildings_historyClient<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Buildings_histories.
     * @param {Buildings_historyDeleteManyArgs} args - Arguments to filter Buildings_histories to delete.
     * @example
     * // Delete a few Buildings_histories
     * const { count } = await prisma.buildings_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Buildings_historyDeleteManyArgs>(args?: SelectSubset<T, Buildings_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buildings_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buildings_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Buildings_histories
     * const buildings_history = await prisma.buildings_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Buildings_historyUpdateManyArgs>(args: SelectSubset<T, Buildings_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Buildings_history.
     * @param {Buildings_historyUpsertArgs} args - Arguments to update or create a Buildings_history.
     * @example
     * // Update or create a Buildings_history
     * const buildings_history = await prisma.buildings_history.upsert({
     *   create: {
     *     // ... data to create a Buildings_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Buildings_history we want to update
     *   }
     * })
     */
    upsert<T extends Buildings_historyUpsertArgs>(args: SelectSubset<T, Buildings_historyUpsertArgs<ExtArgs>>): Prisma__Buildings_historyClient<$Result.GetResult<Prisma.$Buildings_historyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Buildings_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buildings_historyCountArgs} args - Arguments to filter Buildings_histories to count.
     * @example
     * // Count the number of Buildings_histories
     * const count = await prisma.buildings_history.count({
     *   where: {
     *     // ... the filter for the Buildings_histories we want to count
     *   }
     * })
    **/
    count<T extends Buildings_historyCountArgs>(
      args?: Subset<T, Buildings_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Buildings_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Buildings_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buildings_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Buildings_historyAggregateArgs>(args: Subset<T, Buildings_historyAggregateArgs>): Prisma.PrismaPromise<GetBuildings_historyAggregateType<T>>

    /**
     * Group by Buildings_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buildings_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Buildings_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Buildings_historyGroupByArgs['orderBy'] }
        : { orderBy?: Buildings_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Buildings_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBuildings_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Buildings_history model
   */
  readonly fields: Buildings_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Buildings_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Buildings_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Buildings_history model
   */ 
  interface Buildings_historyFieldRefs {
    readonly id: FieldRef<"Buildings_history", 'Int'>
    readonly building_id: FieldRef<"Buildings_history", 'Int'>
    readonly name: FieldRef<"Buildings_history", 'String'>
    readonly city: FieldRef<"Buildings_history", 'String'>
    readonly status: FieldRef<"Buildings_history", 'String'>
    readonly is_centrally_air_conditioned: FieldRef<"Buildings_history", 'String'>
    readonly has_security: FieldRef<"Buildings_history", 'String'>
    readonly has_escalators: FieldRef<"Buildings_history", 'String'>
    readonly has_food_court: FieldRef<"Buildings_history", 'String'>
    readonly has_entertainment_area: FieldRef<"Buildings_history", 'String'>
    readonly has_none: FieldRef<"Buildings_history", 'String'>
    readonly type_mixed_use: FieldRef<"Buildings_history", 'String'>
    readonly type_retail: FieldRef<"Buildings_history", 'String'>
    readonly type_offices: FieldRef<"Buildings_history", 'String'>
    readonly type_apartments: FieldRef<"Buildings_history", 'String'>
    readonly type_other: FieldRef<"Buildings_history", 'String'>
    readonly zone: FieldRef<"Buildings_history", 'String'>
    readonly area: FieldRef<"Buildings_history", 'String'>
    readonly address: FieldRef<"Buildings_history", 'String'>
    readonly plot_size: FieldRef<"Buildings_history", 'Int'>
    readonly construction_area: FieldRef<"Buildings_history", 'Int'>
    readonly construction_year: FieldRef<"Buildings_history", 'Int'>
    readonly launch_year: FieldRef<"Buildings_history", 'Int'>
    readonly builder_name: FieldRef<"Buildings_history", 'String'>
    readonly building_rank: FieldRef<"Buildings_history", 'String'>
    readonly total_floors: FieldRef<"Buildings_history", 'Int'>
    readonly parking_floors: FieldRef<"Buildings_history", 'Int'>
    readonly apartment_floors: FieldRef<"Buildings_history", 'Int'>
    readonly apartments_count: FieldRef<"Buildings_history", 'Int'>
    readonly apartments_studio: FieldRef<"Buildings_history", 'String'>
    readonly apartments_has_type_1_bed: FieldRef<"Buildings_history", 'String'>
    readonly apartments_has_type_2_bed: FieldRef<"Buildings_history", 'String'>
    readonly apartments_has_type_3_bed: FieldRef<"Buildings_history", 'String'>
    readonly apartments_has_type_4_bed: FieldRef<"Buildings_history", 'String'>
    readonly apartments_has_type_5_bed: FieldRef<"Buildings_history", 'String'>
    readonly apartments_has_type_duplex: FieldRef<"Buildings_history", 'String'>
    readonly apartments_has_type_penthouse: FieldRef<"Buildings_history", 'String'>
    readonly apartments_has_servant_quarter: FieldRef<"Buildings_history", 'String'>
    readonly has_furnished: FieldRef<"Buildings_history", 'String'>
    readonly has_semi_furnished: FieldRef<"Buildings_history", 'String'>
    readonly has_service_apartments: FieldRef<"Buildings_history", 'String'>
    readonly has_hotel_suites_apartments: FieldRef<"Buildings_history", 'String'>
    readonly apartments_maintenance_fee: FieldRef<"Buildings_history", 'Int'>
    readonly retail_floors_count: FieldRef<"Buildings_history", 'Int'>
    readonly retail_floors_shops_count: FieldRef<"Buildings_history", 'Int'>
    readonly retail_floors_maintenance_fee: FieldRef<"Buildings_history", 'Int'>
    readonly retail_floors_brands: FieldRef<"Buildings_history", 'String'>
    readonly has_fashion_health: FieldRef<"Buildings_history", 'String'>
    readonly has_electronics_appliancecs: FieldRef<"Buildings_history", 'String'>
    readonly has_home_living: FieldRef<"Buildings_history", 'String'>
    readonly has_restaurants_courts: FieldRef<"Buildings_history", 'String'>
    readonly has_bakery_ice: FieldRef<"Buildings_history", 'String'>
    readonly has_grocery_supermarkets: FieldRef<"Buildings_history", 'String'>
    readonly has_banks_atm: FieldRef<"Buildings_history", 'String'>
    readonly has_real_estate: FieldRef<"Buildings_history", 'String'>
    readonly has_labs_pharmacies: FieldRef<"Buildings_history", 'String'>
    readonly has_play_fitness: FieldRef<"Buildings_history", 'String'>
    readonly has_swimming_pool: FieldRef<"Buildings_history", 'String'>
    readonly has_cinema: FieldRef<"Buildings_history", 'String'>
    readonly office_floors_count: FieldRef<"Buildings_history", 'Int'>
    readonly offices_count: FieldRef<"Buildings_history", 'Int'>
    readonly office_maintenance_fee: FieldRef<"Buildings_history", 'Int'>
    readonly survey_date: FieldRef<"Buildings_history", 'String'>
    readonly surveyor_name: FieldRef<"Buildings_history", 'String'>
    readonly building_survery_remarks: FieldRef<"Buildings_history", 'String'>
    readonly building_draft: FieldRef<"Buildings_history", 'String'>
    readonly createdAt: FieldRef<"Buildings_history", 'DateTime'>
    readonly updatedAt: FieldRef<"Buildings_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Buildings_history findUnique
   */
  export type Buildings_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * Filter, which Buildings_history to fetch.
     */
    where: Buildings_historyWhereUniqueInput
  }

  /**
   * Buildings_history findUniqueOrThrow
   */
  export type Buildings_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * Filter, which Buildings_history to fetch.
     */
    where: Buildings_historyWhereUniqueInput
  }

  /**
   * Buildings_history findFirst
   */
  export type Buildings_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * Filter, which Buildings_history to fetch.
     */
    where?: Buildings_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Buildings_histories to fetch.
     */
    orderBy?: Buildings_historyOrderByWithRelationInput | Buildings_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Buildings_histories.
     */
    cursor?: Buildings_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Buildings_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Buildings_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Buildings_histories.
     */
    distinct?: Buildings_historyScalarFieldEnum | Buildings_historyScalarFieldEnum[]
  }

  /**
   * Buildings_history findFirstOrThrow
   */
  export type Buildings_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * Filter, which Buildings_history to fetch.
     */
    where?: Buildings_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Buildings_histories to fetch.
     */
    orderBy?: Buildings_historyOrderByWithRelationInput | Buildings_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Buildings_histories.
     */
    cursor?: Buildings_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Buildings_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Buildings_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Buildings_histories.
     */
    distinct?: Buildings_historyScalarFieldEnum | Buildings_historyScalarFieldEnum[]
  }

  /**
   * Buildings_history findMany
   */
  export type Buildings_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * Filter, which Buildings_histories to fetch.
     */
    where?: Buildings_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Buildings_histories to fetch.
     */
    orderBy?: Buildings_historyOrderByWithRelationInput | Buildings_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Buildings_histories.
     */
    cursor?: Buildings_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Buildings_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Buildings_histories.
     */
    skip?: number
    distinct?: Buildings_historyScalarFieldEnum | Buildings_historyScalarFieldEnum[]
  }

  /**
   * Buildings_history create
   */
  export type Buildings_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * The data needed to create a Buildings_history.
     */
    data: XOR<Buildings_historyCreateInput, Buildings_historyUncheckedCreateInput>
  }

  /**
   * Buildings_history createMany
   */
  export type Buildings_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Buildings_histories.
     */
    data: Buildings_historyCreateManyInput | Buildings_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Buildings_history createManyAndReturn
   */
  export type Buildings_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Buildings_histories.
     */
    data: Buildings_historyCreateManyInput | Buildings_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Buildings_history update
   */
  export type Buildings_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * The data needed to update a Buildings_history.
     */
    data: XOR<Buildings_historyUpdateInput, Buildings_historyUncheckedUpdateInput>
    /**
     * Choose, which Buildings_history to update.
     */
    where: Buildings_historyWhereUniqueInput
  }

  /**
   * Buildings_history updateMany
   */
  export type Buildings_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Buildings_histories.
     */
    data: XOR<Buildings_historyUpdateManyMutationInput, Buildings_historyUncheckedUpdateManyInput>
    /**
     * Filter which Buildings_histories to update
     */
    where?: Buildings_historyWhereInput
  }

  /**
   * Buildings_history upsert
   */
  export type Buildings_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * The filter to search for the Buildings_history to update in case it exists.
     */
    where: Buildings_historyWhereUniqueInput
    /**
     * In case the Buildings_history found by the `where` argument doesn't exist, create a new Buildings_history with this data.
     */
    create: XOR<Buildings_historyCreateInput, Buildings_historyUncheckedCreateInput>
    /**
     * In case the Buildings_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Buildings_historyUpdateInput, Buildings_historyUncheckedUpdateInput>
  }

  /**
   * Buildings_history delete
   */
  export type Buildings_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
    /**
     * Filter which Buildings_history to delete.
     */
    where: Buildings_historyWhereUniqueInput
  }

  /**
   * Buildings_history deleteMany
   */
  export type Buildings_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Buildings_histories to delete
     */
    where?: Buildings_historyWhereInput
  }

  /**
   * Buildings_history without action
   */
  export type Buildings_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Buildings_history
     */
    select?: Buildings_historySelect<ExtArgs> | null
  }


  /**
   * Model Floors
   */

  export type AggregateFloors = {
    _count: FloorsCountAggregateOutputType | null
    _avg: FloorsAvgAggregateOutputType | null
    _sum: FloorsSumAggregateOutputType | null
    _min: FloorsMinAggregateOutputType | null
    _max: FloorsMaxAggregateOutputType | null
  }

  export type FloorsAvgAggregateOutputType = {
    id: number | null
    building_id: number | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
  }

  export type FloorsSumAggregateOutputType = {
    id: number | null
    building_id: number | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
  }

  export type FloorsMinAggregateOutputType = {
    id: number | null
    building_id: number | null
    floor_no: string | null
    floor_type: string | null
    unit_type: string | null
    floor_apartments_studio: string | null
    floor_apartments_1_bed: string | null
    floor_apartments_2_bed: string | null
    floor_apartments_3_bed: string | null
    floor_apartments_4_bed: string | null
    floor_apartments_5_bed: string | null
    floor_apartments_duplex: string | null
    floor_apartments_penthouse: string | null
    floor_has_furnished: string | null
    floor_has_semi_furnished: string | null
    floor_has_service_apartments: string | null
    floor_has_hotel_suites_apartments: string | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_plan: string | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
    date: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FloorsMaxAggregateOutputType = {
    id: number | null
    building_id: number | null
    floor_no: string | null
    floor_type: string | null
    unit_type: string | null
    floor_apartments_studio: string | null
    floor_apartments_1_bed: string | null
    floor_apartments_2_bed: string | null
    floor_apartments_3_bed: string | null
    floor_apartments_4_bed: string | null
    floor_apartments_5_bed: string | null
    floor_apartments_duplex: string | null
    floor_apartments_penthouse: string | null
    floor_has_furnished: string | null
    floor_has_semi_furnished: string | null
    floor_has_service_apartments: string | null
    floor_has_hotel_suites_apartments: string | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_plan: string | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
    date: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type FloorsCountAggregateOutputType = {
    id: number
    building_id: number
    floor_no: number
    floor_type: number
    unit_type: number
    floor_apartments_studio: number
    floor_apartments_1_bed: number
    floor_apartments_2_bed: number
    floor_apartments_3_bed: number
    floor_apartments_4_bed: number
    floor_apartments_5_bed: number
    floor_apartments_duplex: number
    floor_apartments_penthouse: number
    floor_has_furnished: number
    floor_has_semi_furnished: number
    floor_has_service_apartments: number
    floor_has_hotel_suites_apartments: number
    occupancy: number
    size_min: number
    size_max: number
    avg_sale_price: number
    avg_monthly_rent: number
    instalment_plan: number
    instalment_period: number
    down_payment_amount: number
    instalment_amount: number
    possession_amount: number
    date: number
    remarks: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type FloorsAvgAggregateInputType = {
    id?: true
    building_id?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
  }

  export type FloorsSumAggregateInputType = {
    id?: true
    building_id?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
  }

  export type FloorsMinAggregateInputType = {
    id?: true
    building_id?: true
    floor_no?: true
    floor_type?: true
    unit_type?: true
    floor_apartments_studio?: true
    floor_apartments_1_bed?: true
    floor_apartments_2_bed?: true
    floor_apartments_3_bed?: true
    floor_apartments_4_bed?: true
    floor_apartments_5_bed?: true
    floor_apartments_duplex?: true
    floor_apartments_penthouse?: true
    floor_has_furnished?: true
    floor_has_semi_furnished?: true
    floor_has_service_apartments?: true
    floor_has_hotel_suites_apartments?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_plan?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
    date?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FloorsMaxAggregateInputType = {
    id?: true
    building_id?: true
    floor_no?: true
    floor_type?: true
    unit_type?: true
    floor_apartments_studio?: true
    floor_apartments_1_bed?: true
    floor_apartments_2_bed?: true
    floor_apartments_3_bed?: true
    floor_apartments_4_bed?: true
    floor_apartments_5_bed?: true
    floor_apartments_duplex?: true
    floor_apartments_penthouse?: true
    floor_has_furnished?: true
    floor_has_semi_furnished?: true
    floor_has_service_apartments?: true
    floor_has_hotel_suites_apartments?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_plan?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
    date?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type FloorsCountAggregateInputType = {
    id?: true
    building_id?: true
    floor_no?: true
    floor_type?: true
    unit_type?: true
    floor_apartments_studio?: true
    floor_apartments_1_bed?: true
    floor_apartments_2_bed?: true
    floor_apartments_3_bed?: true
    floor_apartments_4_bed?: true
    floor_apartments_5_bed?: true
    floor_apartments_duplex?: true
    floor_apartments_penthouse?: true
    floor_has_furnished?: true
    floor_has_semi_furnished?: true
    floor_has_service_apartments?: true
    floor_has_hotel_suites_apartments?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_plan?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
    date?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type FloorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Floors to aggregate.
     */
    where?: FloorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Floors to fetch.
     */
    orderBy?: FloorsOrderByWithRelationInput | FloorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FloorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Floors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Floors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Floors
    **/
    _count?: true | FloorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FloorsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FloorsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FloorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FloorsMaxAggregateInputType
  }

  export type GetFloorsAggregateType<T extends FloorsAggregateArgs> = {
        [P in keyof T & keyof AggregateFloors]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFloors[P]>
      : GetScalarType<T[P], AggregateFloors[P]>
  }




  export type FloorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FloorsWhereInput
    orderBy?: FloorsOrderByWithAggregationInput | FloorsOrderByWithAggregationInput[]
    by: FloorsScalarFieldEnum[] | FloorsScalarFieldEnum
    having?: FloorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FloorsCountAggregateInputType | true
    _avg?: FloorsAvgAggregateInputType
    _sum?: FloorsSumAggregateInputType
    _min?: FloorsMinAggregateInputType
    _max?: FloorsMaxAggregateInputType
  }

  export type FloorsGroupByOutputType = {
    id: number
    building_id: number
    floor_no: string
    floor_type: string
    unit_type: string | null
    floor_apartments_studio: string | null
    floor_apartments_1_bed: string | null
    floor_apartments_2_bed: string | null
    floor_apartments_3_bed: string | null
    floor_apartments_4_bed: string | null
    floor_apartments_5_bed: string | null
    floor_apartments_duplex: string | null
    floor_apartments_penthouse: string | null
    floor_has_furnished: string | null
    floor_has_semi_furnished: string | null
    floor_has_service_apartments: string | null
    floor_has_hotel_suites_apartments: string | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_plan: string | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
    date: string | null
    remarks: string | null
    createdAt: Date
    updatedAt: Date
    _count: FloorsCountAggregateOutputType | null
    _avg: FloorsAvgAggregateOutputType | null
    _sum: FloorsSumAggregateOutputType | null
    _min: FloorsMinAggregateOutputType | null
    _max: FloorsMaxAggregateOutputType | null
  }

  type GetFloorsGroupByPayload<T extends FloorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FloorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FloorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FloorsGroupByOutputType[P]>
            : GetScalarType<T[P], FloorsGroupByOutputType[P]>
        }
      >
    >


  export type FloorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    building_id?: boolean
    floor_no?: boolean
    floor_type?: boolean
    unit_type?: boolean
    floor_apartments_studio?: boolean
    floor_apartments_1_bed?: boolean
    floor_apartments_2_bed?: boolean
    floor_apartments_3_bed?: boolean
    floor_apartments_4_bed?: boolean
    floor_apartments_5_bed?: boolean
    floor_apartments_duplex?: boolean
    floor_apartments_penthouse?: boolean
    floor_has_furnished?: boolean
    floor_has_semi_furnished?: boolean
    floor_has_service_apartments?: boolean
    floor_has_hotel_suites_apartments?: boolean
    occupancy?: boolean
    size_min?: boolean
    size_max?: boolean
    avg_sale_price?: boolean
    avg_monthly_rent?: boolean
    instalment_plan?: boolean
    instalment_period?: boolean
    down_payment_amount?: boolean
    instalment_amount?: boolean
    possession_amount?: boolean
    date?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    buildings?: boolean | BuildingsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["floors"]>

  export type FloorsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    building_id?: boolean
    floor_no?: boolean
    floor_type?: boolean
    unit_type?: boolean
    floor_apartments_studio?: boolean
    floor_apartments_1_bed?: boolean
    floor_apartments_2_bed?: boolean
    floor_apartments_3_bed?: boolean
    floor_apartments_4_bed?: boolean
    floor_apartments_5_bed?: boolean
    floor_apartments_duplex?: boolean
    floor_apartments_penthouse?: boolean
    floor_has_furnished?: boolean
    floor_has_semi_furnished?: boolean
    floor_has_service_apartments?: boolean
    floor_has_hotel_suites_apartments?: boolean
    occupancy?: boolean
    size_min?: boolean
    size_max?: boolean
    avg_sale_price?: boolean
    avg_monthly_rent?: boolean
    instalment_plan?: boolean
    instalment_period?: boolean
    down_payment_amount?: boolean
    instalment_amount?: boolean
    possession_amount?: boolean
    date?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    buildings?: boolean | BuildingsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["floors"]>

  export type FloorsSelectScalar = {
    id?: boolean
    building_id?: boolean
    floor_no?: boolean
    floor_type?: boolean
    unit_type?: boolean
    floor_apartments_studio?: boolean
    floor_apartments_1_bed?: boolean
    floor_apartments_2_bed?: boolean
    floor_apartments_3_bed?: boolean
    floor_apartments_4_bed?: boolean
    floor_apartments_5_bed?: boolean
    floor_apartments_duplex?: boolean
    floor_apartments_penthouse?: boolean
    floor_has_furnished?: boolean
    floor_has_semi_furnished?: boolean
    floor_has_service_apartments?: boolean
    floor_has_hotel_suites_apartments?: boolean
    occupancy?: boolean
    size_min?: boolean
    size_max?: boolean
    avg_sale_price?: boolean
    avg_monthly_rent?: boolean
    instalment_plan?: boolean
    instalment_period?: boolean
    down_payment_amount?: boolean
    instalment_amount?: boolean
    possession_amount?: boolean
    date?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type FloorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buildings?: boolean | BuildingsDefaultArgs<ExtArgs>
  }
  export type FloorsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buildings?: boolean | BuildingsDefaultArgs<ExtArgs>
  }

  export type $FloorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Floors"
    objects: {
      buildings: Prisma.$BuildingsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      building_id: number
      floor_no: string
      floor_type: string
      unit_type: string | null
      floor_apartments_studio: string | null
      floor_apartments_1_bed: string | null
      floor_apartments_2_bed: string | null
      floor_apartments_3_bed: string | null
      floor_apartments_4_bed: string | null
      floor_apartments_5_bed: string | null
      floor_apartments_duplex: string | null
      floor_apartments_penthouse: string | null
      floor_has_furnished: string | null
      floor_has_semi_furnished: string | null
      floor_has_service_apartments: string | null
      floor_has_hotel_suites_apartments: string | null
      occupancy: number | null
      size_min: number | null
      size_max: number | null
      avg_sale_price: number | null
      avg_monthly_rent: number | null
      instalment_plan: string | null
      instalment_period: number | null
      down_payment_amount: number | null
      instalment_amount: number | null
      possession_amount: number | null
      date: string | null
      remarks: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["floors"]>
    composites: {}
  }

  type FloorsGetPayload<S extends boolean | null | undefined | FloorsDefaultArgs> = $Result.GetResult<Prisma.$FloorsPayload, S>

  type FloorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FloorsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FloorsCountAggregateInputType | true
    }

  export interface FloorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Floors'], meta: { name: 'Floors' } }
    /**
     * Find zero or one Floors that matches the filter.
     * @param {FloorsFindUniqueArgs} args - Arguments to find a Floors
     * @example
     * // Get one Floors
     * const floors = await prisma.floors.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FloorsFindUniqueArgs>(args: SelectSubset<T, FloorsFindUniqueArgs<ExtArgs>>): Prisma__FloorsClient<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Floors that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FloorsFindUniqueOrThrowArgs} args - Arguments to find a Floors
     * @example
     * // Get one Floors
     * const floors = await prisma.floors.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FloorsFindUniqueOrThrowArgs>(args: SelectSubset<T, FloorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FloorsClient<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Floors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FloorsFindFirstArgs} args - Arguments to find a Floors
     * @example
     * // Get one Floors
     * const floors = await prisma.floors.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FloorsFindFirstArgs>(args?: SelectSubset<T, FloorsFindFirstArgs<ExtArgs>>): Prisma__FloorsClient<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Floors that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FloorsFindFirstOrThrowArgs} args - Arguments to find a Floors
     * @example
     * // Get one Floors
     * const floors = await prisma.floors.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FloorsFindFirstOrThrowArgs>(args?: SelectSubset<T, FloorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__FloorsClient<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Floors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FloorsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Floors
     * const floors = await prisma.floors.findMany()
     * 
     * // Get first 10 Floors
     * const floors = await prisma.floors.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const floorsWithIdOnly = await prisma.floors.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FloorsFindManyArgs>(args?: SelectSubset<T, FloorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Floors.
     * @param {FloorsCreateArgs} args - Arguments to create a Floors.
     * @example
     * // Create one Floors
     * const Floors = await prisma.floors.create({
     *   data: {
     *     // ... data to create a Floors
     *   }
     * })
     * 
     */
    create<T extends FloorsCreateArgs>(args: SelectSubset<T, FloorsCreateArgs<ExtArgs>>): Prisma__FloorsClient<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Floors.
     * @param {FloorsCreateManyArgs} args - Arguments to create many Floors.
     * @example
     * // Create many Floors
     * const floors = await prisma.floors.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FloorsCreateManyArgs>(args?: SelectSubset<T, FloorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Floors and returns the data saved in the database.
     * @param {FloorsCreateManyAndReturnArgs} args - Arguments to create many Floors.
     * @example
     * // Create many Floors
     * const floors = await prisma.floors.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Floors and only return the `id`
     * const floorsWithIdOnly = await prisma.floors.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FloorsCreateManyAndReturnArgs>(args?: SelectSubset<T, FloorsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Floors.
     * @param {FloorsDeleteArgs} args - Arguments to delete one Floors.
     * @example
     * // Delete one Floors
     * const Floors = await prisma.floors.delete({
     *   where: {
     *     // ... filter to delete one Floors
     *   }
     * })
     * 
     */
    delete<T extends FloorsDeleteArgs>(args: SelectSubset<T, FloorsDeleteArgs<ExtArgs>>): Prisma__FloorsClient<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Floors.
     * @param {FloorsUpdateArgs} args - Arguments to update one Floors.
     * @example
     * // Update one Floors
     * const floors = await prisma.floors.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FloorsUpdateArgs>(args: SelectSubset<T, FloorsUpdateArgs<ExtArgs>>): Prisma__FloorsClient<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Floors.
     * @param {FloorsDeleteManyArgs} args - Arguments to filter Floors to delete.
     * @example
     * // Delete a few Floors
     * const { count } = await prisma.floors.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FloorsDeleteManyArgs>(args?: SelectSubset<T, FloorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Floors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FloorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Floors
     * const floors = await prisma.floors.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FloorsUpdateManyArgs>(args: SelectSubset<T, FloorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Floors.
     * @param {FloorsUpsertArgs} args - Arguments to update or create a Floors.
     * @example
     * // Update or create a Floors
     * const floors = await prisma.floors.upsert({
     *   create: {
     *     // ... data to create a Floors
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Floors we want to update
     *   }
     * })
     */
    upsert<T extends FloorsUpsertArgs>(args: SelectSubset<T, FloorsUpsertArgs<ExtArgs>>): Prisma__FloorsClient<$Result.GetResult<Prisma.$FloorsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Floors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FloorsCountArgs} args - Arguments to filter Floors to count.
     * @example
     * // Count the number of Floors
     * const count = await prisma.floors.count({
     *   where: {
     *     // ... the filter for the Floors we want to count
     *   }
     * })
    **/
    count<T extends FloorsCountArgs>(
      args?: Subset<T, FloorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FloorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Floors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FloorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FloorsAggregateArgs>(args: Subset<T, FloorsAggregateArgs>): Prisma.PrismaPromise<GetFloorsAggregateType<T>>

    /**
     * Group by Floors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FloorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FloorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FloorsGroupByArgs['orderBy'] }
        : { orderBy?: FloorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FloorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFloorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Floors model
   */
  readonly fields: FloorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Floors.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FloorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    buildings<T extends BuildingsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BuildingsDefaultArgs<ExtArgs>>): Prisma__BuildingsClient<$Result.GetResult<Prisma.$BuildingsPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Floors model
   */ 
  interface FloorsFieldRefs {
    readonly id: FieldRef<"Floors", 'Int'>
    readonly building_id: FieldRef<"Floors", 'Int'>
    readonly floor_no: FieldRef<"Floors", 'String'>
    readonly floor_type: FieldRef<"Floors", 'String'>
    readonly unit_type: FieldRef<"Floors", 'String'>
    readonly floor_apartments_studio: FieldRef<"Floors", 'String'>
    readonly floor_apartments_1_bed: FieldRef<"Floors", 'String'>
    readonly floor_apartments_2_bed: FieldRef<"Floors", 'String'>
    readonly floor_apartments_3_bed: FieldRef<"Floors", 'String'>
    readonly floor_apartments_4_bed: FieldRef<"Floors", 'String'>
    readonly floor_apartments_5_bed: FieldRef<"Floors", 'String'>
    readonly floor_apartments_duplex: FieldRef<"Floors", 'String'>
    readonly floor_apartments_penthouse: FieldRef<"Floors", 'String'>
    readonly floor_has_furnished: FieldRef<"Floors", 'String'>
    readonly floor_has_semi_furnished: FieldRef<"Floors", 'String'>
    readonly floor_has_service_apartments: FieldRef<"Floors", 'String'>
    readonly floor_has_hotel_suites_apartments: FieldRef<"Floors", 'String'>
    readonly occupancy: FieldRef<"Floors", 'Int'>
    readonly size_min: FieldRef<"Floors", 'Int'>
    readonly size_max: FieldRef<"Floors", 'Int'>
    readonly avg_sale_price: FieldRef<"Floors", 'Int'>
    readonly avg_monthly_rent: FieldRef<"Floors", 'Int'>
    readonly instalment_plan: FieldRef<"Floors", 'String'>
    readonly instalment_period: FieldRef<"Floors", 'Int'>
    readonly down_payment_amount: FieldRef<"Floors", 'Int'>
    readonly instalment_amount: FieldRef<"Floors", 'Int'>
    readonly possession_amount: FieldRef<"Floors", 'Int'>
    readonly date: FieldRef<"Floors", 'String'>
    readonly remarks: FieldRef<"Floors", 'String'>
    readonly createdAt: FieldRef<"Floors", 'DateTime'>
    readonly updatedAt: FieldRef<"Floors", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Floors findUnique
   */
  export type FloorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * Filter, which Floors to fetch.
     */
    where: FloorsWhereUniqueInput
  }

  /**
   * Floors findUniqueOrThrow
   */
  export type FloorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * Filter, which Floors to fetch.
     */
    where: FloorsWhereUniqueInput
  }

  /**
   * Floors findFirst
   */
  export type FloorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * Filter, which Floors to fetch.
     */
    where?: FloorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Floors to fetch.
     */
    orderBy?: FloorsOrderByWithRelationInput | FloorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Floors.
     */
    cursor?: FloorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Floors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Floors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Floors.
     */
    distinct?: FloorsScalarFieldEnum | FloorsScalarFieldEnum[]
  }

  /**
   * Floors findFirstOrThrow
   */
  export type FloorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * Filter, which Floors to fetch.
     */
    where?: FloorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Floors to fetch.
     */
    orderBy?: FloorsOrderByWithRelationInput | FloorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Floors.
     */
    cursor?: FloorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Floors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Floors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Floors.
     */
    distinct?: FloorsScalarFieldEnum | FloorsScalarFieldEnum[]
  }

  /**
   * Floors findMany
   */
  export type FloorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * Filter, which Floors to fetch.
     */
    where?: FloorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Floors to fetch.
     */
    orderBy?: FloorsOrderByWithRelationInput | FloorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Floors.
     */
    cursor?: FloorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Floors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Floors.
     */
    skip?: number
    distinct?: FloorsScalarFieldEnum | FloorsScalarFieldEnum[]
  }

  /**
   * Floors create
   */
  export type FloorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * The data needed to create a Floors.
     */
    data: XOR<FloorsCreateInput, FloorsUncheckedCreateInput>
  }

  /**
   * Floors createMany
   */
  export type FloorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Floors.
     */
    data: FloorsCreateManyInput | FloorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Floors createManyAndReturn
   */
  export type FloorsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Floors.
     */
    data: FloorsCreateManyInput | FloorsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Floors update
   */
  export type FloorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * The data needed to update a Floors.
     */
    data: XOR<FloorsUpdateInput, FloorsUncheckedUpdateInput>
    /**
     * Choose, which Floors to update.
     */
    where: FloorsWhereUniqueInput
  }

  /**
   * Floors updateMany
   */
  export type FloorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Floors.
     */
    data: XOR<FloorsUpdateManyMutationInput, FloorsUncheckedUpdateManyInput>
    /**
     * Filter which Floors to update
     */
    where?: FloorsWhereInput
  }

  /**
   * Floors upsert
   */
  export type FloorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * The filter to search for the Floors to update in case it exists.
     */
    where: FloorsWhereUniqueInput
    /**
     * In case the Floors found by the `where` argument doesn't exist, create a new Floors with this data.
     */
    create: XOR<FloorsCreateInput, FloorsUncheckedCreateInput>
    /**
     * In case the Floors was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FloorsUpdateInput, FloorsUncheckedUpdateInput>
  }

  /**
   * Floors delete
   */
  export type FloorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
    /**
     * Filter which Floors to delete.
     */
    where: FloorsWhereUniqueInput
  }

  /**
   * Floors deleteMany
   */
  export type FloorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Floors to delete
     */
    where?: FloorsWhereInput
  }

  /**
   * Floors without action
   */
  export type FloorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors
     */
    select?: FloorsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FloorsInclude<ExtArgs> | null
  }


  /**
   * Model Floors_history
   */

  export type AggregateFloors_history = {
    _count: Floors_historyCountAggregateOutputType | null
    _avg: Floors_historyAvgAggregateOutputType | null
    _sum: Floors_historySumAggregateOutputType | null
    _min: Floors_historyMinAggregateOutputType | null
    _max: Floors_historyMaxAggregateOutputType | null
  }

  export type Floors_historyAvgAggregateOutputType = {
    id: number | null
    building_id: number | null
    floor_id: number | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
  }

  export type Floors_historySumAggregateOutputType = {
    id: number | null
    building_id: number | null
    floor_id: number | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
  }

  export type Floors_historyMinAggregateOutputType = {
    id: number | null
    building_id: number | null
    floor_id: number | null
    floor_no: string | null
    floor_type: string | null
    unit_type: string | null
    floor_apartments_studio: string | null
    floor_apartments_1_bed: string | null
    floor_apartments_2_bed: string | null
    floor_apartments_3_bed: string | null
    floor_apartments_4_bed: string | null
    floor_apartments_5_bed: string | null
    floor_apartments_duplex: string | null
    floor_apartments_penthouse: string | null
    floor_has_furnished: string | null
    floor_has_semi_furnished: string | null
    floor_has_service_apartments: string | null
    floor_has_hotel_suites_apartments: string | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_plan: string | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
    date: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Floors_historyMaxAggregateOutputType = {
    id: number | null
    building_id: number | null
    floor_id: number | null
    floor_no: string | null
    floor_type: string | null
    unit_type: string | null
    floor_apartments_studio: string | null
    floor_apartments_1_bed: string | null
    floor_apartments_2_bed: string | null
    floor_apartments_3_bed: string | null
    floor_apartments_4_bed: string | null
    floor_apartments_5_bed: string | null
    floor_apartments_duplex: string | null
    floor_apartments_penthouse: string | null
    floor_has_furnished: string | null
    floor_has_semi_furnished: string | null
    floor_has_service_apartments: string | null
    floor_has_hotel_suites_apartments: string | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_plan: string | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
    date: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Floors_historyCountAggregateOutputType = {
    id: number
    building_id: number
    floor_id: number
    floor_no: number
    floor_type: number
    unit_type: number
    floor_apartments_studio: number
    floor_apartments_1_bed: number
    floor_apartments_2_bed: number
    floor_apartments_3_bed: number
    floor_apartments_4_bed: number
    floor_apartments_5_bed: number
    floor_apartments_duplex: number
    floor_apartments_penthouse: number
    floor_has_furnished: number
    floor_has_semi_furnished: number
    floor_has_service_apartments: number
    floor_has_hotel_suites_apartments: number
    occupancy: number
    size_min: number
    size_max: number
    avg_sale_price: number
    avg_monthly_rent: number
    instalment_plan: number
    instalment_period: number
    down_payment_amount: number
    instalment_amount: number
    possession_amount: number
    date: number
    remarks: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Floors_historyAvgAggregateInputType = {
    id?: true
    building_id?: true
    floor_id?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
  }

  export type Floors_historySumAggregateInputType = {
    id?: true
    building_id?: true
    floor_id?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
  }

  export type Floors_historyMinAggregateInputType = {
    id?: true
    building_id?: true
    floor_id?: true
    floor_no?: true
    floor_type?: true
    unit_type?: true
    floor_apartments_studio?: true
    floor_apartments_1_bed?: true
    floor_apartments_2_bed?: true
    floor_apartments_3_bed?: true
    floor_apartments_4_bed?: true
    floor_apartments_5_bed?: true
    floor_apartments_duplex?: true
    floor_apartments_penthouse?: true
    floor_has_furnished?: true
    floor_has_semi_furnished?: true
    floor_has_service_apartments?: true
    floor_has_hotel_suites_apartments?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_plan?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
    date?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Floors_historyMaxAggregateInputType = {
    id?: true
    building_id?: true
    floor_id?: true
    floor_no?: true
    floor_type?: true
    unit_type?: true
    floor_apartments_studio?: true
    floor_apartments_1_bed?: true
    floor_apartments_2_bed?: true
    floor_apartments_3_bed?: true
    floor_apartments_4_bed?: true
    floor_apartments_5_bed?: true
    floor_apartments_duplex?: true
    floor_apartments_penthouse?: true
    floor_has_furnished?: true
    floor_has_semi_furnished?: true
    floor_has_service_apartments?: true
    floor_has_hotel_suites_apartments?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_plan?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
    date?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Floors_historyCountAggregateInputType = {
    id?: true
    building_id?: true
    floor_id?: true
    floor_no?: true
    floor_type?: true
    unit_type?: true
    floor_apartments_studio?: true
    floor_apartments_1_bed?: true
    floor_apartments_2_bed?: true
    floor_apartments_3_bed?: true
    floor_apartments_4_bed?: true
    floor_apartments_5_bed?: true
    floor_apartments_duplex?: true
    floor_apartments_penthouse?: true
    floor_has_furnished?: true
    floor_has_semi_furnished?: true
    floor_has_service_apartments?: true
    floor_has_hotel_suites_apartments?: true
    occupancy?: true
    size_min?: true
    size_max?: true
    avg_sale_price?: true
    avg_monthly_rent?: true
    instalment_plan?: true
    instalment_period?: true
    down_payment_amount?: true
    instalment_amount?: true
    possession_amount?: true
    date?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Floors_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Floors_history to aggregate.
     */
    where?: Floors_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Floors_histories to fetch.
     */
    orderBy?: Floors_historyOrderByWithRelationInput | Floors_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Floors_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Floors_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Floors_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Floors_histories
    **/
    _count?: true | Floors_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Floors_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Floors_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Floors_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Floors_historyMaxAggregateInputType
  }

  export type GetFloors_historyAggregateType<T extends Floors_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateFloors_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFloors_history[P]>
      : GetScalarType<T[P], AggregateFloors_history[P]>
  }




  export type Floors_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Floors_historyWhereInput
    orderBy?: Floors_historyOrderByWithAggregationInput | Floors_historyOrderByWithAggregationInput[]
    by: Floors_historyScalarFieldEnum[] | Floors_historyScalarFieldEnum
    having?: Floors_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Floors_historyCountAggregateInputType | true
    _avg?: Floors_historyAvgAggregateInputType
    _sum?: Floors_historySumAggregateInputType
    _min?: Floors_historyMinAggregateInputType
    _max?: Floors_historyMaxAggregateInputType
  }

  export type Floors_historyGroupByOutputType = {
    id: number
    building_id: number
    floor_id: number
    floor_no: string
    floor_type: string
    unit_type: string | null
    floor_apartments_studio: string | null
    floor_apartments_1_bed: string | null
    floor_apartments_2_bed: string | null
    floor_apartments_3_bed: string | null
    floor_apartments_4_bed: string | null
    floor_apartments_5_bed: string | null
    floor_apartments_duplex: string | null
    floor_apartments_penthouse: string | null
    floor_has_furnished: string | null
    floor_has_semi_furnished: string | null
    floor_has_service_apartments: string | null
    floor_has_hotel_suites_apartments: string | null
    occupancy: number | null
    size_min: number | null
    size_max: number | null
    avg_sale_price: number | null
    avg_monthly_rent: number | null
    instalment_plan: string | null
    instalment_period: number | null
    down_payment_amount: number | null
    instalment_amount: number | null
    possession_amount: number | null
    date: string | null
    remarks: string | null
    createdAt: Date
    updatedAt: Date
    _count: Floors_historyCountAggregateOutputType | null
    _avg: Floors_historyAvgAggregateOutputType | null
    _sum: Floors_historySumAggregateOutputType | null
    _min: Floors_historyMinAggregateOutputType | null
    _max: Floors_historyMaxAggregateOutputType | null
  }

  type GetFloors_historyGroupByPayload<T extends Floors_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Floors_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Floors_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Floors_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Floors_historyGroupByOutputType[P]>
        }
      >
    >


  export type Floors_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    building_id?: boolean
    floor_id?: boolean
    floor_no?: boolean
    floor_type?: boolean
    unit_type?: boolean
    floor_apartments_studio?: boolean
    floor_apartments_1_bed?: boolean
    floor_apartments_2_bed?: boolean
    floor_apartments_3_bed?: boolean
    floor_apartments_4_bed?: boolean
    floor_apartments_5_bed?: boolean
    floor_apartments_duplex?: boolean
    floor_apartments_penthouse?: boolean
    floor_has_furnished?: boolean
    floor_has_semi_furnished?: boolean
    floor_has_service_apartments?: boolean
    floor_has_hotel_suites_apartments?: boolean
    occupancy?: boolean
    size_min?: boolean
    size_max?: boolean
    avg_sale_price?: boolean
    avg_monthly_rent?: boolean
    instalment_plan?: boolean
    instalment_period?: boolean
    down_payment_amount?: boolean
    instalment_amount?: boolean
    possession_amount?: boolean
    date?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["floors_history"]>

  export type Floors_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    building_id?: boolean
    floor_id?: boolean
    floor_no?: boolean
    floor_type?: boolean
    unit_type?: boolean
    floor_apartments_studio?: boolean
    floor_apartments_1_bed?: boolean
    floor_apartments_2_bed?: boolean
    floor_apartments_3_bed?: boolean
    floor_apartments_4_bed?: boolean
    floor_apartments_5_bed?: boolean
    floor_apartments_duplex?: boolean
    floor_apartments_penthouse?: boolean
    floor_has_furnished?: boolean
    floor_has_semi_furnished?: boolean
    floor_has_service_apartments?: boolean
    floor_has_hotel_suites_apartments?: boolean
    occupancy?: boolean
    size_min?: boolean
    size_max?: boolean
    avg_sale_price?: boolean
    avg_monthly_rent?: boolean
    instalment_plan?: boolean
    instalment_period?: boolean
    down_payment_amount?: boolean
    instalment_amount?: boolean
    possession_amount?: boolean
    date?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["floors_history"]>

  export type Floors_historySelectScalar = {
    id?: boolean
    building_id?: boolean
    floor_id?: boolean
    floor_no?: boolean
    floor_type?: boolean
    unit_type?: boolean
    floor_apartments_studio?: boolean
    floor_apartments_1_bed?: boolean
    floor_apartments_2_bed?: boolean
    floor_apartments_3_bed?: boolean
    floor_apartments_4_bed?: boolean
    floor_apartments_5_bed?: boolean
    floor_apartments_duplex?: boolean
    floor_apartments_penthouse?: boolean
    floor_has_furnished?: boolean
    floor_has_semi_furnished?: boolean
    floor_has_service_apartments?: boolean
    floor_has_hotel_suites_apartments?: boolean
    occupancy?: boolean
    size_min?: boolean
    size_max?: boolean
    avg_sale_price?: boolean
    avg_monthly_rent?: boolean
    instalment_plan?: boolean
    instalment_period?: boolean
    down_payment_amount?: boolean
    instalment_amount?: boolean
    possession_amount?: boolean
    date?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $Floors_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Floors_history"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      building_id: number
      floor_id: number
      floor_no: string
      floor_type: string
      unit_type: string | null
      floor_apartments_studio: string | null
      floor_apartments_1_bed: string | null
      floor_apartments_2_bed: string | null
      floor_apartments_3_bed: string | null
      floor_apartments_4_bed: string | null
      floor_apartments_5_bed: string | null
      floor_apartments_duplex: string | null
      floor_apartments_penthouse: string | null
      floor_has_furnished: string | null
      floor_has_semi_furnished: string | null
      floor_has_service_apartments: string | null
      floor_has_hotel_suites_apartments: string | null
      occupancy: number | null
      size_min: number | null
      size_max: number | null
      avg_sale_price: number | null
      avg_monthly_rent: number | null
      instalment_plan: string | null
      instalment_period: number | null
      down_payment_amount: number | null
      instalment_amount: number | null
      possession_amount: number | null
      date: string | null
      remarks: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["floors_history"]>
    composites: {}
  }

  type Floors_historyGetPayload<S extends boolean | null | undefined | Floors_historyDefaultArgs> = $Result.GetResult<Prisma.$Floors_historyPayload, S>

  type Floors_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Floors_historyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Floors_historyCountAggregateInputType | true
    }

  export interface Floors_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Floors_history'], meta: { name: 'Floors_history' } }
    /**
     * Find zero or one Floors_history that matches the filter.
     * @param {Floors_historyFindUniqueArgs} args - Arguments to find a Floors_history
     * @example
     * // Get one Floors_history
     * const floors_history = await prisma.floors_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Floors_historyFindUniqueArgs>(args: SelectSubset<T, Floors_historyFindUniqueArgs<ExtArgs>>): Prisma__Floors_historyClient<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Floors_history that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Floors_historyFindUniqueOrThrowArgs} args - Arguments to find a Floors_history
     * @example
     * // Get one Floors_history
     * const floors_history = await prisma.floors_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Floors_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, Floors_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Floors_historyClient<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Floors_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Floors_historyFindFirstArgs} args - Arguments to find a Floors_history
     * @example
     * // Get one Floors_history
     * const floors_history = await prisma.floors_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Floors_historyFindFirstArgs>(args?: SelectSubset<T, Floors_historyFindFirstArgs<ExtArgs>>): Prisma__Floors_historyClient<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Floors_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Floors_historyFindFirstOrThrowArgs} args - Arguments to find a Floors_history
     * @example
     * // Get one Floors_history
     * const floors_history = await prisma.floors_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Floors_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, Floors_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__Floors_historyClient<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Floors_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Floors_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Floors_histories
     * const floors_histories = await prisma.floors_history.findMany()
     * 
     * // Get first 10 Floors_histories
     * const floors_histories = await prisma.floors_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const floors_historyWithIdOnly = await prisma.floors_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Floors_historyFindManyArgs>(args?: SelectSubset<T, Floors_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Floors_history.
     * @param {Floors_historyCreateArgs} args - Arguments to create a Floors_history.
     * @example
     * // Create one Floors_history
     * const Floors_history = await prisma.floors_history.create({
     *   data: {
     *     // ... data to create a Floors_history
     *   }
     * })
     * 
     */
    create<T extends Floors_historyCreateArgs>(args: SelectSubset<T, Floors_historyCreateArgs<ExtArgs>>): Prisma__Floors_historyClient<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Floors_histories.
     * @param {Floors_historyCreateManyArgs} args - Arguments to create many Floors_histories.
     * @example
     * // Create many Floors_histories
     * const floors_history = await prisma.floors_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Floors_historyCreateManyArgs>(args?: SelectSubset<T, Floors_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Floors_histories and returns the data saved in the database.
     * @param {Floors_historyCreateManyAndReturnArgs} args - Arguments to create many Floors_histories.
     * @example
     * // Create many Floors_histories
     * const floors_history = await prisma.floors_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Floors_histories and only return the `id`
     * const floors_historyWithIdOnly = await prisma.floors_history.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Floors_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, Floors_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Floors_history.
     * @param {Floors_historyDeleteArgs} args - Arguments to delete one Floors_history.
     * @example
     * // Delete one Floors_history
     * const Floors_history = await prisma.floors_history.delete({
     *   where: {
     *     // ... filter to delete one Floors_history
     *   }
     * })
     * 
     */
    delete<T extends Floors_historyDeleteArgs>(args: SelectSubset<T, Floors_historyDeleteArgs<ExtArgs>>): Prisma__Floors_historyClient<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Floors_history.
     * @param {Floors_historyUpdateArgs} args - Arguments to update one Floors_history.
     * @example
     * // Update one Floors_history
     * const floors_history = await prisma.floors_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Floors_historyUpdateArgs>(args: SelectSubset<T, Floors_historyUpdateArgs<ExtArgs>>): Prisma__Floors_historyClient<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Floors_histories.
     * @param {Floors_historyDeleteManyArgs} args - Arguments to filter Floors_histories to delete.
     * @example
     * // Delete a few Floors_histories
     * const { count } = await prisma.floors_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Floors_historyDeleteManyArgs>(args?: SelectSubset<T, Floors_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Floors_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Floors_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Floors_histories
     * const floors_history = await prisma.floors_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Floors_historyUpdateManyArgs>(args: SelectSubset<T, Floors_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Floors_history.
     * @param {Floors_historyUpsertArgs} args - Arguments to update or create a Floors_history.
     * @example
     * // Update or create a Floors_history
     * const floors_history = await prisma.floors_history.upsert({
     *   create: {
     *     // ... data to create a Floors_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Floors_history we want to update
     *   }
     * })
     */
    upsert<T extends Floors_historyUpsertArgs>(args: SelectSubset<T, Floors_historyUpsertArgs<ExtArgs>>): Prisma__Floors_historyClient<$Result.GetResult<Prisma.$Floors_historyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Floors_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Floors_historyCountArgs} args - Arguments to filter Floors_histories to count.
     * @example
     * // Count the number of Floors_histories
     * const count = await prisma.floors_history.count({
     *   where: {
     *     // ... the filter for the Floors_histories we want to count
     *   }
     * })
    **/
    count<T extends Floors_historyCountArgs>(
      args?: Subset<T, Floors_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Floors_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Floors_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Floors_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Floors_historyAggregateArgs>(args: Subset<T, Floors_historyAggregateArgs>): Prisma.PrismaPromise<GetFloors_historyAggregateType<T>>

    /**
     * Group by Floors_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Floors_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Floors_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Floors_historyGroupByArgs['orderBy'] }
        : { orderBy?: Floors_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Floors_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFloors_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Floors_history model
   */
  readonly fields: Floors_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Floors_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Floors_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Floors_history model
   */ 
  interface Floors_historyFieldRefs {
    readonly id: FieldRef<"Floors_history", 'Int'>
    readonly building_id: FieldRef<"Floors_history", 'Int'>
    readonly floor_id: FieldRef<"Floors_history", 'Int'>
    readonly floor_no: FieldRef<"Floors_history", 'String'>
    readonly floor_type: FieldRef<"Floors_history", 'String'>
    readonly unit_type: FieldRef<"Floors_history", 'String'>
    readonly floor_apartments_studio: FieldRef<"Floors_history", 'String'>
    readonly floor_apartments_1_bed: FieldRef<"Floors_history", 'String'>
    readonly floor_apartments_2_bed: FieldRef<"Floors_history", 'String'>
    readonly floor_apartments_3_bed: FieldRef<"Floors_history", 'String'>
    readonly floor_apartments_4_bed: FieldRef<"Floors_history", 'String'>
    readonly floor_apartments_5_bed: FieldRef<"Floors_history", 'String'>
    readonly floor_apartments_duplex: FieldRef<"Floors_history", 'String'>
    readonly floor_apartments_penthouse: FieldRef<"Floors_history", 'String'>
    readonly floor_has_furnished: FieldRef<"Floors_history", 'String'>
    readonly floor_has_semi_furnished: FieldRef<"Floors_history", 'String'>
    readonly floor_has_service_apartments: FieldRef<"Floors_history", 'String'>
    readonly floor_has_hotel_suites_apartments: FieldRef<"Floors_history", 'String'>
    readonly occupancy: FieldRef<"Floors_history", 'Int'>
    readonly size_min: FieldRef<"Floors_history", 'Int'>
    readonly size_max: FieldRef<"Floors_history", 'Int'>
    readonly avg_sale_price: FieldRef<"Floors_history", 'Int'>
    readonly avg_monthly_rent: FieldRef<"Floors_history", 'Int'>
    readonly instalment_plan: FieldRef<"Floors_history", 'String'>
    readonly instalment_period: FieldRef<"Floors_history", 'Int'>
    readonly down_payment_amount: FieldRef<"Floors_history", 'Int'>
    readonly instalment_amount: FieldRef<"Floors_history", 'Int'>
    readonly possession_amount: FieldRef<"Floors_history", 'Int'>
    readonly date: FieldRef<"Floors_history", 'String'>
    readonly remarks: FieldRef<"Floors_history", 'String'>
    readonly createdAt: FieldRef<"Floors_history", 'DateTime'>
    readonly updatedAt: FieldRef<"Floors_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Floors_history findUnique
   */
  export type Floors_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * Filter, which Floors_history to fetch.
     */
    where: Floors_historyWhereUniqueInput
  }

  /**
   * Floors_history findUniqueOrThrow
   */
  export type Floors_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * Filter, which Floors_history to fetch.
     */
    where: Floors_historyWhereUniqueInput
  }

  /**
   * Floors_history findFirst
   */
  export type Floors_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * Filter, which Floors_history to fetch.
     */
    where?: Floors_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Floors_histories to fetch.
     */
    orderBy?: Floors_historyOrderByWithRelationInput | Floors_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Floors_histories.
     */
    cursor?: Floors_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Floors_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Floors_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Floors_histories.
     */
    distinct?: Floors_historyScalarFieldEnum | Floors_historyScalarFieldEnum[]
  }

  /**
   * Floors_history findFirstOrThrow
   */
  export type Floors_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * Filter, which Floors_history to fetch.
     */
    where?: Floors_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Floors_histories to fetch.
     */
    orderBy?: Floors_historyOrderByWithRelationInput | Floors_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Floors_histories.
     */
    cursor?: Floors_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Floors_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Floors_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Floors_histories.
     */
    distinct?: Floors_historyScalarFieldEnum | Floors_historyScalarFieldEnum[]
  }

  /**
   * Floors_history findMany
   */
  export type Floors_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * Filter, which Floors_histories to fetch.
     */
    where?: Floors_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Floors_histories to fetch.
     */
    orderBy?: Floors_historyOrderByWithRelationInput | Floors_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Floors_histories.
     */
    cursor?: Floors_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Floors_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Floors_histories.
     */
    skip?: number
    distinct?: Floors_historyScalarFieldEnum | Floors_historyScalarFieldEnum[]
  }

  /**
   * Floors_history create
   */
  export type Floors_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * The data needed to create a Floors_history.
     */
    data: XOR<Floors_historyCreateInput, Floors_historyUncheckedCreateInput>
  }

  /**
   * Floors_history createMany
   */
  export type Floors_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Floors_histories.
     */
    data: Floors_historyCreateManyInput | Floors_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Floors_history createManyAndReturn
   */
  export type Floors_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Floors_histories.
     */
    data: Floors_historyCreateManyInput | Floors_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Floors_history update
   */
  export type Floors_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * The data needed to update a Floors_history.
     */
    data: XOR<Floors_historyUpdateInput, Floors_historyUncheckedUpdateInput>
    /**
     * Choose, which Floors_history to update.
     */
    where: Floors_historyWhereUniqueInput
  }

  /**
   * Floors_history updateMany
   */
  export type Floors_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Floors_histories.
     */
    data: XOR<Floors_historyUpdateManyMutationInput, Floors_historyUncheckedUpdateManyInput>
    /**
     * Filter which Floors_histories to update
     */
    where?: Floors_historyWhereInput
  }

  /**
   * Floors_history upsert
   */
  export type Floors_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * The filter to search for the Floors_history to update in case it exists.
     */
    where: Floors_historyWhereUniqueInput
    /**
     * In case the Floors_history found by the `where` argument doesn't exist, create a new Floors_history with this data.
     */
    create: XOR<Floors_historyCreateInput, Floors_historyUncheckedCreateInput>
    /**
     * In case the Floors_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Floors_historyUpdateInput, Floors_historyUncheckedUpdateInput>
  }

  /**
   * Floors_history delete
   */
  export type Floors_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
    /**
     * Filter which Floors_history to delete.
     */
    where: Floors_historyWhereUniqueInput
  }

  /**
   * Floors_history deleteMany
   */
  export type Floors_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Floors_histories to delete
     */
    where?: Floors_historyWhereInput
  }

  /**
   * Floors_history without action
   */
  export type Floors_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Floors_history
     */
    select?: Floors_historySelect<ExtArgs> | null
  }


  /**
   * Model Societies
   */

  export type AggregateSocieties = {
    _count: SocietiesCountAggregateOutputType | null
    _avg: SocietiesAvgAggregateOutputType | null
    _sum: SocietiesSumAggregateOutputType | null
    _min: SocietiesMinAggregateOutputType | null
    _max: SocietiesMaxAggregateOutputType | null
  }

  export type SocietiesAvgAggregateOutputType = {
    id: number | null
    blocks: number | null
    phase: number | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    total_apartments: number | null
    societies_apartment_size: number | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    contact_no: number | null
  }

  export type SocietiesSumAggregateOutputType = {
    id: number | null
    blocks: number | null
    phase: number | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    total_apartments: number | null
    societies_apartment_size: number | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    contact_no: number | null
  }

  export type SocietiesMinAggregateOutputType = {
    id: number | null
    survey_date: string | null
    city: string | null
    type: string | null
    name: string | null
    zone: string | null
    address: string | null
    blocks: number | null
    phase: number | null
    grade: string | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    plot_sizes_residential_87_5: string | null
    plot_sizes_residential_125: string | null
    plot_sizes_residential_200: string | null
    plot_sizes_residential_250: string | null
    plot_sizes_residential_300: string | null
    plot_sizes_residential_400: string | null
    plot_sizes_residential_500: string | null
    plot_sizes_residential_600: string | null
    plot_sizes_residential_800: string | null
    plot_sizes_residential_1000: string | null
    plot_sizes_residential_2000: string | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    plot_sizes_commercial_87_5: string | null
    plot_sizes_commercial_100: string | null
    plot_sizes_commercial_125: string | null
    plot_sizes_commercial_200: string | null
    plot_sizes_commercial_250: string | null
    plot_sizes_commercial_500: string | null
    plot_sizes_commercial_1000: string | null
    plot_sizes_commercial_2000: string | null
    total_apartments: number | null
    societies_apartment_size: number | null
    apartment_studio: string | null
    apartment_one_bad: string | null
    apartment_two_bad: string | null
    apartment_three_bad: string | null
    apartment_four_bad: string | null
    apartment_five_bad: string | null
    apartment_penthouse: string | null
    apartment_duplex: string | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    payment_terms: string | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    features_type_parks: string | null
    features_type_school: string | null
    features_type_university: string | null
    features_type_hospital: string | null
    features_type_commercial_market: string | null
    features_type_zoo: string | null
    features_type_food_arena: string | null
    features_type_college: string | null
    features_type_graveyard: string | null
    features_type_grid_station: string | null
    features_type_masjid: string | null
    features_type_community_club: string | null
    features_type_gated_community: string | null
    utilities_type_underground_electrification: string | null
    utilities_type_gas: string | null
    utilities_type_water: string | null
    utilities_type_utilities_electricity: string | null
    utilities_type_drainage: string | null
    developer_name: string | null
    contact_no: number | null
    survery_remarks: string | null
    imagePath: string | null
    societies_draft: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SocietiesMaxAggregateOutputType = {
    id: number | null
    survey_date: string | null
    city: string | null
    type: string | null
    name: string | null
    zone: string | null
    address: string | null
    blocks: number | null
    phase: number | null
    grade: string | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    plot_sizes_residential_87_5: string | null
    plot_sizes_residential_125: string | null
    plot_sizes_residential_200: string | null
    plot_sizes_residential_250: string | null
    plot_sizes_residential_300: string | null
    plot_sizes_residential_400: string | null
    plot_sizes_residential_500: string | null
    plot_sizes_residential_600: string | null
    plot_sizes_residential_800: string | null
    plot_sizes_residential_1000: string | null
    plot_sizes_residential_2000: string | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    plot_sizes_commercial_87_5: string | null
    plot_sizes_commercial_100: string | null
    plot_sizes_commercial_125: string | null
    plot_sizes_commercial_200: string | null
    plot_sizes_commercial_250: string | null
    plot_sizes_commercial_500: string | null
    plot_sizes_commercial_1000: string | null
    plot_sizes_commercial_2000: string | null
    total_apartments: number | null
    societies_apartment_size: number | null
    apartment_studio: string | null
    apartment_one_bad: string | null
    apartment_two_bad: string | null
    apartment_three_bad: string | null
    apartment_four_bad: string | null
    apartment_five_bad: string | null
    apartment_penthouse: string | null
    apartment_duplex: string | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    payment_terms: string | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    features_type_parks: string | null
    features_type_school: string | null
    features_type_university: string | null
    features_type_hospital: string | null
    features_type_commercial_market: string | null
    features_type_zoo: string | null
    features_type_food_arena: string | null
    features_type_college: string | null
    features_type_graveyard: string | null
    features_type_grid_station: string | null
    features_type_masjid: string | null
    features_type_community_club: string | null
    features_type_gated_community: string | null
    utilities_type_underground_electrification: string | null
    utilities_type_gas: string | null
    utilities_type_water: string | null
    utilities_type_utilities_electricity: string | null
    utilities_type_drainage: string | null
    developer_name: string | null
    contact_no: number | null
    survery_remarks: string | null
    imagePath: string | null
    societies_draft: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type SocietiesCountAggregateOutputType = {
    id: number
    survey_date: number
    city: number
    type: number
    name: number
    zone: number
    address: number
    blocks: number
    phase: number
    grade: number
    occupancy: number
    area: number
    population: number
    launch_year: number
    total_plots_residential: number
    plot_sizes_residential: number
    plot_sizes_residential_87_5: number
    plot_sizes_residential_125: number
    plot_sizes_residential_200: number
    plot_sizes_residential_250: number
    plot_sizes_residential_300: number
    plot_sizes_residential_400: number
    plot_sizes_residential_500: number
    plot_sizes_residential_600: number
    plot_sizes_residential_800: number
    plot_sizes_residential_1000: number
    plot_sizes_residential_2000: number
    total_plots_commercial: number
    plot_sizes_commercial: number
    plot_sizes_commercial_87_5: number
    plot_sizes_commercial_100: number
    plot_sizes_commercial_125: number
    plot_sizes_commercial_200: number
    plot_sizes_commercial_250: number
    plot_sizes_commercial_500: number
    plot_sizes_commercial_1000: number
    plot_sizes_commercial_2000: number
    total_apartments: number
    societies_apartment_size: number
    apartment_studio: number
    apartment_one_bad: number
    apartment_two_bad: number
    apartment_three_bad: number
    apartment_four_bad: number
    apartment_five_bad: number
    apartment_penthouse: number
    apartment_duplex: number
    plot_size: number
    plot_price: number
    vilas_size: number
    vilas_price: number
    vilas_monthly_rent: number
    commercial_plot_size: number
    commercial_plot_price: number
    apartment_size: number
    min_apartments_price: number
    max_apartments_price: number
    min_apartments_monthly_rent: number
    max_apartments_monthly_rent: number
    payment_terms: number
    instalment_total_amount: number
    instalment_down_payment: number
    instalment_possession_Amount: number
    instalment_period: number
    features_type_parks: number
    features_type_school: number
    features_type_university: number
    features_type_hospital: number
    features_type_commercial_market: number
    features_type_zoo: number
    features_type_food_arena: number
    features_type_college: number
    features_type_graveyard: number
    features_type_grid_station: number
    features_type_masjid: number
    features_type_community_club: number
    features_type_gated_community: number
    utilities_type_underground_electrification: number
    utilities_type_gas: number
    utilities_type_water: number
    utilities_type_utilities_electricity: number
    utilities_type_drainage: number
    developer_name: number
    contact_no: number
    survery_remarks: number
    imagePath: number
    societies_draft: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type SocietiesAvgAggregateInputType = {
    id?: true
    blocks?: true
    phase?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    total_apartments?: true
    societies_apartment_size?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    contact_no?: true
  }

  export type SocietiesSumAggregateInputType = {
    id?: true
    blocks?: true
    phase?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    total_apartments?: true
    societies_apartment_size?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    contact_no?: true
  }

  export type SocietiesMinAggregateInputType = {
    id?: true
    survey_date?: true
    city?: true
    type?: true
    name?: true
    zone?: true
    address?: true
    blocks?: true
    phase?: true
    grade?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    plot_sizes_residential_87_5?: true
    plot_sizes_residential_125?: true
    plot_sizes_residential_200?: true
    plot_sizes_residential_250?: true
    plot_sizes_residential_300?: true
    plot_sizes_residential_400?: true
    plot_sizes_residential_500?: true
    plot_sizes_residential_600?: true
    plot_sizes_residential_800?: true
    plot_sizes_residential_1000?: true
    plot_sizes_residential_2000?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    plot_sizes_commercial_87_5?: true
    plot_sizes_commercial_100?: true
    plot_sizes_commercial_125?: true
    plot_sizes_commercial_200?: true
    plot_sizes_commercial_250?: true
    plot_sizes_commercial_500?: true
    plot_sizes_commercial_1000?: true
    plot_sizes_commercial_2000?: true
    total_apartments?: true
    societies_apartment_size?: true
    apartment_studio?: true
    apartment_one_bad?: true
    apartment_two_bad?: true
    apartment_three_bad?: true
    apartment_four_bad?: true
    apartment_five_bad?: true
    apartment_penthouse?: true
    apartment_duplex?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    payment_terms?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    features_type_parks?: true
    features_type_school?: true
    features_type_university?: true
    features_type_hospital?: true
    features_type_commercial_market?: true
    features_type_zoo?: true
    features_type_food_arena?: true
    features_type_college?: true
    features_type_graveyard?: true
    features_type_grid_station?: true
    features_type_masjid?: true
    features_type_community_club?: true
    features_type_gated_community?: true
    utilities_type_underground_electrification?: true
    utilities_type_gas?: true
    utilities_type_water?: true
    utilities_type_utilities_electricity?: true
    utilities_type_drainage?: true
    developer_name?: true
    contact_no?: true
    survery_remarks?: true
    imagePath?: true
    societies_draft?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SocietiesMaxAggregateInputType = {
    id?: true
    survey_date?: true
    city?: true
    type?: true
    name?: true
    zone?: true
    address?: true
    blocks?: true
    phase?: true
    grade?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    plot_sizes_residential_87_5?: true
    plot_sizes_residential_125?: true
    plot_sizes_residential_200?: true
    plot_sizes_residential_250?: true
    plot_sizes_residential_300?: true
    plot_sizes_residential_400?: true
    plot_sizes_residential_500?: true
    plot_sizes_residential_600?: true
    plot_sizes_residential_800?: true
    plot_sizes_residential_1000?: true
    plot_sizes_residential_2000?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    plot_sizes_commercial_87_5?: true
    plot_sizes_commercial_100?: true
    plot_sizes_commercial_125?: true
    plot_sizes_commercial_200?: true
    plot_sizes_commercial_250?: true
    plot_sizes_commercial_500?: true
    plot_sizes_commercial_1000?: true
    plot_sizes_commercial_2000?: true
    total_apartments?: true
    societies_apartment_size?: true
    apartment_studio?: true
    apartment_one_bad?: true
    apartment_two_bad?: true
    apartment_three_bad?: true
    apartment_four_bad?: true
    apartment_five_bad?: true
    apartment_penthouse?: true
    apartment_duplex?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    payment_terms?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    features_type_parks?: true
    features_type_school?: true
    features_type_university?: true
    features_type_hospital?: true
    features_type_commercial_market?: true
    features_type_zoo?: true
    features_type_food_arena?: true
    features_type_college?: true
    features_type_graveyard?: true
    features_type_grid_station?: true
    features_type_masjid?: true
    features_type_community_club?: true
    features_type_gated_community?: true
    utilities_type_underground_electrification?: true
    utilities_type_gas?: true
    utilities_type_water?: true
    utilities_type_utilities_electricity?: true
    utilities_type_drainage?: true
    developer_name?: true
    contact_no?: true
    survery_remarks?: true
    imagePath?: true
    societies_draft?: true
    createdAt?: true
    updatedAt?: true
  }

  export type SocietiesCountAggregateInputType = {
    id?: true
    survey_date?: true
    city?: true
    type?: true
    name?: true
    zone?: true
    address?: true
    blocks?: true
    phase?: true
    grade?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    plot_sizes_residential_87_5?: true
    plot_sizes_residential_125?: true
    plot_sizes_residential_200?: true
    plot_sizes_residential_250?: true
    plot_sizes_residential_300?: true
    plot_sizes_residential_400?: true
    plot_sizes_residential_500?: true
    plot_sizes_residential_600?: true
    plot_sizes_residential_800?: true
    plot_sizes_residential_1000?: true
    plot_sizes_residential_2000?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    plot_sizes_commercial_87_5?: true
    plot_sizes_commercial_100?: true
    plot_sizes_commercial_125?: true
    plot_sizes_commercial_200?: true
    plot_sizes_commercial_250?: true
    plot_sizes_commercial_500?: true
    plot_sizes_commercial_1000?: true
    plot_sizes_commercial_2000?: true
    total_apartments?: true
    societies_apartment_size?: true
    apartment_studio?: true
    apartment_one_bad?: true
    apartment_two_bad?: true
    apartment_three_bad?: true
    apartment_four_bad?: true
    apartment_five_bad?: true
    apartment_penthouse?: true
    apartment_duplex?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    payment_terms?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    features_type_parks?: true
    features_type_school?: true
    features_type_university?: true
    features_type_hospital?: true
    features_type_commercial_market?: true
    features_type_zoo?: true
    features_type_food_arena?: true
    features_type_college?: true
    features_type_graveyard?: true
    features_type_grid_station?: true
    features_type_masjid?: true
    features_type_community_club?: true
    features_type_gated_community?: true
    utilities_type_underground_electrification?: true
    utilities_type_gas?: true
    utilities_type_water?: true
    utilities_type_utilities_electricity?: true
    utilities_type_drainage?: true
    developer_name?: true
    contact_no?: true
    survery_remarks?: true
    imagePath?: true
    societies_draft?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type SocietiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Societies to aggregate.
     */
    where?: SocietiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Societies to fetch.
     */
    orderBy?: SocietiesOrderByWithRelationInput | SocietiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SocietiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Societies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Societies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Societies
    **/
    _count?: true | SocietiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SocietiesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SocietiesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SocietiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SocietiesMaxAggregateInputType
  }

  export type GetSocietiesAggregateType<T extends SocietiesAggregateArgs> = {
        [P in keyof T & keyof AggregateSocieties]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSocieties[P]>
      : GetScalarType<T[P], AggregateSocieties[P]>
  }




  export type SocietiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SocietiesWhereInput
    orderBy?: SocietiesOrderByWithAggregationInput | SocietiesOrderByWithAggregationInput[]
    by: SocietiesScalarFieldEnum[] | SocietiesScalarFieldEnum
    having?: SocietiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SocietiesCountAggregateInputType | true
    _avg?: SocietiesAvgAggregateInputType
    _sum?: SocietiesSumAggregateInputType
    _min?: SocietiesMinAggregateInputType
    _max?: SocietiesMaxAggregateInputType
  }

  export type SocietiesGroupByOutputType = {
    id: number
    survey_date: string | null
    city: string
    type: string | null
    name: string | null
    zone: string | null
    address: string | null
    blocks: number | null
    phase: number | null
    grade: string | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    plot_sizes_residential_87_5: string | null
    plot_sizes_residential_125: string | null
    plot_sizes_residential_200: string | null
    plot_sizes_residential_250: string | null
    plot_sizes_residential_300: string | null
    plot_sizes_residential_400: string | null
    plot_sizes_residential_500: string | null
    plot_sizes_residential_600: string | null
    plot_sizes_residential_800: string | null
    plot_sizes_residential_1000: string | null
    plot_sizes_residential_2000: string | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    plot_sizes_commercial_87_5: string | null
    plot_sizes_commercial_100: string | null
    plot_sizes_commercial_125: string | null
    plot_sizes_commercial_200: string | null
    plot_sizes_commercial_250: string | null
    plot_sizes_commercial_500: string | null
    plot_sizes_commercial_1000: string | null
    plot_sizes_commercial_2000: string | null
    total_apartments: number | null
    societies_apartment_size: number | null
    apartment_studio: string | null
    apartment_one_bad: string | null
    apartment_two_bad: string | null
    apartment_three_bad: string | null
    apartment_four_bad: string | null
    apartment_five_bad: string | null
    apartment_penthouse: string | null
    apartment_duplex: string | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    payment_terms: string | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    features_type_parks: string | null
    features_type_school: string | null
    features_type_university: string | null
    features_type_hospital: string | null
    features_type_commercial_market: string | null
    features_type_zoo: string | null
    features_type_food_arena: string | null
    features_type_college: string | null
    features_type_graveyard: string | null
    features_type_grid_station: string | null
    features_type_masjid: string | null
    features_type_community_club: string | null
    features_type_gated_community: string | null
    utilities_type_underground_electrification: string | null
    utilities_type_gas: string | null
    utilities_type_water: string | null
    utilities_type_utilities_electricity: string | null
    utilities_type_drainage: string | null
    developer_name: string | null
    contact_no: number | null
    survery_remarks: string | null
    imagePath: string | null
    societies_draft: string | null
    createdAt: Date
    updatedAt: Date
    _count: SocietiesCountAggregateOutputType | null
    _avg: SocietiesAvgAggregateOutputType | null
    _sum: SocietiesSumAggregateOutputType | null
    _min: SocietiesMinAggregateOutputType | null
    _max: SocietiesMaxAggregateOutputType | null
  }

  type GetSocietiesGroupByPayload<T extends SocietiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SocietiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SocietiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SocietiesGroupByOutputType[P]>
            : GetScalarType<T[P], SocietiesGroupByOutputType[P]>
        }
      >
    >


  export type SocietiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    survey_date?: boolean
    city?: boolean
    type?: boolean
    name?: boolean
    zone?: boolean
    address?: boolean
    blocks?: boolean
    phase?: boolean
    grade?: boolean
    occupancy?: boolean
    area?: boolean
    population?: boolean
    launch_year?: boolean
    total_plots_residential?: boolean
    plot_sizes_residential?: boolean
    plot_sizes_residential_87_5?: boolean
    plot_sizes_residential_125?: boolean
    plot_sizes_residential_200?: boolean
    plot_sizes_residential_250?: boolean
    plot_sizes_residential_300?: boolean
    plot_sizes_residential_400?: boolean
    plot_sizes_residential_500?: boolean
    plot_sizes_residential_600?: boolean
    plot_sizes_residential_800?: boolean
    plot_sizes_residential_1000?: boolean
    plot_sizes_residential_2000?: boolean
    total_plots_commercial?: boolean
    plot_sizes_commercial?: boolean
    plot_sizes_commercial_87_5?: boolean
    plot_sizes_commercial_100?: boolean
    plot_sizes_commercial_125?: boolean
    plot_sizes_commercial_200?: boolean
    plot_sizes_commercial_250?: boolean
    plot_sizes_commercial_500?: boolean
    plot_sizes_commercial_1000?: boolean
    plot_sizes_commercial_2000?: boolean
    total_apartments?: boolean
    societies_apartment_size?: boolean
    apartment_studio?: boolean
    apartment_one_bad?: boolean
    apartment_two_bad?: boolean
    apartment_three_bad?: boolean
    apartment_four_bad?: boolean
    apartment_five_bad?: boolean
    apartment_penthouse?: boolean
    apartment_duplex?: boolean
    plot_size?: boolean
    plot_price?: boolean
    vilas_size?: boolean
    vilas_price?: boolean
    vilas_monthly_rent?: boolean
    commercial_plot_size?: boolean
    commercial_plot_price?: boolean
    apartment_size?: boolean
    min_apartments_price?: boolean
    max_apartments_price?: boolean
    min_apartments_monthly_rent?: boolean
    max_apartments_monthly_rent?: boolean
    payment_terms?: boolean
    instalment_total_amount?: boolean
    instalment_down_payment?: boolean
    instalment_possession_Amount?: boolean
    instalment_period?: boolean
    features_type_parks?: boolean
    features_type_school?: boolean
    features_type_university?: boolean
    features_type_hospital?: boolean
    features_type_commercial_market?: boolean
    features_type_zoo?: boolean
    features_type_food_arena?: boolean
    features_type_college?: boolean
    features_type_graveyard?: boolean
    features_type_grid_station?: boolean
    features_type_masjid?: boolean
    features_type_community_club?: boolean
    features_type_gated_community?: boolean
    utilities_type_underground_electrification?: boolean
    utilities_type_gas?: boolean
    utilities_type_water?: boolean
    utilities_type_utilities_electricity?: boolean
    utilities_type_drainage?: boolean
    developer_name?: boolean
    contact_no?: boolean
    survery_remarks?: boolean
    imagePath?: boolean
    societies_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Plots?: boolean | Societies$PlotsArgs<ExtArgs>
    Houses?: boolean | Societies$HousesArgs<ExtArgs>
    _count?: boolean | SocietiesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["societies"]>

  export type SocietiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    survey_date?: boolean
    city?: boolean
    type?: boolean
    name?: boolean
    zone?: boolean
    address?: boolean
    blocks?: boolean
    phase?: boolean
    grade?: boolean
    occupancy?: boolean
    area?: boolean
    population?: boolean
    launch_year?: boolean
    total_plots_residential?: boolean
    plot_sizes_residential?: boolean
    plot_sizes_residential_87_5?: boolean
    plot_sizes_residential_125?: boolean
    plot_sizes_residential_200?: boolean
    plot_sizes_residential_250?: boolean
    plot_sizes_residential_300?: boolean
    plot_sizes_residential_400?: boolean
    plot_sizes_residential_500?: boolean
    plot_sizes_residential_600?: boolean
    plot_sizes_residential_800?: boolean
    plot_sizes_residential_1000?: boolean
    plot_sizes_residential_2000?: boolean
    total_plots_commercial?: boolean
    plot_sizes_commercial?: boolean
    plot_sizes_commercial_87_5?: boolean
    plot_sizes_commercial_100?: boolean
    plot_sizes_commercial_125?: boolean
    plot_sizes_commercial_200?: boolean
    plot_sizes_commercial_250?: boolean
    plot_sizes_commercial_500?: boolean
    plot_sizes_commercial_1000?: boolean
    plot_sizes_commercial_2000?: boolean
    total_apartments?: boolean
    societies_apartment_size?: boolean
    apartment_studio?: boolean
    apartment_one_bad?: boolean
    apartment_two_bad?: boolean
    apartment_three_bad?: boolean
    apartment_four_bad?: boolean
    apartment_five_bad?: boolean
    apartment_penthouse?: boolean
    apartment_duplex?: boolean
    plot_size?: boolean
    plot_price?: boolean
    vilas_size?: boolean
    vilas_price?: boolean
    vilas_monthly_rent?: boolean
    commercial_plot_size?: boolean
    commercial_plot_price?: boolean
    apartment_size?: boolean
    min_apartments_price?: boolean
    max_apartments_price?: boolean
    min_apartments_monthly_rent?: boolean
    max_apartments_monthly_rent?: boolean
    payment_terms?: boolean
    instalment_total_amount?: boolean
    instalment_down_payment?: boolean
    instalment_possession_Amount?: boolean
    instalment_period?: boolean
    features_type_parks?: boolean
    features_type_school?: boolean
    features_type_university?: boolean
    features_type_hospital?: boolean
    features_type_commercial_market?: boolean
    features_type_zoo?: boolean
    features_type_food_arena?: boolean
    features_type_college?: boolean
    features_type_graveyard?: boolean
    features_type_grid_station?: boolean
    features_type_masjid?: boolean
    features_type_community_club?: boolean
    features_type_gated_community?: boolean
    utilities_type_underground_electrification?: boolean
    utilities_type_gas?: boolean
    utilities_type_water?: boolean
    utilities_type_utilities_electricity?: boolean
    utilities_type_drainage?: boolean
    developer_name?: boolean
    contact_no?: boolean
    survery_remarks?: boolean
    imagePath?: boolean
    societies_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["societies"]>

  export type SocietiesSelectScalar = {
    id?: boolean
    survey_date?: boolean
    city?: boolean
    type?: boolean
    name?: boolean
    zone?: boolean
    address?: boolean
    blocks?: boolean
    phase?: boolean
    grade?: boolean
    occupancy?: boolean
    area?: boolean
    population?: boolean
    launch_year?: boolean
    total_plots_residential?: boolean
    plot_sizes_residential?: boolean
    plot_sizes_residential_87_5?: boolean
    plot_sizes_residential_125?: boolean
    plot_sizes_residential_200?: boolean
    plot_sizes_residential_250?: boolean
    plot_sizes_residential_300?: boolean
    plot_sizes_residential_400?: boolean
    plot_sizes_residential_500?: boolean
    plot_sizes_residential_600?: boolean
    plot_sizes_residential_800?: boolean
    plot_sizes_residential_1000?: boolean
    plot_sizes_residential_2000?: boolean
    total_plots_commercial?: boolean
    plot_sizes_commercial?: boolean
    plot_sizes_commercial_87_5?: boolean
    plot_sizes_commercial_100?: boolean
    plot_sizes_commercial_125?: boolean
    plot_sizes_commercial_200?: boolean
    plot_sizes_commercial_250?: boolean
    plot_sizes_commercial_500?: boolean
    plot_sizes_commercial_1000?: boolean
    plot_sizes_commercial_2000?: boolean
    total_apartments?: boolean
    societies_apartment_size?: boolean
    apartment_studio?: boolean
    apartment_one_bad?: boolean
    apartment_two_bad?: boolean
    apartment_three_bad?: boolean
    apartment_four_bad?: boolean
    apartment_five_bad?: boolean
    apartment_penthouse?: boolean
    apartment_duplex?: boolean
    plot_size?: boolean
    plot_price?: boolean
    vilas_size?: boolean
    vilas_price?: boolean
    vilas_monthly_rent?: boolean
    commercial_plot_size?: boolean
    commercial_plot_price?: boolean
    apartment_size?: boolean
    min_apartments_price?: boolean
    max_apartments_price?: boolean
    min_apartments_monthly_rent?: boolean
    max_apartments_monthly_rent?: boolean
    payment_terms?: boolean
    instalment_total_amount?: boolean
    instalment_down_payment?: boolean
    instalment_possession_Amount?: boolean
    instalment_period?: boolean
    features_type_parks?: boolean
    features_type_school?: boolean
    features_type_university?: boolean
    features_type_hospital?: boolean
    features_type_commercial_market?: boolean
    features_type_zoo?: boolean
    features_type_food_arena?: boolean
    features_type_college?: boolean
    features_type_graveyard?: boolean
    features_type_grid_station?: boolean
    features_type_masjid?: boolean
    features_type_community_club?: boolean
    features_type_gated_community?: boolean
    utilities_type_underground_electrification?: boolean
    utilities_type_gas?: boolean
    utilities_type_water?: boolean
    utilities_type_utilities_electricity?: boolean
    utilities_type_drainage?: boolean
    developer_name?: boolean
    contact_no?: boolean
    survery_remarks?: boolean
    imagePath?: boolean
    societies_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type SocietiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Plots?: boolean | Societies$PlotsArgs<ExtArgs>
    Houses?: boolean | Societies$HousesArgs<ExtArgs>
    _count?: boolean | SocietiesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SocietiesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $SocietiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Societies"
    objects: {
      Plots: Prisma.$PlotsPayload<ExtArgs>[]
      Houses: Prisma.$HousesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      survey_date: string | null
      city: string
      type: string | null
      name: string | null
      zone: string | null
      address: string | null
      blocks: number | null
      phase: number | null
      grade: string | null
      occupancy: number | null
      area: number | null
      population: number | null
      launch_year: number | null
      total_plots_residential: number | null
      plot_sizes_residential: number | null
      plot_sizes_residential_87_5: string | null
      plot_sizes_residential_125: string | null
      plot_sizes_residential_200: string | null
      plot_sizes_residential_250: string | null
      plot_sizes_residential_300: string | null
      plot_sizes_residential_400: string | null
      plot_sizes_residential_500: string | null
      plot_sizes_residential_600: string | null
      plot_sizes_residential_800: string | null
      plot_sizes_residential_1000: string | null
      plot_sizes_residential_2000: string | null
      total_plots_commercial: number | null
      plot_sizes_commercial: number | null
      plot_sizes_commercial_87_5: string | null
      plot_sizes_commercial_100: string | null
      plot_sizes_commercial_125: string | null
      plot_sizes_commercial_200: string | null
      plot_sizes_commercial_250: string | null
      plot_sizes_commercial_500: string | null
      plot_sizes_commercial_1000: string | null
      plot_sizes_commercial_2000: string | null
      total_apartments: number | null
      societies_apartment_size: number | null
      apartment_studio: string | null
      apartment_one_bad: string | null
      apartment_two_bad: string | null
      apartment_three_bad: string | null
      apartment_four_bad: string | null
      apartment_five_bad: string | null
      apartment_penthouse: string | null
      apartment_duplex: string | null
      plot_size: number | null
      plot_price: number | null
      vilas_size: number | null
      vilas_price: number | null
      vilas_monthly_rent: number | null
      commercial_plot_size: number | null
      commercial_plot_price: number | null
      apartment_size: number | null
      min_apartments_price: number | null
      max_apartments_price: number | null
      min_apartments_monthly_rent: number | null
      max_apartments_monthly_rent: number | null
      payment_terms: string | null
      instalment_total_amount: number | null
      instalment_down_payment: number | null
      instalment_possession_Amount: number | null
      instalment_period: number | null
      features_type_parks: string | null
      features_type_school: string | null
      features_type_university: string | null
      features_type_hospital: string | null
      features_type_commercial_market: string | null
      features_type_zoo: string | null
      features_type_food_arena: string | null
      features_type_college: string | null
      features_type_graveyard: string | null
      features_type_grid_station: string | null
      features_type_masjid: string | null
      features_type_community_club: string | null
      features_type_gated_community: string | null
      utilities_type_underground_electrification: string | null
      utilities_type_gas: string | null
      utilities_type_water: string | null
      utilities_type_utilities_electricity: string | null
      utilities_type_drainage: string | null
      developer_name: string | null
      contact_no: number | null
      survery_remarks: string | null
      imagePath: string | null
      societies_draft: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["societies"]>
    composites: {}
  }

  type SocietiesGetPayload<S extends boolean | null | undefined | SocietiesDefaultArgs> = $Result.GetResult<Prisma.$SocietiesPayload, S>

  type SocietiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SocietiesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SocietiesCountAggregateInputType | true
    }

  export interface SocietiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Societies'], meta: { name: 'Societies' } }
    /**
     * Find zero or one Societies that matches the filter.
     * @param {SocietiesFindUniqueArgs} args - Arguments to find a Societies
     * @example
     * // Get one Societies
     * const societies = await prisma.societies.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SocietiesFindUniqueArgs>(args: SelectSubset<T, SocietiesFindUniqueArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Societies that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SocietiesFindUniqueOrThrowArgs} args - Arguments to find a Societies
     * @example
     * // Get one Societies
     * const societies = await prisma.societies.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SocietiesFindUniqueOrThrowArgs>(args: SelectSubset<T, SocietiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Societies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocietiesFindFirstArgs} args - Arguments to find a Societies
     * @example
     * // Get one Societies
     * const societies = await prisma.societies.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SocietiesFindFirstArgs>(args?: SelectSubset<T, SocietiesFindFirstArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Societies that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocietiesFindFirstOrThrowArgs} args - Arguments to find a Societies
     * @example
     * // Get one Societies
     * const societies = await prisma.societies.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SocietiesFindFirstOrThrowArgs>(args?: SelectSubset<T, SocietiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Societies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocietiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Societies
     * const societies = await prisma.societies.findMany()
     * 
     * // Get first 10 Societies
     * const societies = await prisma.societies.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const societiesWithIdOnly = await prisma.societies.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SocietiesFindManyArgs>(args?: SelectSubset<T, SocietiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Societies.
     * @param {SocietiesCreateArgs} args - Arguments to create a Societies.
     * @example
     * // Create one Societies
     * const Societies = await prisma.societies.create({
     *   data: {
     *     // ... data to create a Societies
     *   }
     * })
     * 
     */
    create<T extends SocietiesCreateArgs>(args: SelectSubset<T, SocietiesCreateArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Societies.
     * @param {SocietiesCreateManyArgs} args - Arguments to create many Societies.
     * @example
     * // Create many Societies
     * const societies = await prisma.societies.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SocietiesCreateManyArgs>(args?: SelectSubset<T, SocietiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Societies and returns the data saved in the database.
     * @param {SocietiesCreateManyAndReturnArgs} args - Arguments to create many Societies.
     * @example
     * // Create many Societies
     * const societies = await prisma.societies.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Societies and only return the `id`
     * const societiesWithIdOnly = await prisma.societies.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SocietiesCreateManyAndReturnArgs>(args?: SelectSubset<T, SocietiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Societies.
     * @param {SocietiesDeleteArgs} args - Arguments to delete one Societies.
     * @example
     * // Delete one Societies
     * const Societies = await prisma.societies.delete({
     *   where: {
     *     // ... filter to delete one Societies
     *   }
     * })
     * 
     */
    delete<T extends SocietiesDeleteArgs>(args: SelectSubset<T, SocietiesDeleteArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Societies.
     * @param {SocietiesUpdateArgs} args - Arguments to update one Societies.
     * @example
     * // Update one Societies
     * const societies = await prisma.societies.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SocietiesUpdateArgs>(args: SelectSubset<T, SocietiesUpdateArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Societies.
     * @param {SocietiesDeleteManyArgs} args - Arguments to filter Societies to delete.
     * @example
     * // Delete a few Societies
     * const { count } = await prisma.societies.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SocietiesDeleteManyArgs>(args?: SelectSubset<T, SocietiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Societies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocietiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Societies
     * const societies = await prisma.societies.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SocietiesUpdateManyArgs>(args: SelectSubset<T, SocietiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Societies.
     * @param {SocietiesUpsertArgs} args - Arguments to update or create a Societies.
     * @example
     * // Update or create a Societies
     * const societies = await prisma.societies.upsert({
     *   create: {
     *     // ... data to create a Societies
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Societies we want to update
     *   }
     * })
     */
    upsert<T extends SocietiesUpsertArgs>(args: SelectSubset<T, SocietiesUpsertArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Societies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocietiesCountArgs} args - Arguments to filter Societies to count.
     * @example
     * // Count the number of Societies
     * const count = await prisma.societies.count({
     *   where: {
     *     // ... the filter for the Societies we want to count
     *   }
     * })
    **/
    count<T extends SocietiesCountArgs>(
      args?: Subset<T, SocietiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SocietiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Societies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocietiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SocietiesAggregateArgs>(args: Subset<T, SocietiesAggregateArgs>): Prisma.PrismaPromise<GetSocietiesAggregateType<T>>

    /**
     * Group by Societies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SocietiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SocietiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SocietiesGroupByArgs['orderBy'] }
        : { orderBy?: SocietiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SocietiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSocietiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Societies model
   */
  readonly fields: SocietiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Societies.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SocietiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Plots<T extends Societies$PlotsArgs<ExtArgs> = {}>(args?: Subset<T, Societies$PlotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "findMany"> | Null>
    Houses<T extends Societies$HousesArgs<ExtArgs> = {}>(args?: Subset<T, Societies$HousesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Societies model
   */ 
  interface SocietiesFieldRefs {
    readonly id: FieldRef<"Societies", 'Int'>
    readonly survey_date: FieldRef<"Societies", 'String'>
    readonly city: FieldRef<"Societies", 'String'>
    readonly type: FieldRef<"Societies", 'String'>
    readonly name: FieldRef<"Societies", 'String'>
    readonly zone: FieldRef<"Societies", 'String'>
    readonly address: FieldRef<"Societies", 'String'>
    readonly blocks: FieldRef<"Societies", 'Int'>
    readonly phase: FieldRef<"Societies", 'Int'>
    readonly grade: FieldRef<"Societies", 'String'>
    readonly occupancy: FieldRef<"Societies", 'Int'>
    readonly area: FieldRef<"Societies", 'Int'>
    readonly population: FieldRef<"Societies", 'Int'>
    readonly launch_year: FieldRef<"Societies", 'Int'>
    readonly total_plots_residential: FieldRef<"Societies", 'Int'>
    readonly plot_sizes_residential: FieldRef<"Societies", 'Int'>
    readonly plot_sizes_residential_87_5: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_125: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_200: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_250: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_300: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_400: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_500: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_600: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_800: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_1000: FieldRef<"Societies", 'String'>
    readonly plot_sizes_residential_2000: FieldRef<"Societies", 'String'>
    readonly total_plots_commercial: FieldRef<"Societies", 'Int'>
    readonly plot_sizes_commercial: FieldRef<"Societies", 'Int'>
    readonly plot_sizes_commercial_87_5: FieldRef<"Societies", 'String'>
    readonly plot_sizes_commercial_100: FieldRef<"Societies", 'String'>
    readonly plot_sizes_commercial_125: FieldRef<"Societies", 'String'>
    readonly plot_sizes_commercial_200: FieldRef<"Societies", 'String'>
    readonly plot_sizes_commercial_250: FieldRef<"Societies", 'String'>
    readonly plot_sizes_commercial_500: FieldRef<"Societies", 'String'>
    readonly plot_sizes_commercial_1000: FieldRef<"Societies", 'String'>
    readonly plot_sizes_commercial_2000: FieldRef<"Societies", 'String'>
    readonly total_apartments: FieldRef<"Societies", 'Int'>
    readonly societies_apartment_size: FieldRef<"Societies", 'Int'>
    readonly apartment_studio: FieldRef<"Societies", 'String'>
    readonly apartment_one_bad: FieldRef<"Societies", 'String'>
    readonly apartment_two_bad: FieldRef<"Societies", 'String'>
    readonly apartment_three_bad: FieldRef<"Societies", 'String'>
    readonly apartment_four_bad: FieldRef<"Societies", 'String'>
    readonly apartment_five_bad: FieldRef<"Societies", 'String'>
    readonly apartment_penthouse: FieldRef<"Societies", 'String'>
    readonly apartment_duplex: FieldRef<"Societies", 'String'>
    readonly plot_size: FieldRef<"Societies", 'Int'>
    readonly plot_price: FieldRef<"Societies", 'Int'>
    readonly vilas_size: FieldRef<"Societies", 'Int'>
    readonly vilas_price: FieldRef<"Societies", 'Int'>
    readonly vilas_monthly_rent: FieldRef<"Societies", 'Int'>
    readonly commercial_plot_size: FieldRef<"Societies", 'Int'>
    readonly commercial_plot_price: FieldRef<"Societies", 'Int'>
    readonly apartment_size: FieldRef<"Societies", 'Int'>
    readonly min_apartments_price: FieldRef<"Societies", 'Int'>
    readonly max_apartments_price: FieldRef<"Societies", 'Int'>
    readonly min_apartments_monthly_rent: FieldRef<"Societies", 'Int'>
    readonly max_apartments_monthly_rent: FieldRef<"Societies", 'Int'>
    readonly payment_terms: FieldRef<"Societies", 'String'>
    readonly instalment_total_amount: FieldRef<"Societies", 'Int'>
    readonly instalment_down_payment: FieldRef<"Societies", 'Int'>
    readonly instalment_possession_Amount: FieldRef<"Societies", 'Int'>
    readonly instalment_period: FieldRef<"Societies", 'Int'>
    readonly features_type_parks: FieldRef<"Societies", 'String'>
    readonly features_type_school: FieldRef<"Societies", 'String'>
    readonly features_type_university: FieldRef<"Societies", 'String'>
    readonly features_type_hospital: FieldRef<"Societies", 'String'>
    readonly features_type_commercial_market: FieldRef<"Societies", 'String'>
    readonly features_type_zoo: FieldRef<"Societies", 'String'>
    readonly features_type_food_arena: FieldRef<"Societies", 'String'>
    readonly features_type_college: FieldRef<"Societies", 'String'>
    readonly features_type_graveyard: FieldRef<"Societies", 'String'>
    readonly features_type_grid_station: FieldRef<"Societies", 'String'>
    readonly features_type_masjid: FieldRef<"Societies", 'String'>
    readonly features_type_community_club: FieldRef<"Societies", 'String'>
    readonly features_type_gated_community: FieldRef<"Societies", 'String'>
    readonly utilities_type_underground_electrification: FieldRef<"Societies", 'String'>
    readonly utilities_type_gas: FieldRef<"Societies", 'String'>
    readonly utilities_type_water: FieldRef<"Societies", 'String'>
    readonly utilities_type_utilities_electricity: FieldRef<"Societies", 'String'>
    readonly utilities_type_drainage: FieldRef<"Societies", 'String'>
    readonly developer_name: FieldRef<"Societies", 'String'>
    readonly contact_no: FieldRef<"Societies", 'Int'>
    readonly survery_remarks: FieldRef<"Societies", 'String'>
    readonly imagePath: FieldRef<"Societies", 'String'>
    readonly societies_draft: FieldRef<"Societies", 'String'>
    readonly createdAt: FieldRef<"Societies", 'DateTime'>
    readonly updatedAt: FieldRef<"Societies", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Societies findUnique
   */
  export type SocietiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * Filter, which Societies to fetch.
     */
    where: SocietiesWhereUniqueInput
  }

  /**
   * Societies findUniqueOrThrow
   */
  export type SocietiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * Filter, which Societies to fetch.
     */
    where: SocietiesWhereUniqueInput
  }

  /**
   * Societies findFirst
   */
  export type SocietiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * Filter, which Societies to fetch.
     */
    where?: SocietiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Societies to fetch.
     */
    orderBy?: SocietiesOrderByWithRelationInput | SocietiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Societies.
     */
    cursor?: SocietiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Societies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Societies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Societies.
     */
    distinct?: SocietiesScalarFieldEnum | SocietiesScalarFieldEnum[]
  }

  /**
   * Societies findFirstOrThrow
   */
  export type SocietiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * Filter, which Societies to fetch.
     */
    where?: SocietiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Societies to fetch.
     */
    orderBy?: SocietiesOrderByWithRelationInput | SocietiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Societies.
     */
    cursor?: SocietiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Societies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Societies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Societies.
     */
    distinct?: SocietiesScalarFieldEnum | SocietiesScalarFieldEnum[]
  }

  /**
   * Societies findMany
   */
  export type SocietiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * Filter, which Societies to fetch.
     */
    where?: SocietiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Societies to fetch.
     */
    orderBy?: SocietiesOrderByWithRelationInput | SocietiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Societies.
     */
    cursor?: SocietiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Societies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Societies.
     */
    skip?: number
    distinct?: SocietiesScalarFieldEnum | SocietiesScalarFieldEnum[]
  }

  /**
   * Societies create
   */
  export type SocietiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * The data needed to create a Societies.
     */
    data: XOR<SocietiesCreateInput, SocietiesUncheckedCreateInput>
  }

  /**
   * Societies createMany
   */
  export type SocietiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Societies.
     */
    data: SocietiesCreateManyInput | SocietiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Societies createManyAndReturn
   */
  export type SocietiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Societies.
     */
    data: SocietiesCreateManyInput | SocietiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Societies update
   */
  export type SocietiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * The data needed to update a Societies.
     */
    data: XOR<SocietiesUpdateInput, SocietiesUncheckedUpdateInput>
    /**
     * Choose, which Societies to update.
     */
    where: SocietiesWhereUniqueInput
  }

  /**
   * Societies updateMany
   */
  export type SocietiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Societies.
     */
    data: XOR<SocietiesUpdateManyMutationInput, SocietiesUncheckedUpdateManyInput>
    /**
     * Filter which Societies to update
     */
    where?: SocietiesWhereInput
  }

  /**
   * Societies upsert
   */
  export type SocietiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * The filter to search for the Societies to update in case it exists.
     */
    where: SocietiesWhereUniqueInput
    /**
     * In case the Societies found by the `where` argument doesn't exist, create a new Societies with this data.
     */
    create: XOR<SocietiesCreateInput, SocietiesUncheckedCreateInput>
    /**
     * In case the Societies was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SocietiesUpdateInput, SocietiesUncheckedUpdateInput>
  }

  /**
   * Societies delete
   */
  export type SocietiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
    /**
     * Filter which Societies to delete.
     */
    where: SocietiesWhereUniqueInput
  }

  /**
   * Societies deleteMany
   */
  export type SocietiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Societies to delete
     */
    where?: SocietiesWhereInput
  }

  /**
   * Societies.Plots
   */
  export type Societies$PlotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    where?: PlotsWhereInput
    orderBy?: PlotsOrderByWithRelationInput | PlotsOrderByWithRelationInput[]
    cursor?: PlotsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PlotsScalarFieldEnum | PlotsScalarFieldEnum[]
  }

  /**
   * Societies.Houses
   */
  export type Societies$HousesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    where?: HousesWhereInput
    orderBy?: HousesOrderByWithRelationInput | HousesOrderByWithRelationInput[]
    cursor?: HousesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: HousesScalarFieldEnum | HousesScalarFieldEnum[]
  }

  /**
   * Societies without action
   */
  export type SocietiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies
     */
    select?: SocietiesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SocietiesInclude<ExtArgs> | null
  }


  /**
   * Model Societies_history
   */

  export type AggregateSocieties_history = {
    _count: Societies_historyCountAggregateOutputType | null
    _avg: Societies_historyAvgAggregateOutputType | null
    _sum: Societies_historySumAggregateOutputType | null
    _min: Societies_historyMinAggregateOutputType | null
    _max: Societies_historyMaxAggregateOutputType | null
  }

  export type Societies_historyAvgAggregateOutputType = {
    id: number | null
    society_id: number | null
    blocks: number | null
    phase: number | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    total_apartments: number | null
    societies_apartment_size: number | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    contact_no: number | null
  }

  export type Societies_historySumAggregateOutputType = {
    id: number | null
    society_id: number | null
    blocks: number | null
    phase: number | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    total_apartments: number | null
    societies_apartment_size: number | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    contact_no: number | null
  }

  export type Societies_historyMinAggregateOutputType = {
    id: number | null
    society_id: number | null
    survey_date: string | null
    city: string | null
    type: string | null
    name: string | null
    zone: string | null
    address: string | null
    blocks: number | null
    phase: number | null
    grade: string | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    plot_sizes_residential_87_5: string | null
    plot_sizes_residential_125: string | null
    plot_sizes_residential_200: string | null
    plot_sizes_residential_250: string | null
    plot_sizes_residential_300: string | null
    plot_sizes_residential_400: string | null
    plot_sizes_residential_500: string | null
    plot_sizes_residential_600: string | null
    plot_sizes_residential_800: string | null
    plot_sizes_residential_1000: string | null
    plot_sizes_residential_2000: string | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    plot_sizes_commercial_87_5: string | null
    plot_sizes_commercial_100: string | null
    plot_sizes_commercial_125: string | null
    plot_sizes_commercial_200: string | null
    plot_sizes_commercial_250: string | null
    plot_sizes_commercial_500: string | null
    plot_sizes_commercial_1000: string | null
    plot_sizes_commercial_2000: string | null
    total_apartments: number | null
    societies_apartment_size: number | null
    apartment_studio: string | null
    apartment_one_bad: string | null
    apartment_two_bad: string | null
    apartment_three_bad: string | null
    apartment_four_bad: string | null
    apartment_five_bad: string | null
    apartment_penthouse: string | null
    apartment_duplex: string | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    payment_terms: string | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    features_type_parks: string | null
    features_type_school: string | null
    features_type_university: string | null
    features_type_hospital: string | null
    features_type_commercial_market: string | null
    features_type_zoo: string | null
    features_type_food_arena: string | null
    features_type_college: string | null
    features_type_graveyard: string | null
    features_type_grid_station: string | null
    features_type_masjid: string | null
    features_type_community_club: string | null
    features_type_gated_community: string | null
    utilities_type_underground_electrification: string | null
    utilities_type_gas: string | null
    utilities_type_water: string | null
    utilities_type_utilities_electricity: string | null
    utilities_type_drainage: string | null
    developer_name: string | null
    contact_no: number | null
    survery_remarks: string | null
    imagePath: string | null
    societies_draft: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Societies_historyMaxAggregateOutputType = {
    id: number | null
    society_id: number | null
    survey_date: string | null
    city: string | null
    type: string | null
    name: string | null
    zone: string | null
    address: string | null
    blocks: number | null
    phase: number | null
    grade: string | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    plot_sizes_residential_87_5: string | null
    plot_sizes_residential_125: string | null
    plot_sizes_residential_200: string | null
    plot_sizes_residential_250: string | null
    plot_sizes_residential_300: string | null
    plot_sizes_residential_400: string | null
    plot_sizes_residential_500: string | null
    plot_sizes_residential_600: string | null
    plot_sizes_residential_800: string | null
    plot_sizes_residential_1000: string | null
    plot_sizes_residential_2000: string | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    plot_sizes_commercial_87_5: string | null
    plot_sizes_commercial_100: string | null
    plot_sizes_commercial_125: string | null
    plot_sizes_commercial_200: string | null
    plot_sizes_commercial_250: string | null
    plot_sizes_commercial_500: string | null
    plot_sizes_commercial_1000: string | null
    plot_sizes_commercial_2000: string | null
    total_apartments: number | null
    societies_apartment_size: number | null
    apartment_studio: string | null
    apartment_one_bad: string | null
    apartment_two_bad: string | null
    apartment_three_bad: string | null
    apartment_four_bad: string | null
    apartment_five_bad: string | null
    apartment_penthouse: string | null
    apartment_duplex: string | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    payment_terms: string | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    features_type_parks: string | null
    features_type_school: string | null
    features_type_university: string | null
    features_type_hospital: string | null
    features_type_commercial_market: string | null
    features_type_zoo: string | null
    features_type_food_arena: string | null
    features_type_college: string | null
    features_type_graveyard: string | null
    features_type_grid_station: string | null
    features_type_masjid: string | null
    features_type_community_club: string | null
    features_type_gated_community: string | null
    utilities_type_underground_electrification: string | null
    utilities_type_gas: string | null
    utilities_type_water: string | null
    utilities_type_utilities_electricity: string | null
    utilities_type_drainage: string | null
    developer_name: string | null
    contact_no: number | null
    survery_remarks: string | null
    imagePath: string | null
    societies_draft: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Societies_historyCountAggregateOutputType = {
    id: number
    society_id: number
    survey_date: number
    city: number
    type: number
    name: number
    zone: number
    address: number
    blocks: number
    phase: number
    grade: number
    occupancy: number
    area: number
    population: number
    launch_year: number
    total_plots_residential: number
    plot_sizes_residential: number
    plot_sizes_residential_87_5: number
    plot_sizes_residential_125: number
    plot_sizes_residential_200: number
    plot_sizes_residential_250: number
    plot_sizes_residential_300: number
    plot_sizes_residential_400: number
    plot_sizes_residential_500: number
    plot_sizes_residential_600: number
    plot_sizes_residential_800: number
    plot_sizes_residential_1000: number
    plot_sizes_residential_2000: number
    total_plots_commercial: number
    plot_sizes_commercial: number
    plot_sizes_commercial_87_5: number
    plot_sizes_commercial_100: number
    plot_sizes_commercial_125: number
    plot_sizes_commercial_200: number
    plot_sizes_commercial_250: number
    plot_sizes_commercial_500: number
    plot_sizes_commercial_1000: number
    plot_sizes_commercial_2000: number
    total_apartments: number
    societies_apartment_size: number
    apartment_studio: number
    apartment_one_bad: number
    apartment_two_bad: number
    apartment_three_bad: number
    apartment_four_bad: number
    apartment_five_bad: number
    apartment_penthouse: number
    apartment_duplex: number
    plot_size: number
    plot_price: number
    vilas_size: number
    vilas_price: number
    vilas_monthly_rent: number
    commercial_plot_size: number
    commercial_plot_price: number
    apartment_size: number
    min_apartments_price: number
    max_apartments_price: number
    min_apartments_monthly_rent: number
    max_apartments_monthly_rent: number
    payment_terms: number
    instalment_total_amount: number
    instalment_down_payment: number
    instalment_possession_Amount: number
    instalment_period: number
    features_type_parks: number
    features_type_school: number
    features_type_university: number
    features_type_hospital: number
    features_type_commercial_market: number
    features_type_zoo: number
    features_type_food_arena: number
    features_type_college: number
    features_type_graveyard: number
    features_type_grid_station: number
    features_type_masjid: number
    features_type_community_club: number
    features_type_gated_community: number
    utilities_type_underground_electrification: number
    utilities_type_gas: number
    utilities_type_water: number
    utilities_type_utilities_electricity: number
    utilities_type_drainage: number
    developer_name: number
    contact_no: number
    survery_remarks: number
    imagePath: number
    societies_draft: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Societies_historyAvgAggregateInputType = {
    id?: true
    society_id?: true
    blocks?: true
    phase?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    total_apartments?: true
    societies_apartment_size?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    contact_no?: true
  }

  export type Societies_historySumAggregateInputType = {
    id?: true
    society_id?: true
    blocks?: true
    phase?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    total_apartments?: true
    societies_apartment_size?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    contact_no?: true
  }

  export type Societies_historyMinAggregateInputType = {
    id?: true
    society_id?: true
    survey_date?: true
    city?: true
    type?: true
    name?: true
    zone?: true
    address?: true
    blocks?: true
    phase?: true
    grade?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    plot_sizes_residential_87_5?: true
    plot_sizes_residential_125?: true
    plot_sizes_residential_200?: true
    plot_sizes_residential_250?: true
    plot_sizes_residential_300?: true
    plot_sizes_residential_400?: true
    plot_sizes_residential_500?: true
    plot_sizes_residential_600?: true
    plot_sizes_residential_800?: true
    plot_sizes_residential_1000?: true
    plot_sizes_residential_2000?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    plot_sizes_commercial_87_5?: true
    plot_sizes_commercial_100?: true
    plot_sizes_commercial_125?: true
    plot_sizes_commercial_200?: true
    plot_sizes_commercial_250?: true
    plot_sizes_commercial_500?: true
    plot_sizes_commercial_1000?: true
    plot_sizes_commercial_2000?: true
    total_apartments?: true
    societies_apartment_size?: true
    apartment_studio?: true
    apartment_one_bad?: true
    apartment_two_bad?: true
    apartment_three_bad?: true
    apartment_four_bad?: true
    apartment_five_bad?: true
    apartment_penthouse?: true
    apartment_duplex?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    payment_terms?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    features_type_parks?: true
    features_type_school?: true
    features_type_university?: true
    features_type_hospital?: true
    features_type_commercial_market?: true
    features_type_zoo?: true
    features_type_food_arena?: true
    features_type_college?: true
    features_type_graveyard?: true
    features_type_grid_station?: true
    features_type_masjid?: true
    features_type_community_club?: true
    features_type_gated_community?: true
    utilities_type_underground_electrification?: true
    utilities_type_gas?: true
    utilities_type_water?: true
    utilities_type_utilities_electricity?: true
    utilities_type_drainage?: true
    developer_name?: true
    contact_no?: true
    survery_remarks?: true
    imagePath?: true
    societies_draft?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Societies_historyMaxAggregateInputType = {
    id?: true
    society_id?: true
    survey_date?: true
    city?: true
    type?: true
    name?: true
    zone?: true
    address?: true
    blocks?: true
    phase?: true
    grade?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    plot_sizes_residential_87_5?: true
    plot_sizes_residential_125?: true
    plot_sizes_residential_200?: true
    plot_sizes_residential_250?: true
    plot_sizes_residential_300?: true
    plot_sizes_residential_400?: true
    plot_sizes_residential_500?: true
    plot_sizes_residential_600?: true
    plot_sizes_residential_800?: true
    plot_sizes_residential_1000?: true
    plot_sizes_residential_2000?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    plot_sizes_commercial_87_5?: true
    plot_sizes_commercial_100?: true
    plot_sizes_commercial_125?: true
    plot_sizes_commercial_200?: true
    plot_sizes_commercial_250?: true
    plot_sizes_commercial_500?: true
    plot_sizes_commercial_1000?: true
    plot_sizes_commercial_2000?: true
    total_apartments?: true
    societies_apartment_size?: true
    apartment_studio?: true
    apartment_one_bad?: true
    apartment_two_bad?: true
    apartment_three_bad?: true
    apartment_four_bad?: true
    apartment_five_bad?: true
    apartment_penthouse?: true
    apartment_duplex?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    payment_terms?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    features_type_parks?: true
    features_type_school?: true
    features_type_university?: true
    features_type_hospital?: true
    features_type_commercial_market?: true
    features_type_zoo?: true
    features_type_food_arena?: true
    features_type_college?: true
    features_type_graveyard?: true
    features_type_grid_station?: true
    features_type_masjid?: true
    features_type_community_club?: true
    features_type_gated_community?: true
    utilities_type_underground_electrification?: true
    utilities_type_gas?: true
    utilities_type_water?: true
    utilities_type_utilities_electricity?: true
    utilities_type_drainage?: true
    developer_name?: true
    contact_no?: true
    survery_remarks?: true
    imagePath?: true
    societies_draft?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Societies_historyCountAggregateInputType = {
    id?: true
    society_id?: true
    survey_date?: true
    city?: true
    type?: true
    name?: true
    zone?: true
    address?: true
    blocks?: true
    phase?: true
    grade?: true
    occupancy?: true
    area?: true
    population?: true
    launch_year?: true
    total_plots_residential?: true
    plot_sizes_residential?: true
    plot_sizes_residential_87_5?: true
    plot_sizes_residential_125?: true
    plot_sizes_residential_200?: true
    plot_sizes_residential_250?: true
    plot_sizes_residential_300?: true
    plot_sizes_residential_400?: true
    plot_sizes_residential_500?: true
    plot_sizes_residential_600?: true
    plot_sizes_residential_800?: true
    plot_sizes_residential_1000?: true
    plot_sizes_residential_2000?: true
    total_plots_commercial?: true
    plot_sizes_commercial?: true
    plot_sizes_commercial_87_5?: true
    plot_sizes_commercial_100?: true
    plot_sizes_commercial_125?: true
    plot_sizes_commercial_200?: true
    plot_sizes_commercial_250?: true
    plot_sizes_commercial_500?: true
    plot_sizes_commercial_1000?: true
    plot_sizes_commercial_2000?: true
    total_apartments?: true
    societies_apartment_size?: true
    apartment_studio?: true
    apartment_one_bad?: true
    apartment_two_bad?: true
    apartment_three_bad?: true
    apartment_four_bad?: true
    apartment_five_bad?: true
    apartment_penthouse?: true
    apartment_duplex?: true
    plot_size?: true
    plot_price?: true
    vilas_size?: true
    vilas_price?: true
    vilas_monthly_rent?: true
    commercial_plot_size?: true
    commercial_plot_price?: true
    apartment_size?: true
    min_apartments_price?: true
    max_apartments_price?: true
    min_apartments_monthly_rent?: true
    max_apartments_monthly_rent?: true
    payment_terms?: true
    instalment_total_amount?: true
    instalment_down_payment?: true
    instalment_possession_Amount?: true
    instalment_period?: true
    features_type_parks?: true
    features_type_school?: true
    features_type_university?: true
    features_type_hospital?: true
    features_type_commercial_market?: true
    features_type_zoo?: true
    features_type_food_arena?: true
    features_type_college?: true
    features_type_graveyard?: true
    features_type_grid_station?: true
    features_type_masjid?: true
    features_type_community_club?: true
    features_type_gated_community?: true
    utilities_type_underground_electrification?: true
    utilities_type_gas?: true
    utilities_type_water?: true
    utilities_type_utilities_electricity?: true
    utilities_type_drainage?: true
    developer_name?: true
    contact_no?: true
    survery_remarks?: true
    imagePath?: true
    societies_draft?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Societies_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Societies_history to aggregate.
     */
    where?: Societies_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Societies_histories to fetch.
     */
    orderBy?: Societies_historyOrderByWithRelationInput | Societies_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Societies_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Societies_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Societies_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Societies_histories
    **/
    _count?: true | Societies_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Societies_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Societies_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Societies_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Societies_historyMaxAggregateInputType
  }

  export type GetSocieties_historyAggregateType<T extends Societies_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateSocieties_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSocieties_history[P]>
      : GetScalarType<T[P], AggregateSocieties_history[P]>
  }




  export type Societies_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Societies_historyWhereInput
    orderBy?: Societies_historyOrderByWithAggregationInput | Societies_historyOrderByWithAggregationInput[]
    by: Societies_historyScalarFieldEnum[] | Societies_historyScalarFieldEnum
    having?: Societies_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Societies_historyCountAggregateInputType | true
    _avg?: Societies_historyAvgAggregateInputType
    _sum?: Societies_historySumAggregateInputType
    _min?: Societies_historyMinAggregateInputType
    _max?: Societies_historyMaxAggregateInputType
  }

  export type Societies_historyGroupByOutputType = {
    id: number
    society_id: number
    survey_date: string | null
    city: string
    type: string | null
    name: string | null
    zone: string | null
    address: string | null
    blocks: number | null
    phase: number | null
    grade: string | null
    occupancy: number | null
    area: number | null
    population: number | null
    launch_year: number | null
    total_plots_residential: number | null
    plot_sizes_residential: number | null
    plot_sizes_residential_87_5: string | null
    plot_sizes_residential_125: string | null
    plot_sizes_residential_200: string | null
    plot_sizes_residential_250: string | null
    plot_sizes_residential_300: string | null
    plot_sizes_residential_400: string | null
    plot_sizes_residential_500: string | null
    plot_sizes_residential_600: string | null
    plot_sizes_residential_800: string | null
    plot_sizes_residential_1000: string | null
    plot_sizes_residential_2000: string | null
    total_plots_commercial: number | null
    plot_sizes_commercial: number | null
    plot_sizes_commercial_87_5: string | null
    plot_sizes_commercial_100: string | null
    plot_sizes_commercial_125: string | null
    plot_sizes_commercial_200: string | null
    plot_sizes_commercial_250: string | null
    plot_sizes_commercial_500: string | null
    plot_sizes_commercial_1000: string | null
    plot_sizes_commercial_2000: string | null
    total_apartments: number | null
    societies_apartment_size: number | null
    apartment_studio: string | null
    apartment_one_bad: string | null
    apartment_two_bad: string | null
    apartment_three_bad: string | null
    apartment_four_bad: string | null
    apartment_five_bad: string | null
    apartment_penthouse: string | null
    apartment_duplex: string | null
    plot_size: number | null
    plot_price: number | null
    vilas_size: number | null
    vilas_price: number | null
    vilas_monthly_rent: number | null
    commercial_plot_size: number | null
    commercial_plot_price: number | null
    apartment_size: number | null
    min_apartments_price: number | null
    max_apartments_price: number | null
    min_apartments_monthly_rent: number | null
    max_apartments_monthly_rent: number | null
    payment_terms: string | null
    instalment_total_amount: number | null
    instalment_down_payment: number | null
    instalment_possession_Amount: number | null
    instalment_period: number | null
    features_type_parks: string | null
    features_type_school: string | null
    features_type_university: string | null
    features_type_hospital: string | null
    features_type_commercial_market: string | null
    features_type_zoo: string | null
    features_type_food_arena: string | null
    features_type_college: string | null
    features_type_graveyard: string | null
    features_type_grid_station: string | null
    features_type_masjid: string | null
    features_type_community_club: string | null
    features_type_gated_community: string | null
    utilities_type_underground_electrification: string | null
    utilities_type_gas: string | null
    utilities_type_water: string | null
    utilities_type_utilities_electricity: string | null
    utilities_type_drainage: string | null
    developer_name: string | null
    contact_no: number | null
    survery_remarks: string | null
    imagePath: string | null
    societies_draft: string | null
    createdAt: Date
    updatedAt: Date
    _count: Societies_historyCountAggregateOutputType | null
    _avg: Societies_historyAvgAggregateOutputType | null
    _sum: Societies_historySumAggregateOutputType | null
    _min: Societies_historyMinAggregateOutputType | null
    _max: Societies_historyMaxAggregateOutputType | null
  }

  type GetSocieties_historyGroupByPayload<T extends Societies_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Societies_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Societies_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Societies_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Societies_historyGroupByOutputType[P]>
        }
      >
    >


  export type Societies_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    society_id?: boolean
    survey_date?: boolean
    city?: boolean
    type?: boolean
    name?: boolean
    zone?: boolean
    address?: boolean
    blocks?: boolean
    phase?: boolean
    grade?: boolean
    occupancy?: boolean
    area?: boolean
    population?: boolean
    launch_year?: boolean
    total_plots_residential?: boolean
    plot_sizes_residential?: boolean
    plot_sizes_residential_87_5?: boolean
    plot_sizes_residential_125?: boolean
    plot_sizes_residential_200?: boolean
    plot_sizes_residential_250?: boolean
    plot_sizes_residential_300?: boolean
    plot_sizes_residential_400?: boolean
    plot_sizes_residential_500?: boolean
    plot_sizes_residential_600?: boolean
    plot_sizes_residential_800?: boolean
    plot_sizes_residential_1000?: boolean
    plot_sizes_residential_2000?: boolean
    total_plots_commercial?: boolean
    plot_sizes_commercial?: boolean
    plot_sizes_commercial_87_5?: boolean
    plot_sizes_commercial_100?: boolean
    plot_sizes_commercial_125?: boolean
    plot_sizes_commercial_200?: boolean
    plot_sizes_commercial_250?: boolean
    plot_sizes_commercial_500?: boolean
    plot_sizes_commercial_1000?: boolean
    plot_sizes_commercial_2000?: boolean
    total_apartments?: boolean
    societies_apartment_size?: boolean
    apartment_studio?: boolean
    apartment_one_bad?: boolean
    apartment_two_bad?: boolean
    apartment_three_bad?: boolean
    apartment_four_bad?: boolean
    apartment_five_bad?: boolean
    apartment_penthouse?: boolean
    apartment_duplex?: boolean
    plot_size?: boolean
    plot_price?: boolean
    vilas_size?: boolean
    vilas_price?: boolean
    vilas_monthly_rent?: boolean
    commercial_plot_size?: boolean
    commercial_plot_price?: boolean
    apartment_size?: boolean
    min_apartments_price?: boolean
    max_apartments_price?: boolean
    min_apartments_monthly_rent?: boolean
    max_apartments_monthly_rent?: boolean
    payment_terms?: boolean
    instalment_total_amount?: boolean
    instalment_down_payment?: boolean
    instalment_possession_Amount?: boolean
    instalment_period?: boolean
    features_type_parks?: boolean
    features_type_school?: boolean
    features_type_university?: boolean
    features_type_hospital?: boolean
    features_type_commercial_market?: boolean
    features_type_zoo?: boolean
    features_type_food_arena?: boolean
    features_type_college?: boolean
    features_type_graveyard?: boolean
    features_type_grid_station?: boolean
    features_type_masjid?: boolean
    features_type_community_club?: boolean
    features_type_gated_community?: boolean
    utilities_type_underground_electrification?: boolean
    utilities_type_gas?: boolean
    utilities_type_water?: boolean
    utilities_type_utilities_electricity?: boolean
    utilities_type_drainage?: boolean
    developer_name?: boolean
    contact_no?: boolean
    survery_remarks?: boolean
    imagePath?: boolean
    societies_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["societies_history"]>

  export type Societies_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    society_id?: boolean
    survey_date?: boolean
    city?: boolean
    type?: boolean
    name?: boolean
    zone?: boolean
    address?: boolean
    blocks?: boolean
    phase?: boolean
    grade?: boolean
    occupancy?: boolean
    area?: boolean
    population?: boolean
    launch_year?: boolean
    total_plots_residential?: boolean
    plot_sizes_residential?: boolean
    plot_sizes_residential_87_5?: boolean
    plot_sizes_residential_125?: boolean
    plot_sizes_residential_200?: boolean
    plot_sizes_residential_250?: boolean
    plot_sizes_residential_300?: boolean
    plot_sizes_residential_400?: boolean
    plot_sizes_residential_500?: boolean
    plot_sizes_residential_600?: boolean
    plot_sizes_residential_800?: boolean
    plot_sizes_residential_1000?: boolean
    plot_sizes_residential_2000?: boolean
    total_plots_commercial?: boolean
    plot_sizes_commercial?: boolean
    plot_sizes_commercial_87_5?: boolean
    plot_sizes_commercial_100?: boolean
    plot_sizes_commercial_125?: boolean
    plot_sizes_commercial_200?: boolean
    plot_sizes_commercial_250?: boolean
    plot_sizes_commercial_500?: boolean
    plot_sizes_commercial_1000?: boolean
    plot_sizes_commercial_2000?: boolean
    total_apartments?: boolean
    societies_apartment_size?: boolean
    apartment_studio?: boolean
    apartment_one_bad?: boolean
    apartment_two_bad?: boolean
    apartment_three_bad?: boolean
    apartment_four_bad?: boolean
    apartment_five_bad?: boolean
    apartment_penthouse?: boolean
    apartment_duplex?: boolean
    plot_size?: boolean
    plot_price?: boolean
    vilas_size?: boolean
    vilas_price?: boolean
    vilas_monthly_rent?: boolean
    commercial_plot_size?: boolean
    commercial_plot_price?: boolean
    apartment_size?: boolean
    min_apartments_price?: boolean
    max_apartments_price?: boolean
    min_apartments_monthly_rent?: boolean
    max_apartments_monthly_rent?: boolean
    payment_terms?: boolean
    instalment_total_amount?: boolean
    instalment_down_payment?: boolean
    instalment_possession_Amount?: boolean
    instalment_period?: boolean
    features_type_parks?: boolean
    features_type_school?: boolean
    features_type_university?: boolean
    features_type_hospital?: boolean
    features_type_commercial_market?: boolean
    features_type_zoo?: boolean
    features_type_food_arena?: boolean
    features_type_college?: boolean
    features_type_graveyard?: boolean
    features_type_grid_station?: boolean
    features_type_masjid?: boolean
    features_type_community_club?: boolean
    features_type_gated_community?: boolean
    utilities_type_underground_electrification?: boolean
    utilities_type_gas?: boolean
    utilities_type_water?: boolean
    utilities_type_utilities_electricity?: boolean
    utilities_type_drainage?: boolean
    developer_name?: boolean
    contact_no?: boolean
    survery_remarks?: boolean
    imagePath?: boolean
    societies_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["societies_history"]>

  export type Societies_historySelectScalar = {
    id?: boolean
    society_id?: boolean
    survey_date?: boolean
    city?: boolean
    type?: boolean
    name?: boolean
    zone?: boolean
    address?: boolean
    blocks?: boolean
    phase?: boolean
    grade?: boolean
    occupancy?: boolean
    area?: boolean
    population?: boolean
    launch_year?: boolean
    total_plots_residential?: boolean
    plot_sizes_residential?: boolean
    plot_sizes_residential_87_5?: boolean
    plot_sizes_residential_125?: boolean
    plot_sizes_residential_200?: boolean
    plot_sizes_residential_250?: boolean
    plot_sizes_residential_300?: boolean
    plot_sizes_residential_400?: boolean
    plot_sizes_residential_500?: boolean
    plot_sizes_residential_600?: boolean
    plot_sizes_residential_800?: boolean
    plot_sizes_residential_1000?: boolean
    plot_sizes_residential_2000?: boolean
    total_plots_commercial?: boolean
    plot_sizes_commercial?: boolean
    plot_sizes_commercial_87_5?: boolean
    plot_sizes_commercial_100?: boolean
    plot_sizes_commercial_125?: boolean
    plot_sizes_commercial_200?: boolean
    plot_sizes_commercial_250?: boolean
    plot_sizes_commercial_500?: boolean
    plot_sizes_commercial_1000?: boolean
    plot_sizes_commercial_2000?: boolean
    total_apartments?: boolean
    societies_apartment_size?: boolean
    apartment_studio?: boolean
    apartment_one_bad?: boolean
    apartment_two_bad?: boolean
    apartment_three_bad?: boolean
    apartment_four_bad?: boolean
    apartment_five_bad?: boolean
    apartment_penthouse?: boolean
    apartment_duplex?: boolean
    plot_size?: boolean
    plot_price?: boolean
    vilas_size?: boolean
    vilas_price?: boolean
    vilas_monthly_rent?: boolean
    commercial_plot_size?: boolean
    commercial_plot_price?: boolean
    apartment_size?: boolean
    min_apartments_price?: boolean
    max_apartments_price?: boolean
    min_apartments_monthly_rent?: boolean
    max_apartments_monthly_rent?: boolean
    payment_terms?: boolean
    instalment_total_amount?: boolean
    instalment_down_payment?: boolean
    instalment_possession_Amount?: boolean
    instalment_period?: boolean
    features_type_parks?: boolean
    features_type_school?: boolean
    features_type_university?: boolean
    features_type_hospital?: boolean
    features_type_commercial_market?: boolean
    features_type_zoo?: boolean
    features_type_food_arena?: boolean
    features_type_college?: boolean
    features_type_graveyard?: boolean
    features_type_grid_station?: boolean
    features_type_masjid?: boolean
    features_type_community_club?: boolean
    features_type_gated_community?: boolean
    utilities_type_underground_electrification?: boolean
    utilities_type_gas?: boolean
    utilities_type_water?: boolean
    utilities_type_utilities_electricity?: boolean
    utilities_type_drainage?: boolean
    developer_name?: boolean
    contact_no?: boolean
    survery_remarks?: boolean
    imagePath?: boolean
    societies_draft?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $Societies_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Societies_history"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      society_id: number
      survey_date: string | null
      city: string
      type: string | null
      name: string | null
      zone: string | null
      address: string | null
      blocks: number | null
      phase: number | null
      grade: string | null
      occupancy: number | null
      area: number | null
      population: number | null
      launch_year: number | null
      total_plots_residential: number | null
      plot_sizes_residential: number | null
      plot_sizes_residential_87_5: string | null
      plot_sizes_residential_125: string | null
      plot_sizes_residential_200: string | null
      plot_sizes_residential_250: string | null
      plot_sizes_residential_300: string | null
      plot_sizes_residential_400: string | null
      plot_sizes_residential_500: string | null
      plot_sizes_residential_600: string | null
      plot_sizes_residential_800: string | null
      plot_sizes_residential_1000: string | null
      plot_sizes_residential_2000: string | null
      total_plots_commercial: number | null
      plot_sizes_commercial: number | null
      plot_sizes_commercial_87_5: string | null
      plot_sizes_commercial_100: string | null
      plot_sizes_commercial_125: string | null
      plot_sizes_commercial_200: string | null
      plot_sizes_commercial_250: string | null
      plot_sizes_commercial_500: string | null
      plot_sizes_commercial_1000: string | null
      plot_sizes_commercial_2000: string | null
      total_apartments: number | null
      societies_apartment_size: number | null
      apartment_studio: string | null
      apartment_one_bad: string | null
      apartment_two_bad: string | null
      apartment_three_bad: string | null
      apartment_four_bad: string | null
      apartment_five_bad: string | null
      apartment_penthouse: string | null
      apartment_duplex: string | null
      plot_size: number | null
      plot_price: number | null
      vilas_size: number | null
      vilas_price: number | null
      vilas_monthly_rent: number | null
      commercial_plot_size: number | null
      commercial_plot_price: number | null
      apartment_size: number | null
      min_apartments_price: number | null
      max_apartments_price: number | null
      min_apartments_monthly_rent: number | null
      max_apartments_monthly_rent: number | null
      payment_terms: string | null
      instalment_total_amount: number | null
      instalment_down_payment: number | null
      instalment_possession_Amount: number | null
      instalment_period: number | null
      features_type_parks: string | null
      features_type_school: string | null
      features_type_university: string | null
      features_type_hospital: string | null
      features_type_commercial_market: string | null
      features_type_zoo: string | null
      features_type_food_arena: string | null
      features_type_college: string | null
      features_type_graveyard: string | null
      features_type_grid_station: string | null
      features_type_masjid: string | null
      features_type_community_club: string | null
      features_type_gated_community: string | null
      utilities_type_underground_electrification: string | null
      utilities_type_gas: string | null
      utilities_type_water: string | null
      utilities_type_utilities_electricity: string | null
      utilities_type_drainage: string | null
      developer_name: string | null
      contact_no: number | null
      survery_remarks: string | null
      imagePath: string | null
      societies_draft: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["societies_history"]>
    composites: {}
  }

  type Societies_historyGetPayload<S extends boolean | null | undefined | Societies_historyDefaultArgs> = $Result.GetResult<Prisma.$Societies_historyPayload, S>

  type Societies_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Societies_historyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Societies_historyCountAggregateInputType | true
    }

  export interface Societies_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Societies_history'], meta: { name: 'Societies_history' } }
    /**
     * Find zero or one Societies_history that matches the filter.
     * @param {Societies_historyFindUniqueArgs} args - Arguments to find a Societies_history
     * @example
     * // Get one Societies_history
     * const societies_history = await prisma.societies_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Societies_historyFindUniqueArgs>(args: SelectSubset<T, Societies_historyFindUniqueArgs<ExtArgs>>): Prisma__Societies_historyClient<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Societies_history that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Societies_historyFindUniqueOrThrowArgs} args - Arguments to find a Societies_history
     * @example
     * // Get one Societies_history
     * const societies_history = await prisma.societies_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Societies_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, Societies_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Societies_historyClient<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Societies_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Societies_historyFindFirstArgs} args - Arguments to find a Societies_history
     * @example
     * // Get one Societies_history
     * const societies_history = await prisma.societies_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Societies_historyFindFirstArgs>(args?: SelectSubset<T, Societies_historyFindFirstArgs<ExtArgs>>): Prisma__Societies_historyClient<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Societies_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Societies_historyFindFirstOrThrowArgs} args - Arguments to find a Societies_history
     * @example
     * // Get one Societies_history
     * const societies_history = await prisma.societies_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Societies_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, Societies_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__Societies_historyClient<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Societies_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Societies_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Societies_histories
     * const societies_histories = await prisma.societies_history.findMany()
     * 
     * // Get first 10 Societies_histories
     * const societies_histories = await prisma.societies_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const societies_historyWithIdOnly = await prisma.societies_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Societies_historyFindManyArgs>(args?: SelectSubset<T, Societies_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Societies_history.
     * @param {Societies_historyCreateArgs} args - Arguments to create a Societies_history.
     * @example
     * // Create one Societies_history
     * const Societies_history = await prisma.societies_history.create({
     *   data: {
     *     // ... data to create a Societies_history
     *   }
     * })
     * 
     */
    create<T extends Societies_historyCreateArgs>(args: SelectSubset<T, Societies_historyCreateArgs<ExtArgs>>): Prisma__Societies_historyClient<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Societies_histories.
     * @param {Societies_historyCreateManyArgs} args - Arguments to create many Societies_histories.
     * @example
     * // Create many Societies_histories
     * const societies_history = await prisma.societies_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Societies_historyCreateManyArgs>(args?: SelectSubset<T, Societies_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Societies_histories and returns the data saved in the database.
     * @param {Societies_historyCreateManyAndReturnArgs} args - Arguments to create many Societies_histories.
     * @example
     * // Create many Societies_histories
     * const societies_history = await prisma.societies_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Societies_histories and only return the `id`
     * const societies_historyWithIdOnly = await prisma.societies_history.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Societies_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, Societies_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Societies_history.
     * @param {Societies_historyDeleteArgs} args - Arguments to delete one Societies_history.
     * @example
     * // Delete one Societies_history
     * const Societies_history = await prisma.societies_history.delete({
     *   where: {
     *     // ... filter to delete one Societies_history
     *   }
     * })
     * 
     */
    delete<T extends Societies_historyDeleteArgs>(args: SelectSubset<T, Societies_historyDeleteArgs<ExtArgs>>): Prisma__Societies_historyClient<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Societies_history.
     * @param {Societies_historyUpdateArgs} args - Arguments to update one Societies_history.
     * @example
     * // Update one Societies_history
     * const societies_history = await prisma.societies_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Societies_historyUpdateArgs>(args: SelectSubset<T, Societies_historyUpdateArgs<ExtArgs>>): Prisma__Societies_historyClient<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Societies_histories.
     * @param {Societies_historyDeleteManyArgs} args - Arguments to filter Societies_histories to delete.
     * @example
     * // Delete a few Societies_histories
     * const { count } = await prisma.societies_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Societies_historyDeleteManyArgs>(args?: SelectSubset<T, Societies_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Societies_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Societies_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Societies_histories
     * const societies_history = await prisma.societies_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Societies_historyUpdateManyArgs>(args: SelectSubset<T, Societies_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Societies_history.
     * @param {Societies_historyUpsertArgs} args - Arguments to update or create a Societies_history.
     * @example
     * // Update or create a Societies_history
     * const societies_history = await prisma.societies_history.upsert({
     *   create: {
     *     // ... data to create a Societies_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Societies_history we want to update
     *   }
     * })
     */
    upsert<T extends Societies_historyUpsertArgs>(args: SelectSubset<T, Societies_historyUpsertArgs<ExtArgs>>): Prisma__Societies_historyClient<$Result.GetResult<Prisma.$Societies_historyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Societies_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Societies_historyCountArgs} args - Arguments to filter Societies_histories to count.
     * @example
     * // Count the number of Societies_histories
     * const count = await prisma.societies_history.count({
     *   where: {
     *     // ... the filter for the Societies_histories we want to count
     *   }
     * })
    **/
    count<T extends Societies_historyCountArgs>(
      args?: Subset<T, Societies_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Societies_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Societies_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Societies_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Societies_historyAggregateArgs>(args: Subset<T, Societies_historyAggregateArgs>): Prisma.PrismaPromise<GetSocieties_historyAggregateType<T>>

    /**
     * Group by Societies_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Societies_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Societies_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Societies_historyGroupByArgs['orderBy'] }
        : { orderBy?: Societies_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Societies_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSocieties_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Societies_history model
   */
  readonly fields: Societies_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Societies_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Societies_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Societies_history model
   */ 
  interface Societies_historyFieldRefs {
    readonly id: FieldRef<"Societies_history", 'Int'>
    readonly society_id: FieldRef<"Societies_history", 'Int'>
    readonly survey_date: FieldRef<"Societies_history", 'String'>
    readonly city: FieldRef<"Societies_history", 'String'>
    readonly type: FieldRef<"Societies_history", 'String'>
    readonly name: FieldRef<"Societies_history", 'String'>
    readonly zone: FieldRef<"Societies_history", 'String'>
    readonly address: FieldRef<"Societies_history", 'String'>
    readonly blocks: FieldRef<"Societies_history", 'Int'>
    readonly phase: FieldRef<"Societies_history", 'Int'>
    readonly grade: FieldRef<"Societies_history", 'String'>
    readonly occupancy: FieldRef<"Societies_history", 'Int'>
    readonly area: FieldRef<"Societies_history", 'Int'>
    readonly population: FieldRef<"Societies_history", 'Int'>
    readonly launch_year: FieldRef<"Societies_history", 'Int'>
    readonly total_plots_residential: FieldRef<"Societies_history", 'Int'>
    readonly plot_sizes_residential: FieldRef<"Societies_history", 'Int'>
    readonly plot_sizes_residential_87_5: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_125: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_200: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_250: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_300: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_400: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_500: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_600: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_800: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_1000: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_residential_2000: FieldRef<"Societies_history", 'String'>
    readonly total_plots_commercial: FieldRef<"Societies_history", 'Int'>
    readonly plot_sizes_commercial: FieldRef<"Societies_history", 'Int'>
    readonly plot_sizes_commercial_87_5: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_commercial_100: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_commercial_125: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_commercial_200: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_commercial_250: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_commercial_500: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_commercial_1000: FieldRef<"Societies_history", 'String'>
    readonly plot_sizes_commercial_2000: FieldRef<"Societies_history", 'String'>
    readonly total_apartments: FieldRef<"Societies_history", 'Int'>
    readonly societies_apartment_size: FieldRef<"Societies_history", 'Int'>
    readonly apartment_studio: FieldRef<"Societies_history", 'String'>
    readonly apartment_one_bad: FieldRef<"Societies_history", 'String'>
    readonly apartment_two_bad: FieldRef<"Societies_history", 'String'>
    readonly apartment_three_bad: FieldRef<"Societies_history", 'String'>
    readonly apartment_four_bad: FieldRef<"Societies_history", 'String'>
    readonly apartment_five_bad: FieldRef<"Societies_history", 'String'>
    readonly apartment_penthouse: FieldRef<"Societies_history", 'String'>
    readonly apartment_duplex: FieldRef<"Societies_history", 'String'>
    readonly plot_size: FieldRef<"Societies_history", 'Int'>
    readonly plot_price: FieldRef<"Societies_history", 'Int'>
    readonly vilas_size: FieldRef<"Societies_history", 'Int'>
    readonly vilas_price: FieldRef<"Societies_history", 'Int'>
    readonly vilas_monthly_rent: FieldRef<"Societies_history", 'Int'>
    readonly commercial_plot_size: FieldRef<"Societies_history", 'Int'>
    readonly commercial_plot_price: FieldRef<"Societies_history", 'Int'>
    readonly apartment_size: FieldRef<"Societies_history", 'Int'>
    readonly min_apartments_price: FieldRef<"Societies_history", 'Int'>
    readonly max_apartments_price: FieldRef<"Societies_history", 'Int'>
    readonly min_apartments_monthly_rent: FieldRef<"Societies_history", 'Int'>
    readonly max_apartments_monthly_rent: FieldRef<"Societies_history", 'Int'>
    readonly payment_terms: FieldRef<"Societies_history", 'String'>
    readonly instalment_total_amount: FieldRef<"Societies_history", 'Int'>
    readonly instalment_down_payment: FieldRef<"Societies_history", 'Int'>
    readonly instalment_possession_Amount: FieldRef<"Societies_history", 'Int'>
    readonly instalment_period: FieldRef<"Societies_history", 'Int'>
    readonly features_type_parks: FieldRef<"Societies_history", 'String'>
    readonly features_type_school: FieldRef<"Societies_history", 'String'>
    readonly features_type_university: FieldRef<"Societies_history", 'String'>
    readonly features_type_hospital: FieldRef<"Societies_history", 'String'>
    readonly features_type_commercial_market: FieldRef<"Societies_history", 'String'>
    readonly features_type_zoo: FieldRef<"Societies_history", 'String'>
    readonly features_type_food_arena: FieldRef<"Societies_history", 'String'>
    readonly features_type_college: FieldRef<"Societies_history", 'String'>
    readonly features_type_graveyard: FieldRef<"Societies_history", 'String'>
    readonly features_type_grid_station: FieldRef<"Societies_history", 'String'>
    readonly features_type_masjid: FieldRef<"Societies_history", 'String'>
    readonly features_type_community_club: FieldRef<"Societies_history", 'String'>
    readonly features_type_gated_community: FieldRef<"Societies_history", 'String'>
    readonly utilities_type_underground_electrification: FieldRef<"Societies_history", 'String'>
    readonly utilities_type_gas: FieldRef<"Societies_history", 'String'>
    readonly utilities_type_water: FieldRef<"Societies_history", 'String'>
    readonly utilities_type_utilities_electricity: FieldRef<"Societies_history", 'String'>
    readonly utilities_type_drainage: FieldRef<"Societies_history", 'String'>
    readonly developer_name: FieldRef<"Societies_history", 'String'>
    readonly contact_no: FieldRef<"Societies_history", 'Int'>
    readonly survery_remarks: FieldRef<"Societies_history", 'String'>
    readonly imagePath: FieldRef<"Societies_history", 'String'>
    readonly societies_draft: FieldRef<"Societies_history", 'String'>
    readonly createdAt: FieldRef<"Societies_history", 'DateTime'>
    readonly updatedAt: FieldRef<"Societies_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Societies_history findUnique
   */
  export type Societies_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * Filter, which Societies_history to fetch.
     */
    where: Societies_historyWhereUniqueInput
  }

  /**
   * Societies_history findUniqueOrThrow
   */
  export type Societies_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * Filter, which Societies_history to fetch.
     */
    where: Societies_historyWhereUniqueInput
  }

  /**
   * Societies_history findFirst
   */
  export type Societies_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * Filter, which Societies_history to fetch.
     */
    where?: Societies_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Societies_histories to fetch.
     */
    orderBy?: Societies_historyOrderByWithRelationInput | Societies_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Societies_histories.
     */
    cursor?: Societies_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Societies_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Societies_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Societies_histories.
     */
    distinct?: Societies_historyScalarFieldEnum | Societies_historyScalarFieldEnum[]
  }

  /**
   * Societies_history findFirstOrThrow
   */
  export type Societies_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * Filter, which Societies_history to fetch.
     */
    where?: Societies_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Societies_histories to fetch.
     */
    orderBy?: Societies_historyOrderByWithRelationInput | Societies_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Societies_histories.
     */
    cursor?: Societies_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Societies_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Societies_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Societies_histories.
     */
    distinct?: Societies_historyScalarFieldEnum | Societies_historyScalarFieldEnum[]
  }

  /**
   * Societies_history findMany
   */
  export type Societies_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * Filter, which Societies_histories to fetch.
     */
    where?: Societies_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Societies_histories to fetch.
     */
    orderBy?: Societies_historyOrderByWithRelationInput | Societies_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Societies_histories.
     */
    cursor?: Societies_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Societies_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Societies_histories.
     */
    skip?: number
    distinct?: Societies_historyScalarFieldEnum | Societies_historyScalarFieldEnum[]
  }

  /**
   * Societies_history create
   */
  export type Societies_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * The data needed to create a Societies_history.
     */
    data: XOR<Societies_historyCreateInput, Societies_historyUncheckedCreateInput>
  }

  /**
   * Societies_history createMany
   */
  export type Societies_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Societies_histories.
     */
    data: Societies_historyCreateManyInput | Societies_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Societies_history createManyAndReturn
   */
  export type Societies_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Societies_histories.
     */
    data: Societies_historyCreateManyInput | Societies_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Societies_history update
   */
  export type Societies_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * The data needed to update a Societies_history.
     */
    data: XOR<Societies_historyUpdateInput, Societies_historyUncheckedUpdateInput>
    /**
     * Choose, which Societies_history to update.
     */
    where: Societies_historyWhereUniqueInput
  }

  /**
   * Societies_history updateMany
   */
  export type Societies_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Societies_histories.
     */
    data: XOR<Societies_historyUpdateManyMutationInput, Societies_historyUncheckedUpdateManyInput>
    /**
     * Filter which Societies_histories to update
     */
    where?: Societies_historyWhereInput
  }

  /**
   * Societies_history upsert
   */
  export type Societies_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * The filter to search for the Societies_history to update in case it exists.
     */
    where: Societies_historyWhereUniqueInput
    /**
     * In case the Societies_history found by the `where` argument doesn't exist, create a new Societies_history with this data.
     */
    create: XOR<Societies_historyCreateInput, Societies_historyUncheckedCreateInput>
    /**
     * In case the Societies_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Societies_historyUpdateInput, Societies_historyUncheckedUpdateInput>
  }

  /**
   * Societies_history delete
   */
  export type Societies_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
    /**
     * Filter which Societies_history to delete.
     */
    where: Societies_historyWhereUniqueInput
  }

  /**
   * Societies_history deleteMany
   */
  export type Societies_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Societies_histories to delete
     */
    where?: Societies_historyWhereInput
  }

  /**
   * Societies_history without action
   */
  export type Societies_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Societies_history
     */
    select?: Societies_historySelect<ExtArgs> | null
  }


  /**
   * Model Commercial
   */

  export type AggregateCommercial = {
    _count: CommercialCountAggregateOutputType | null
    _avg: CommercialAvgAggregateOutputType | null
    _sum: CommercialSumAggregateOutputType | null
    _min: CommercialMinAggregateOutputType | null
    _max: CommercialMaxAggregateOutputType | null
  }

  export type CommercialAvgAggregateOutputType = {
    id: number | null
    launch_year: number | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
  }

  export type CommercialSumAggregateOutputType = {
    id: number | null
    launch_year: number | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
  }

  export type CommercialMinAggregateOutputType = {
    id: number | null
    survey_date: string | null
    city: string | null
    commercial_zone_name: string | null
    zone: string | null
    type: string | null
    location: string | null
    project_status: string | null
    launch_year: number | null
    grade: string | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
    property_feature: string | null
    property_title: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CommercialMaxAggregateOutputType = {
    id: number | null
    survey_date: string | null
    city: string | null
    commercial_zone_name: string | null
    zone: string | null
    type: string | null
    location: string | null
    project_status: string | null
    launch_year: number | null
    grade: string | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
    property_feature: string | null
    property_title: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CommercialCountAggregateOutputType = {
    id: number
    survey_date: number
    city: number
    commercial_zone_name: number
    zone: number
    type: number
    location: number
    project_status: number
    launch_year: number
    grade: number
    area: number
    occupancy: number
    total_plots: number
    total_shops: number
    total_offices: number
    total_apartments: number
    property_feature: number
    property_title: number
    remarks: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CommercialAvgAggregateInputType = {
    id?: true
    launch_year?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
  }

  export type CommercialSumAggregateInputType = {
    id?: true
    launch_year?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
  }

  export type CommercialMinAggregateInputType = {
    id?: true
    survey_date?: true
    city?: true
    commercial_zone_name?: true
    zone?: true
    type?: true
    location?: true
    project_status?: true
    launch_year?: true
    grade?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
    property_feature?: true
    property_title?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CommercialMaxAggregateInputType = {
    id?: true
    survey_date?: true
    city?: true
    commercial_zone_name?: true
    zone?: true
    type?: true
    location?: true
    project_status?: true
    launch_year?: true
    grade?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
    property_feature?: true
    property_title?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CommercialCountAggregateInputType = {
    id?: true
    survey_date?: true
    city?: true
    commercial_zone_name?: true
    zone?: true
    type?: true
    location?: true
    project_status?: true
    launch_year?: true
    grade?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
    property_feature?: true
    property_title?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CommercialAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Commercial to aggregate.
     */
    where?: CommercialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commercials to fetch.
     */
    orderBy?: CommercialOrderByWithRelationInput | CommercialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CommercialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commercials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commercials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Commercials
    **/
    _count?: true | CommercialCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CommercialAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CommercialSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CommercialMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CommercialMaxAggregateInputType
  }

  export type GetCommercialAggregateType<T extends CommercialAggregateArgs> = {
        [P in keyof T & keyof AggregateCommercial]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommercial[P]>
      : GetScalarType<T[P], AggregateCommercial[P]>
  }




  export type CommercialGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CommercialWhereInput
    orderBy?: CommercialOrderByWithAggregationInput | CommercialOrderByWithAggregationInput[]
    by: CommercialScalarFieldEnum[] | CommercialScalarFieldEnum
    having?: CommercialScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CommercialCountAggregateInputType | true
    _avg?: CommercialAvgAggregateInputType
    _sum?: CommercialSumAggregateInputType
    _min?: CommercialMinAggregateInputType
    _max?: CommercialMaxAggregateInputType
  }

  export type CommercialGroupByOutputType = {
    id: number
    survey_date: string | null
    city: string | null
    commercial_zone_name: string | null
    zone: string | null
    type: string | null
    location: string | null
    project_status: string | null
    launch_year: number | null
    grade: string | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
    property_feature: string | null
    property_title: string | null
    remarks: string | null
    createdAt: Date
    updatedAt: Date
    _count: CommercialCountAggregateOutputType | null
    _avg: CommercialAvgAggregateOutputType | null
    _sum: CommercialSumAggregateOutputType | null
    _min: CommercialMinAggregateOutputType | null
    _max: CommercialMaxAggregateOutputType | null
  }

  type GetCommercialGroupByPayload<T extends CommercialGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CommercialGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CommercialGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CommercialGroupByOutputType[P]>
            : GetScalarType<T[P], CommercialGroupByOutputType[P]>
        }
      >
    >


  export type CommercialSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    survey_date?: boolean
    city?: boolean
    commercial_zone_name?: boolean
    zone?: boolean
    type?: boolean
    location?: boolean
    project_status?: boolean
    launch_year?: boolean
    grade?: boolean
    area?: boolean
    occupancy?: boolean
    total_plots?: boolean
    total_shops?: boolean
    total_offices?: boolean
    total_apartments?: boolean
    property_feature?: boolean
    property_title?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Price?: boolean | Commercial$PriceArgs<ExtArgs>
    _count?: boolean | CommercialCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["commercial"]>

  export type CommercialSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    survey_date?: boolean
    city?: boolean
    commercial_zone_name?: boolean
    zone?: boolean
    type?: boolean
    location?: boolean
    project_status?: boolean
    launch_year?: boolean
    grade?: boolean
    area?: boolean
    occupancy?: boolean
    total_plots?: boolean
    total_shops?: boolean
    total_offices?: boolean
    total_apartments?: boolean
    property_feature?: boolean
    property_title?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["commercial"]>

  export type CommercialSelectScalar = {
    id?: boolean
    survey_date?: boolean
    city?: boolean
    commercial_zone_name?: boolean
    zone?: boolean
    type?: boolean
    location?: boolean
    project_status?: boolean
    launch_year?: boolean
    grade?: boolean
    area?: boolean
    occupancy?: boolean
    total_plots?: boolean
    total_shops?: boolean
    total_offices?: boolean
    total_apartments?: boolean
    property_feature?: boolean
    property_title?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CommercialInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Price?: boolean | Commercial$PriceArgs<ExtArgs>
    _count?: boolean | CommercialCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CommercialIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CommercialPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Commercial"
    objects: {
      Price: Prisma.$PricePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      survey_date: string | null
      city: string | null
      commercial_zone_name: string | null
      zone: string | null
      type: string | null
      location: string | null
      project_status: string | null
      launch_year: number | null
      grade: string | null
      area: number | null
      occupancy: number | null
      total_plots: number | null
      total_shops: number | null
      total_offices: number | null
      total_apartments: number | null
      property_feature: string | null
      property_title: string | null
      remarks: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["commercial"]>
    composites: {}
  }

  type CommercialGetPayload<S extends boolean | null | undefined | CommercialDefaultArgs> = $Result.GetResult<Prisma.$CommercialPayload, S>

  type CommercialCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CommercialFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CommercialCountAggregateInputType | true
    }

  export interface CommercialDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Commercial'], meta: { name: 'Commercial' } }
    /**
     * Find zero or one Commercial that matches the filter.
     * @param {CommercialFindUniqueArgs} args - Arguments to find a Commercial
     * @example
     * // Get one Commercial
     * const commercial = await prisma.commercial.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CommercialFindUniqueArgs>(args: SelectSubset<T, CommercialFindUniqueArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Commercial that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CommercialFindUniqueOrThrowArgs} args - Arguments to find a Commercial
     * @example
     * // Get one Commercial
     * const commercial = await prisma.commercial.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CommercialFindUniqueOrThrowArgs>(args: SelectSubset<T, CommercialFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Commercial that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommercialFindFirstArgs} args - Arguments to find a Commercial
     * @example
     * // Get one Commercial
     * const commercial = await prisma.commercial.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CommercialFindFirstArgs>(args?: SelectSubset<T, CommercialFindFirstArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Commercial that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommercialFindFirstOrThrowArgs} args - Arguments to find a Commercial
     * @example
     * // Get one Commercial
     * const commercial = await prisma.commercial.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CommercialFindFirstOrThrowArgs>(args?: SelectSubset<T, CommercialFindFirstOrThrowArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Commercials that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommercialFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Commercials
     * const commercials = await prisma.commercial.findMany()
     * 
     * // Get first 10 Commercials
     * const commercials = await prisma.commercial.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commercialWithIdOnly = await prisma.commercial.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CommercialFindManyArgs>(args?: SelectSubset<T, CommercialFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Commercial.
     * @param {CommercialCreateArgs} args - Arguments to create a Commercial.
     * @example
     * // Create one Commercial
     * const Commercial = await prisma.commercial.create({
     *   data: {
     *     // ... data to create a Commercial
     *   }
     * })
     * 
     */
    create<T extends CommercialCreateArgs>(args: SelectSubset<T, CommercialCreateArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Commercials.
     * @param {CommercialCreateManyArgs} args - Arguments to create many Commercials.
     * @example
     * // Create many Commercials
     * const commercial = await prisma.commercial.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CommercialCreateManyArgs>(args?: SelectSubset<T, CommercialCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Commercials and returns the data saved in the database.
     * @param {CommercialCreateManyAndReturnArgs} args - Arguments to create many Commercials.
     * @example
     * // Create many Commercials
     * const commercial = await prisma.commercial.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Commercials and only return the `id`
     * const commercialWithIdOnly = await prisma.commercial.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CommercialCreateManyAndReturnArgs>(args?: SelectSubset<T, CommercialCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Commercial.
     * @param {CommercialDeleteArgs} args - Arguments to delete one Commercial.
     * @example
     * // Delete one Commercial
     * const Commercial = await prisma.commercial.delete({
     *   where: {
     *     // ... filter to delete one Commercial
     *   }
     * })
     * 
     */
    delete<T extends CommercialDeleteArgs>(args: SelectSubset<T, CommercialDeleteArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Commercial.
     * @param {CommercialUpdateArgs} args - Arguments to update one Commercial.
     * @example
     * // Update one Commercial
     * const commercial = await prisma.commercial.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CommercialUpdateArgs>(args: SelectSubset<T, CommercialUpdateArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Commercials.
     * @param {CommercialDeleteManyArgs} args - Arguments to filter Commercials to delete.
     * @example
     * // Delete a few Commercials
     * const { count } = await prisma.commercial.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CommercialDeleteManyArgs>(args?: SelectSubset<T, CommercialDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Commercials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommercialUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Commercials
     * const commercial = await prisma.commercial.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CommercialUpdateManyArgs>(args: SelectSubset<T, CommercialUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Commercial.
     * @param {CommercialUpsertArgs} args - Arguments to update or create a Commercial.
     * @example
     * // Update or create a Commercial
     * const commercial = await prisma.commercial.upsert({
     *   create: {
     *     // ... data to create a Commercial
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Commercial we want to update
     *   }
     * })
     */
    upsert<T extends CommercialUpsertArgs>(args: SelectSubset<T, CommercialUpsertArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Commercials.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommercialCountArgs} args - Arguments to filter Commercials to count.
     * @example
     * // Count the number of Commercials
     * const count = await prisma.commercial.count({
     *   where: {
     *     // ... the filter for the Commercials we want to count
     *   }
     * })
    **/
    count<T extends CommercialCountArgs>(
      args?: Subset<T, CommercialCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CommercialCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Commercial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommercialAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CommercialAggregateArgs>(args: Subset<T, CommercialAggregateArgs>): Prisma.PrismaPromise<GetCommercialAggregateType<T>>

    /**
     * Group by Commercial.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CommercialGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CommercialGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CommercialGroupByArgs['orderBy'] }
        : { orderBy?: CommercialGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CommercialGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommercialGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Commercial model
   */
  readonly fields: CommercialFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Commercial.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CommercialClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Price<T extends Commercial$PriceArgs<ExtArgs> = {}>(args?: Subset<T, Commercial$PriceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Commercial model
   */ 
  interface CommercialFieldRefs {
    readonly id: FieldRef<"Commercial", 'Int'>
    readonly survey_date: FieldRef<"Commercial", 'String'>
    readonly city: FieldRef<"Commercial", 'String'>
    readonly commercial_zone_name: FieldRef<"Commercial", 'String'>
    readonly zone: FieldRef<"Commercial", 'String'>
    readonly type: FieldRef<"Commercial", 'String'>
    readonly location: FieldRef<"Commercial", 'String'>
    readonly project_status: FieldRef<"Commercial", 'String'>
    readonly launch_year: FieldRef<"Commercial", 'Int'>
    readonly grade: FieldRef<"Commercial", 'String'>
    readonly area: FieldRef<"Commercial", 'Int'>
    readonly occupancy: FieldRef<"Commercial", 'Int'>
    readonly total_plots: FieldRef<"Commercial", 'Int'>
    readonly total_shops: FieldRef<"Commercial", 'Int'>
    readonly total_offices: FieldRef<"Commercial", 'Int'>
    readonly total_apartments: FieldRef<"Commercial", 'Int'>
    readonly property_feature: FieldRef<"Commercial", 'String'>
    readonly property_title: FieldRef<"Commercial", 'String'>
    readonly remarks: FieldRef<"Commercial", 'String'>
    readonly createdAt: FieldRef<"Commercial", 'DateTime'>
    readonly updatedAt: FieldRef<"Commercial", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Commercial findUnique
   */
  export type CommercialFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * Filter, which Commercial to fetch.
     */
    where: CommercialWhereUniqueInput
  }

  /**
   * Commercial findUniqueOrThrow
   */
  export type CommercialFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * Filter, which Commercial to fetch.
     */
    where: CommercialWhereUniqueInput
  }

  /**
   * Commercial findFirst
   */
  export type CommercialFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * Filter, which Commercial to fetch.
     */
    where?: CommercialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commercials to fetch.
     */
    orderBy?: CommercialOrderByWithRelationInput | CommercialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Commercials.
     */
    cursor?: CommercialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commercials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commercials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Commercials.
     */
    distinct?: CommercialScalarFieldEnum | CommercialScalarFieldEnum[]
  }

  /**
   * Commercial findFirstOrThrow
   */
  export type CommercialFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * Filter, which Commercial to fetch.
     */
    where?: CommercialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commercials to fetch.
     */
    orderBy?: CommercialOrderByWithRelationInput | CommercialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Commercials.
     */
    cursor?: CommercialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commercials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commercials.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Commercials.
     */
    distinct?: CommercialScalarFieldEnum | CommercialScalarFieldEnum[]
  }

  /**
   * Commercial findMany
   */
  export type CommercialFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * Filter, which Commercials to fetch.
     */
    where?: CommercialWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commercials to fetch.
     */
    orderBy?: CommercialOrderByWithRelationInput | CommercialOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Commercials.
     */
    cursor?: CommercialWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commercials from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commercials.
     */
    skip?: number
    distinct?: CommercialScalarFieldEnum | CommercialScalarFieldEnum[]
  }

  /**
   * Commercial create
   */
  export type CommercialCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * The data needed to create a Commercial.
     */
    data: XOR<CommercialCreateInput, CommercialUncheckedCreateInput>
  }

  /**
   * Commercial createMany
   */
  export type CommercialCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Commercials.
     */
    data: CommercialCreateManyInput | CommercialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Commercial createManyAndReturn
   */
  export type CommercialCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Commercials.
     */
    data: CommercialCreateManyInput | CommercialCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Commercial update
   */
  export type CommercialUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * The data needed to update a Commercial.
     */
    data: XOR<CommercialUpdateInput, CommercialUncheckedUpdateInput>
    /**
     * Choose, which Commercial to update.
     */
    where: CommercialWhereUniqueInput
  }

  /**
   * Commercial updateMany
   */
  export type CommercialUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Commercials.
     */
    data: XOR<CommercialUpdateManyMutationInput, CommercialUncheckedUpdateManyInput>
    /**
     * Filter which Commercials to update
     */
    where?: CommercialWhereInput
  }

  /**
   * Commercial upsert
   */
  export type CommercialUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * The filter to search for the Commercial to update in case it exists.
     */
    where: CommercialWhereUniqueInput
    /**
     * In case the Commercial found by the `where` argument doesn't exist, create a new Commercial with this data.
     */
    create: XOR<CommercialCreateInput, CommercialUncheckedCreateInput>
    /**
     * In case the Commercial was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CommercialUpdateInput, CommercialUncheckedUpdateInput>
  }

  /**
   * Commercial delete
   */
  export type CommercialDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
    /**
     * Filter which Commercial to delete.
     */
    where: CommercialWhereUniqueInput
  }

  /**
   * Commercial deleteMany
   */
  export type CommercialDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Commercials to delete
     */
    where?: CommercialWhereInput
  }

  /**
   * Commercial.Price
   */
  export type Commercial$PriceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    where?: PriceWhereInput
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    cursor?: PriceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Commercial without action
   */
  export type CommercialDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial
     */
    select?: CommercialSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CommercialInclude<ExtArgs> | null
  }


  /**
   * Model Commercial_history
   */

  export type AggregateCommercial_history = {
    _count: Commercial_historyCountAggregateOutputType | null
    _avg: Commercial_historyAvgAggregateOutputType | null
    _sum: Commercial_historySumAggregateOutputType | null
    _min: Commercial_historyMinAggregateOutputType | null
    _max: Commercial_historyMaxAggregateOutputType | null
  }

  export type Commercial_historyAvgAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
  }

  export type Commercial_historySumAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
  }

  export type Commercial_historyMinAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    survey_date: string | null
    city: string | null
    commercial_zone_name: string | null
    zone: string | null
    type: string | null
    location: string | null
    project_status: string | null
    launch_year: string | null
    grade: string | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
    property_feature: string | null
    property_title: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Commercial_historyMaxAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    survey_date: string | null
    city: string | null
    commercial_zone_name: string | null
    zone: string | null
    type: string | null
    location: string | null
    project_status: string | null
    launch_year: string | null
    grade: string | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
    property_feature: string | null
    property_title: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Commercial_historyCountAggregateOutputType = {
    id: number
    commercial_id: number
    survey_date: number
    city: number
    commercial_zone_name: number
    zone: number
    type: number
    location: number
    project_status: number
    launch_year: number
    grade: number
    area: number
    occupancy: number
    total_plots: number
    total_shops: number
    total_offices: number
    total_apartments: number
    property_feature: number
    property_title: number
    remarks: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Commercial_historyAvgAggregateInputType = {
    id?: true
    commercial_id?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
  }

  export type Commercial_historySumAggregateInputType = {
    id?: true
    commercial_id?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
  }

  export type Commercial_historyMinAggregateInputType = {
    id?: true
    commercial_id?: true
    survey_date?: true
    city?: true
    commercial_zone_name?: true
    zone?: true
    type?: true
    location?: true
    project_status?: true
    launch_year?: true
    grade?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
    property_feature?: true
    property_title?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Commercial_historyMaxAggregateInputType = {
    id?: true
    commercial_id?: true
    survey_date?: true
    city?: true
    commercial_zone_name?: true
    zone?: true
    type?: true
    location?: true
    project_status?: true
    launch_year?: true
    grade?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
    property_feature?: true
    property_title?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Commercial_historyCountAggregateInputType = {
    id?: true
    commercial_id?: true
    survey_date?: true
    city?: true
    commercial_zone_name?: true
    zone?: true
    type?: true
    location?: true
    project_status?: true
    launch_year?: true
    grade?: true
    area?: true
    occupancy?: true
    total_plots?: true
    total_shops?: true
    total_offices?: true
    total_apartments?: true
    property_feature?: true
    property_title?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Commercial_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Commercial_history to aggregate.
     */
    where?: Commercial_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commercial_histories to fetch.
     */
    orderBy?: Commercial_historyOrderByWithRelationInput | Commercial_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Commercial_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commercial_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commercial_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Commercial_histories
    **/
    _count?: true | Commercial_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Commercial_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Commercial_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Commercial_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Commercial_historyMaxAggregateInputType
  }

  export type GetCommercial_historyAggregateType<T extends Commercial_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateCommercial_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCommercial_history[P]>
      : GetScalarType<T[P], AggregateCommercial_history[P]>
  }




  export type Commercial_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Commercial_historyWhereInput
    orderBy?: Commercial_historyOrderByWithAggregationInput | Commercial_historyOrderByWithAggregationInput[]
    by: Commercial_historyScalarFieldEnum[] | Commercial_historyScalarFieldEnum
    having?: Commercial_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Commercial_historyCountAggregateInputType | true
    _avg?: Commercial_historyAvgAggregateInputType
    _sum?: Commercial_historySumAggregateInputType
    _min?: Commercial_historyMinAggregateInputType
    _max?: Commercial_historyMaxAggregateInputType
  }

  export type Commercial_historyGroupByOutputType = {
    id: number
    commercial_id: number
    survey_date: string | null
    city: string | null
    commercial_zone_name: string | null
    zone: string | null
    type: string | null
    location: string | null
    project_status: string | null
    launch_year: string | null
    grade: string | null
    area: number | null
    occupancy: number | null
    total_plots: number | null
    total_shops: number | null
    total_offices: number | null
    total_apartments: number | null
    property_feature: string | null
    property_title: string | null
    remarks: string | null
    createdAt: Date
    updatedAt: Date
    _count: Commercial_historyCountAggregateOutputType | null
    _avg: Commercial_historyAvgAggregateOutputType | null
    _sum: Commercial_historySumAggregateOutputType | null
    _min: Commercial_historyMinAggregateOutputType | null
    _max: Commercial_historyMaxAggregateOutputType | null
  }

  type GetCommercial_historyGroupByPayload<T extends Commercial_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Commercial_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Commercial_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Commercial_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Commercial_historyGroupByOutputType[P]>
        }
      >
    >


  export type Commercial_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    commercial_id?: boolean
    survey_date?: boolean
    city?: boolean
    commercial_zone_name?: boolean
    zone?: boolean
    type?: boolean
    location?: boolean
    project_status?: boolean
    launch_year?: boolean
    grade?: boolean
    area?: boolean
    occupancy?: boolean
    total_plots?: boolean
    total_shops?: boolean
    total_offices?: boolean
    total_apartments?: boolean
    property_feature?: boolean
    property_title?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["commercial_history"]>

  export type Commercial_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    commercial_id?: boolean
    survey_date?: boolean
    city?: boolean
    commercial_zone_name?: boolean
    zone?: boolean
    type?: boolean
    location?: boolean
    project_status?: boolean
    launch_year?: boolean
    grade?: boolean
    area?: boolean
    occupancy?: boolean
    total_plots?: boolean
    total_shops?: boolean
    total_offices?: boolean
    total_apartments?: boolean
    property_feature?: boolean
    property_title?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["commercial_history"]>

  export type Commercial_historySelectScalar = {
    id?: boolean
    commercial_id?: boolean
    survey_date?: boolean
    city?: boolean
    commercial_zone_name?: boolean
    zone?: boolean
    type?: boolean
    location?: boolean
    project_status?: boolean
    launch_year?: boolean
    grade?: boolean
    area?: boolean
    occupancy?: boolean
    total_plots?: boolean
    total_shops?: boolean
    total_offices?: boolean
    total_apartments?: boolean
    property_feature?: boolean
    property_title?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $Commercial_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Commercial_history"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      commercial_id: number
      survey_date: string | null
      city: string | null
      commercial_zone_name: string | null
      zone: string | null
      type: string | null
      location: string | null
      project_status: string | null
      launch_year: string | null
      grade: string | null
      area: number | null
      occupancy: number | null
      total_plots: number | null
      total_shops: number | null
      total_offices: number | null
      total_apartments: number | null
      property_feature: string | null
      property_title: string | null
      remarks: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["commercial_history"]>
    composites: {}
  }

  type Commercial_historyGetPayload<S extends boolean | null | undefined | Commercial_historyDefaultArgs> = $Result.GetResult<Prisma.$Commercial_historyPayload, S>

  type Commercial_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Commercial_historyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Commercial_historyCountAggregateInputType | true
    }

  export interface Commercial_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Commercial_history'], meta: { name: 'Commercial_history' } }
    /**
     * Find zero or one Commercial_history that matches the filter.
     * @param {Commercial_historyFindUniqueArgs} args - Arguments to find a Commercial_history
     * @example
     * // Get one Commercial_history
     * const commercial_history = await prisma.commercial_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Commercial_historyFindUniqueArgs>(args: SelectSubset<T, Commercial_historyFindUniqueArgs<ExtArgs>>): Prisma__Commercial_historyClient<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Commercial_history that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Commercial_historyFindUniqueOrThrowArgs} args - Arguments to find a Commercial_history
     * @example
     * // Get one Commercial_history
     * const commercial_history = await prisma.commercial_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Commercial_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, Commercial_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Commercial_historyClient<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Commercial_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Commercial_historyFindFirstArgs} args - Arguments to find a Commercial_history
     * @example
     * // Get one Commercial_history
     * const commercial_history = await prisma.commercial_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Commercial_historyFindFirstArgs>(args?: SelectSubset<T, Commercial_historyFindFirstArgs<ExtArgs>>): Prisma__Commercial_historyClient<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Commercial_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Commercial_historyFindFirstOrThrowArgs} args - Arguments to find a Commercial_history
     * @example
     * // Get one Commercial_history
     * const commercial_history = await prisma.commercial_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Commercial_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, Commercial_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__Commercial_historyClient<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Commercial_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Commercial_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Commercial_histories
     * const commercial_histories = await prisma.commercial_history.findMany()
     * 
     * // Get first 10 Commercial_histories
     * const commercial_histories = await prisma.commercial_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const commercial_historyWithIdOnly = await prisma.commercial_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Commercial_historyFindManyArgs>(args?: SelectSubset<T, Commercial_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Commercial_history.
     * @param {Commercial_historyCreateArgs} args - Arguments to create a Commercial_history.
     * @example
     * // Create one Commercial_history
     * const Commercial_history = await prisma.commercial_history.create({
     *   data: {
     *     // ... data to create a Commercial_history
     *   }
     * })
     * 
     */
    create<T extends Commercial_historyCreateArgs>(args: SelectSubset<T, Commercial_historyCreateArgs<ExtArgs>>): Prisma__Commercial_historyClient<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Commercial_histories.
     * @param {Commercial_historyCreateManyArgs} args - Arguments to create many Commercial_histories.
     * @example
     * // Create many Commercial_histories
     * const commercial_history = await prisma.commercial_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Commercial_historyCreateManyArgs>(args?: SelectSubset<T, Commercial_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Commercial_histories and returns the data saved in the database.
     * @param {Commercial_historyCreateManyAndReturnArgs} args - Arguments to create many Commercial_histories.
     * @example
     * // Create many Commercial_histories
     * const commercial_history = await prisma.commercial_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Commercial_histories and only return the `id`
     * const commercial_historyWithIdOnly = await prisma.commercial_history.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Commercial_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, Commercial_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Commercial_history.
     * @param {Commercial_historyDeleteArgs} args - Arguments to delete one Commercial_history.
     * @example
     * // Delete one Commercial_history
     * const Commercial_history = await prisma.commercial_history.delete({
     *   where: {
     *     // ... filter to delete one Commercial_history
     *   }
     * })
     * 
     */
    delete<T extends Commercial_historyDeleteArgs>(args: SelectSubset<T, Commercial_historyDeleteArgs<ExtArgs>>): Prisma__Commercial_historyClient<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Commercial_history.
     * @param {Commercial_historyUpdateArgs} args - Arguments to update one Commercial_history.
     * @example
     * // Update one Commercial_history
     * const commercial_history = await prisma.commercial_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Commercial_historyUpdateArgs>(args: SelectSubset<T, Commercial_historyUpdateArgs<ExtArgs>>): Prisma__Commercial_historyClient<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Commercial_histories.
     * @param {Commercial_historyDeleteManyArgs} args - Arguments to filter Commercial_histories to delete.
     * @example
     * // Delete a few Commercial_histories
     * const { count } = await prisma.commercial_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Commercial_historyDeleteManyArgs>(args?: SelectSubset<T, Commercial_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Commercial_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Commercial_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Commercial_histories
     * const commercial_history = await prisma.commercial_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Commercial_historyUpdateManyArgs>(args: SelectSubset<T, Commercial_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Commercial_history.
     * @param {Commercial_historyUpsertArgs} args - Arguments to update or create a Commercial_history.
     * @example
     * // Update or create a Commercial_history
     * const commercial_history = await prisma.commercial_history.upsert({
     *   create: {
     *     // ... data to create a Commercial_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Commercial_history we want to update
     *   }
     * })
     */
    upsert<T extends Commercial_historyUpsertArgs>(args: SelectSubset<T, Commercial_historyUpsertArgs<ExtArgs>>): Prisma__Commercial_historyClient<$Result.GetResult<Prisma.$Commercial_historyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Commercial_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Commercial_historyCountArgs} args - Arguments to filter Commercial_histories to count.
     * @example
     * // Count the number of Commercial_histories
     * const count = await prisma.commercial_history.count({
     *   where: {
     *     // ... the filter for the Commercial_histories we want to count
     *   }
     * })
    **/
    count<T extends Commercial_historyCountArgs>(
      args?: Subset<T, Commercial_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Commercial_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Commercial_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Commercial_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Commercial_historyAggregateArgs>(args: Subset<T, Commercial_historyAggregateArgs>): Prisma.PrismaPromise<GetCommercial_historyAggregateType<T>>

    /**
     * Group by Commercial_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Commercial_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Commercial_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Commercial_historyGroupByArgs['orderBy'] }
        : { orderBy?: Commercial_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Commercial_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCommercial_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Commercial_history model
   */
  readonly fields: Commercial_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Commercial_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Commercial_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Commercial_history model
   */ 
  interface Commercial_historyFieldRefs {
    readonly id: FieldRef<"Commercial_history", 'Int'>
    readonly commercial_id: FieldRef<"Commercial_history", 'Int'>
    readonly survey_date: FieldRef<"Commercial_history", 'String'>
    readonly city: FieldRef<"Commercial_history", 'String'>
    readonly commercial_zone_name: FieldRef<"Commercial_history", 'String'>
    readonly zone: FieldRef<"Commercial_history", 'String'>
    readonly type: FieldRef<"Commercial_history", 'String'>
    readonly location: FieldRef<"Commercial_history", 'String'>
    readonly project_status: FieldRef<"Commercial_history", 'String'>
    readonly launch_year: FieldRef<"Commercial_history", 'String'>
    readonly grade: FieldRef<"Commercial_history", 'String'>
    readonly area: FieldRef<"Commercial_history", 'Int'>
    readonly occupancy: FieldRef<"Commercial_history", 'Int'>
    readonly total_plots: FieldRef<"Commercial_history", 'Int'>
    readonly total_shops: FieldRef<"Commercial_history", 'Int'>
    readonly total_offices: FieldRef<"Commercial_history", 'Int'>
    readonly total_apartments: FieldRef<"Commercial_history", 'Int'>
    readonly property_feature: FieldRef<"Commercial_history", 'String'>
    readonly property_title: FieldRef<"Commercial_history", 'String'>
    readonly remarks: FieldRef<"Commercial_history", 'String'>
    readonly createdAt: FieldRef<"Commercial_history", 'DateTime'>
    readonly updatedAt: FieldRef<"Commercial_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Commercial_history findUnique
   */
  export type Commercial_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * Filter, which Commercial_history to fetch.
     */
    where: Commercial_historyWhereUniqueInput
  }

  /**
   * Commercial_history findUniqueOrThrow
   */
  export type Commercial_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * Filter, which Commercial_history to fetch.
     */
    where: Commercial_historyWhereUniqueInput
  }

  /**
   * Commercial_history findFirst
   */
  export type Commercial_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * Filter, which Commercial_history to fetch.
     */
    where?: Commercial_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commercial_histories to fetch.
     */
    orderBy?: Commercial_historyOrderByWithRelationInput | Commercial_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Commercial_histories.
     */
    cursor?: Commercial_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commercial_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commercial_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Commercial_histories.
     */
    distinct?: Commercial_historyScalarFieldEnum | Commercial_historyScalarFieldEnum[]
  }

  /**
   * Commercial_history findFirstOrThrow
   */
  export type Commercial_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * Filter, which Commercial_history to fetch.
     */
    where?: Commercial_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commercial_histories to fetch.
     */
    orderBy?: Commercial_historyOrderByWithRelationInput | Commercial_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Commercial_histories.
     */
    cursor?: Commercial_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commercial_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commercial_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Commercial_histories.
     */
    distinct?: Commercial_historyScalarFieldEnum | Commercial_historyScalarFieldEnum[]
  }

  /**
   * Commercial_history findMany
   */
  export type Commercial_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * Filter, which Commercial_histories to fetch.
     */
    where?: Commercial_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Commercial_histories to fetch.
     */
    orderBy?: Commercial_historyOrderByWithRelationInput | Commercial_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Commercial_histories.
     */
    cursor?: Commercial_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Commercial_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Commercial_histories.
     */
    skip?: number
    distinct?: Commercial_historyScalarFieldEnum | Commercial_historyScalarFieldEnum[]
  }

  /**
   * Commercial_history create
   */
  export type Commercial_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * The data needed to create a Commercial_history.
     */
    data: XOR<Commercial_historyCreateInput, Commercial_historyUncheckedCreateInput>
  }

  /**
   * Commercial_history createMany
   */
  export type Commercial_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Commercial_histories.
     */
    data: Commercial_historyCreateManyInput | Commercial_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Commercial_history createManyAndReturn
   */
  export type Commercial_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Commercial_histories.
     */
    data: Commercial_historyCreateManyInput | Commercial_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Commercial_history update
   */
  export type Commercial_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * The data needed to update a Commercial_history.
     */
    data: XOR<Commercial_historyUpdateInput, Commercial_historyUncheckedUpdateInput>
    /**
     * Choose, which Commercial_history to update.
     */
    where: Commercial_historyWhereUniqueInput
  }

  /**
   * Commercial_history updateMany
   */
  export type Commercial_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Commercial_histories.
     */
    data: XOR<Commercial_historyUpdateManyMutationInput, Commercial_historyUncheckedUpdateManyInput>
    /**
     * Filter which Commercial_histories to update
     */
    where?: Commercial_historyWhereInput
  }

  /**
   * Commercial_history upsert
   */
  export type Commercial_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * The filter to search for the Commercial_history to update in case it exists.
     */
    where: Commercial_historyWhereUniqueInput
    /**
     * In case the Commercial_history found by the `where` argument doesn't exist, create a new Commercial_history with this data.
     */
    create: XOR<Commercial_historyCreateInput, Commercial_historyUncheckedCreateInput>
    /**
     * In case the Commercial_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Commercial_historyUpdateInput, Commercial_historyUncheckedUpdateInput>
  }

  /**
   * Commercial_history delete
   */
  export type Commercial_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
    /**
     * Filter which Commercial_history to delete.
     */
    where: Commercial_historyWhereUniqueInput
  }

  /**
   * Commercial_history deleteMany
   */
  export type Commercial_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Commercial_histories to delete
     */
    where?: Commercial_historyWhereInput
  }

  /**
   * Commercial_history without action
   */
  export type Commercial_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Commercial_history
     */
    select?: Commercial_historySelect<ExtArgs> | null
  }


  /**
   * Model Houses
   */

  export type AggregateHouses = {
    _count: HousesCountAggregateOutputType | null
    _avg: HousesAvgAggregateOutputType | null
    _sum: HousesSumAggregateOutputType | null
    _min: HousesMinAggregateOutputType | null
    _max: HousesMaxAggregateOutputType | null
  }

  export type HousesAvgAggregateOutputType = {
    id: number | null
    society_id: number | null
  }

  export type HousesSumAggregateOutputType = {
    id: number | null
    society_id: number | null
  }

  export type HousesMinAggregateOutputType = {
    id: number | null
    society_id: number | null
    type: string | null
    size: string | null
    price: string | null
    direction: string | null
    is_corner: string | null
    condition: string | null
    floors: string | null
    has_basement: string | null
    construction_year: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HousesMaxAggregateOutputType = {
    id: number | null
    society_id: number | null
    type: string | null
    size: string | null
    price: string | null
    direction: string | null
    is_corner: string | null
    condition: string | null
    floors: string | null
    has_basement: string | null
    construction_year: string | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HousesCountAggregateOutputType = {
    id: number
    society_id: number
    type: number
    size: number
    price: number
    direction: number
    is_corner: number
    condition: number
    floors: number
    has_basement: number
    construction_year: number
    remarks: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HousesAvgAggregateInputType = {
    id?: true
    society_id?: true
  }

  export type HousesSumAggregateInputType = {
    id?: true
    society_id?: true
  }

  export type HousesMinAggregateInputType = {
    id?: true
    society_id?: true
    type?: true
    size?: true
    price?: true
    direction?: true
    is_corner?: true
    condition?: true
    floors?: true
    has_basement?: true
    construction_year?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HousesMaxAggregateInputType = {
    id?: true
    society_id?: true
    type?: true
    size?: true
    price?: true
    direction?: true
    is_corner?: true
    condition?: true
    floors?: true
    has_basement?: true
    construction_year?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HousesCountAggregateInputType = {
    id?: true
    society_id?: true
    type?: true
    size?: true
    price?: true
    direction?: true
    is_corner?: true
    condition?: true
    floors?: true
    has_basement?: true
    construction_year?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HousesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Houses to aggregate.
     */
    where?: HousesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Houses to fetch.
     */
    orderBy?: HousesOrderByWithRelationInput | HousesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HousesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Houses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Houses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Houses
    **/
    _count?: true | HousesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: HousesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: HousesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HousesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HousesMaxAggregateInputType
  }

  export type GetHousesAggregateType<T extends HousesAggregateArgs> = {
        [P in keyof T & keyof AggregateHouses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHouses[P]>
      : GetScalarType<T[P], AggregateHouses[P]>
  }




  export type HousesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HousesWhereInput
    orderBy?: HousesOrderByWithAggregationInput | HousesOrderByWithAggregationInput[]
    by: HousesScalarFieldEnum[] | HousesScalarFieldEnum
    having?: HousesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HousesCountAggregateInputType | true
    _avg?: HousesAvgAggregateInputType
    _sum?: HousesSumAggregateInputType
    _min?: HousesMinAggregateInputType
    _max?: HousesMaxAggregateInputType
  }

  export type HousesGroupByOutputType = {
    id: number
    society_id: number
    type: string | null
    size: string | null
    price: string | null
    direction: string | null
    is_corner: string | null
    condition: string | null
    floors: string | null
    has_basement: string | null
    construction_year: string | null
    remarks: string | null
    createdAt: Date
    updatedAt: Date
    _count: HousesCountAggregateOutputType | null
    _avg: HousesAvgAggregateOutputType | null
    _sum: HousesSumAggregateOutputType | null
    _min: HousesMinAggregateOutputType | null
    _max: HousesMaxAggregateOutputType | null
  }

  type GetHousesGroupByPayload<T extends HousesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HousesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HousesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HousesGroupByOutputType[P]>
            : GetScalarType<T[P], HousesGroupByOutputType[P]>
        }
      >
    >


  export type HousesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    society_id?: boolean
    type?: boolean
    size?: boolean
    price?: boolean
    direction?: boolean
    is_corner?: boolean
    condition?: boolean
    floors?: boolean
    has_basement?: boolean
    construction_year?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    societies?: boolean | SocietiesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["houses"]>

  export type HousesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    society_id?: boolean
    type?: boolean
    size?: boolean
    price?: boolean
    direction?: boolean
    is_corner?: boolean
    condition?: boolean
    floors?: boolean
    has_basement?: boolean
    construction_year?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    societies?: boolean | SocietiesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["houses"]>

  export type HousesSelectScalar = {
    id?: boolean
    society_id?: boolean
    type?: boolean
    size?: boolean
    price?: boolean
    direction?: boolean
    is_corner?: boolean
    condition?: boolean
    floors?: boolean
    has_basement?: boolean
    construction_year?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HousesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    societies?: boolean | SocietiesDefaultArgs<ExtArgs>
  }
  export type HousesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    societies?: boolean | SocietiesDefaultArgs<ExtArgs>
  }

  export type $HousesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Houses"
    objects: {
      societies: Prisma.$SocietiesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      society_id: number
      type: string | null
      size: string | null
      price: string | null
      direction: string | null
      is_corner: string | null
      condition: string | null
      floors: string | null
      has_basement: string | null
      construction_year: string | null
      remarks: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["houses"]>
    composites: {}
  }

  type HousesGetPayload<S extends boolean | null | undefined | HousesDefaultArgs> = $Result.GetResult<Prisma.$HousesPayload, S>

  type HousesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<HousesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: HousesCountAggregateInputType | true
    }

  export interface HousesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Houses'], meta: { name: 'Houses' } }
    /**
     * Find zero or one Houses that matches the filter.
     * @param {HousesFindUniqueArgs} args - Arguments to find a Houses
     * @example
     * // Get one Houses
     * const houses = await prisma.houses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HousesFindUniqueArgs>(args: SelectSubset<T, HousesFindUniqueArgs<ExtArgs>>): Prisma__HousesClient<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Houses that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {HousesFindUniqueOrThrowArgs} args - Arguments to find a Houses
     * @example
     * // Get one Houses
     * const houses = await prisma.houses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HousesFindUniqueOrThrowArgs>(args: SelectSubset<T, HousesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HousesClient<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Houses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousesFindFirstArgs} args - Arguments to find a Houses
     * @example
     * // Get one Houses
     * const houses = await prisma.houses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HousesFindFirstArgs>(args?: SelectSubset<T, HousesFindFirstArgs<ExtArgs>>): Prisma__HousesClient<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Houses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousesFindFirstOrThrowArgs} args - Arguments to find a Houses
     * @example
     * // Get one Houses
     * const houses = await prisma.houses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HousesFindFirstOrThrowArgs>(args?: SelectSubset<T, HousesFindFirstOrThrowArgs<ExtArgs>>): Prisma__HousesClient<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Houses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Houses
     * const houses = await prisma.houses.findMany()
     * 
     * // Get first 10 Houses
     * const houses = await prisma.houses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const housesWithIdOnly = await prisma.houses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HousesFindManyArgs>(args?: SelectSubset<T, HousesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Houses.
     * @param {HousesCreateArgs} args - Arguments to create a Houses.
     * @example
     * // Create one Houses
     * const Houses = await prisma.houses.create({
     *   data: {
     *     // ... data to create a Houses
     *   }
     * })
     * 
     */
    create<T extends HousesCreateArgs>(args: SelectSubset<T, HousesCreateArgs<ExtArgs>>): Prisma__HousesClient<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Houses.
     * @param {HousesCreateManyArgs} args - Arguments to create many Houses.
     * @example
     * // Create many Houses
     * const houses = await prisma.houses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HousesCreateManyArgs>(args?: SelectSubset<T, HousesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Houses and returns the data saved in the database.
     * @param {HousesCreateManyAndReturnArgs} args - Arguments to create many Houses.
     * @example
     * // Create many Houses
     * const houses = await prisma.houses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Houses and only return the `id`
     * const housesWithIdOnly = await prisma.houses.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HousesCreateManyAndReturnArgs>(args?: SelectSubset<T, HousesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Houses.
     * @param {HousesDeleteArgs} args - Arguments to delete one Houses.
     * @example
     * // Delete one Houses
     * const Houses = await prisma.houses.delete({
     *   where: {
     *     // ... filter to delete one Houses
     *   }
     * })
     * 
     */
    delete<T extends HousesDeleteArgs>(args: SelectSubset<T, HousesDeleteArgs<ExtArgs>>): Prisma__HousesClient<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Houses.
     * @param {HousesUpdateArgs} args - Arguments to update one Houses.
     * @example
     * // Update one Houses
     * const houses = await prisma.houses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HousesUpdateArgs>(args: SelectSubset<T, HousesUpdateArgs<ExtArgs>>): Prisma__HousesClient<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Houses.
     * @param {HousesDeleteManyArgs} args - Arguments to filter Houses to delete.
     * @example
     * // Delete a few Houses
     * const { count } = await prisma.houses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HousesDeleteManyArgs>(args?: SelectSubset<T, HousesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Houses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Houses
     * const houses = await prisma.houses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HousesUpdateManyArgs>(args: SelectSubset<T, HousesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Houses.
     * @param {HousesUpsertArgs} args - Arguments to update or create a Houses.
     * @example
     * // Update or create a Houses
     * const houses = await prisma.houses.upsert({
     *   create: {
     *     // ... data to create a Houses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Houses we want to update
     *   }
     * })
     */
    upsert<T extends HousesUpsertArgs>(args: SelectSubset<T, HousesUpsertArgs<ExtArgs>>): Prisma__HousesClient<$Result.GetResult<Prisma.$HousesPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Houses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousesCountArgs} args - Arguments to filter Houses to count.
     * @example
     * // Count the number of Houses
     * const count = await prisma.houses.count({
     *   where: {
     *     // ... the filter for the Houses we want to count
     *   }
     * })
    **/
    count<T extends HousesCountArgs>(
      args?: Subset<T, HousesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HousesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Houses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HousesAggregateArgs>(args: Subset<T, HousesAggregateArgs>): Prisma.PrismaPromise<GetHousesAggregateType<T>>

    /**
     * Group by Houses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HousesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HousesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HousesGroupByArgs['orderBy'] }
        : { orderBy?: HousesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HousesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHousesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Houses model
   */
  readonly fields: HousesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Houses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HousesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    societies<T extends SocietiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SocietiesDefaultArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Houses model
   */ 
  interface HousesFieldRefs {
    readonly id: FieldRef<"Houses", 'Int'>
    readonly society_id: FieldRef<"Houses", 'Int'>
    readonly type: FieldRef<"Houses", 'String'>
    readonly size: FieldRef<"Houses", 'String'>
    readonly price: FieldRef<"Houses", 'String'>
    readonly direction: FieldRef<"Houses", 'String'>
    readonly is_corner: FieldRef<"Houses", 'String'>
    readonly condition: FieldRef<"Houses", 'String'>
    readonly floors: FieldRef<"Houses", 'String'>
    readonly has_basement: FieldRef<"Houses", 'String'>
    readonly construction_year: FieldRef<"Houses", 'String'>
    readonly remarks: FieldRef<"Houses", 'String'>
    readonly createdAt: FieldRef<"Houses", 'DateTime'>
    readonly updatedAt: FieldRef<"Houses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Houses findUnique
   */
  export type HousesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * Filter, which Houses to fetch.
     */
    where: HousesWhereUniqueInput
  }

  /**
   * Houses findUniqueOrThrow
   */
  export type HousesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * Filter, which Houses to fetch.
     */
    where: HousesWhereUniqueInput
  }

  /**
   * Houses findFirst
   */
  export type HousesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * Filter, which Houses to fetch.
     */
    where?: HousesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Houses to fetch.
     */
    orderBy?: HousesOrderByWithRelationInput | HousesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Houses.
     */
    cursor?: HousesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Houses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Houses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Houses.
     */
    distinct?: HousesScalarFieldEnum | HousesScalarFieldEnum[]
  }

  /**
   * Houses findFirstOrThrow
   */
  export type HousesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * Filter, which Houses to fetch.
     */
    where?: HousesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Houses to fetch.
     */
    orderBy?: HousesOrderByWithRelationInput | HousesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Houses.
     */
    cursor?: HousesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Houses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Houses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Houses.
     */
    distinct?: HousesScalarFieldEnum | HousesScalarFieldEnum[]
  }

  /**
   * Houses findMany
   */
  export type HousesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * Filter, which Houses to fetch.
     */
    where?: HousesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Houses to fetch.
     */
    orderBy?: HousesOrderByWithRelationInput | HousesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Houses.
     */
    cursor?: HousesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Houses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Houses.
     */
    skip?: number
    distinct?: HousesScalarFieldEnum | HousesScalarFieldEnum[]
  }

  /**
   * Houses create
   */
  export type HousesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * The data needed to create a Houses.
     */
    data: XOR<HousesCreateInput, HousesUncheckedCreateInput>
  }

  /**
   * Houses createMany
   */
  export type HousesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Houses.
     */
    data: HousesCreateManyInput | HousesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Houses createManyAndReturn
   */
  export type HousesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Houses.
     */
    data: HousesCreateManyInput | HousesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Houses update
   */
  export type HousesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * The data needed to update a Houses.
     */
    data: XOR<HousesUpdateInput, HousesUncheckedUpdateInput>
    /**
     * Choose, which Houses to update.
     */
    where: HousesWhereUniqueInput
  }

  /**
   * Houses updateMany
   */
  export type HousesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Houses.
     */
    data: XOR<HousesUpdateManyMutationInput, HousesUncheckedUpdateManyInput>
    /**
     * Filter which Houses to update
     */
    where?: HousesWhereInput
  }

  /**
   * Houses upsert
   */
  export type HousesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * The filter to search for the Houses to update in case it exists.
     */
    where: HousesWhereUniqueInput
    /**
     * In case the Houses found by the `where` argument doesn't exist, create a new Houses with this data.
     */
    create: XOR<HousesCreateInput, HousesUncheckedCreateInput>
    /**
     * In case the Houses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HousesUpdateInput, HousesUncheckedUpdateInput>
  }

  /**
   * Houses delete
   */
  export type HousesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
    /**
     * Filter which Houses to delete.
     */
    where: HousesWhereUniqueInput
  }

  /**
   * Houses deleteMany
   */
  export type HousesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Houses to delete
     */
    where?: HousesWhereInput
  }

  /**
   * Houses without action
   */
  export type HousesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Houses
     */
    select?: HousesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: HousesInclude<ExtArgs> | null
  }


  /**
   * Model Plots
   */

  export type AggregatePlots = {
    _count: PlotsCountAggregateOutputType | null
    _avg: PlotsAvgAggregateOutputType | null
    _sum: PlotsSumAggregateOutputType | null
    _min: PlotsMinAggregateOutputType | null
    _max: PlotsMaxAggregateOutputType | null
  }

  export type PlotsAvgAggregateOutputType = {
    id: number | null
    society_id: number | null
    plot_price: number | null
    plot_rent: number | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
  }

  export type PlotsSumAggregateOutputType = {
    id: number | null
    society_id: number | null
    plot_price: number | null
    plot_rent: number | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
  }

  export type PlotsMinAggregateOutputType = {
    id: number | null
    society_id: number | null
    date: string | null
    plot_type: string | null
    type: string | null
    size: string | null
    apartment_size: string | null
    apartment_size_ft: string | null
    shop_size: string | null
    office_size: string | null
    plot_price: number | null
    plot_rent: number | null
    banglow_price: string | null
    banglow_rent: string | null
    direction: string | null
    is_corner: string | null
    payment_mode: string | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
    remarks: string | null
    imagePath: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PlotsMaxAggregateOutputType = {
    id: number | null
    society_id: number | null
    date: string | null
    plot_type: string | null
    type: string | null
    size: string | null
    apartment_size: string | null
    apartment_size_ft: string | null
    shop_size: string | null
    office_size: string | null
    plot_price: number | null
    plot_rent: number | null
    banglow_price: string | null
    banglow_rent: string | null
    direction: string | null
    is_corner: string | null
    payment_mode: string | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
    remarks: string | null
    imagePath: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PlotsCountAggregateOutputType = {
    id: number
    society_id: number
    date: number
    plot_type: number
    type: number
    size: number
    apartment_size: number
    apartment_size_ft: number
    shop_size: number
    office_size: number
    plot_price: number
    plot_rent: number
    banglow_price: number
    banglow_rent: number
    direction: number
    is_corner: number
    payment_mode: number
    ins_total_price: number
    ins_down_payment: number
    ins_possession_Amount: number
    ins_period: number
    remarks: number
    imagePath: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PlotsAvgAggregateInputType = {
    id?: true
    society_id?: true
    plot_price?: true
    plot_rent?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
  }

  export type PlotsSumAggregateInputType = {
    id?: true
    society_id?: true
    plot_price?: true
    plot_rent?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
  }

  export type PlotsMinAggregateInputType = {
    id?: true
    society_id?: true
    date?: true
    plot_type?: true
    type?: true
    size?: true
    apartment_size?: true
    apartment_size_ft?: true
    shop_size?: true
    office_size?: true
    plot_price?: true
    plot_rent?: true
    banglow_price?: true
    banglow_rent?: true
    direction?: true
    is_corner?: true
    payment_mode?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
    remarks?: true
    imagePath?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PlotsMaxAggregateInputType = {
    id?: true
    society_id?: true
    date?: true
    plot_type?: true
    type?: true
    size?: true
    apartment_size?: true
    apartment_size_ft?: true
    shop_size?: true
    office_size?: true
    plot_price?: true
    plot_rent?: true
    banglow_price?: true
    banglow_rent?: true
    direction?: true
    is_corner?: true
    payment_mode?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
    remarks?: true
    imagePath?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PlotsCountAggregateInputType = {
    id?: true
    society_id?: true
    date?: true
    plot_type?: true
    type?: true
    size?: true
    apartment_size?: true
    apartment_size_ft?: true
    shop_size?: true
    office_size?: true
    plot_price?: true
    plot_rent?: true
    banglow_price?: true
    banglow_rent?: true
    direction?: true
    is_corner?: true
    payment_mode?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
    remarks?: true
    imagePath?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PlotsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Plots to aggregate.
     */
    where?: PlotsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Plots to fetch.
     */
    orderBy?: PlotsOrderByWithRelationInput | PlotsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PlotsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Plots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Plots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Plots
    **/
    _count?: true | PlotsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PlotsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PlotsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PlotsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PlotsMaxAggregateInputType
  }

  export type GetPlotsAggregateType<T extends PlotsAggregateArgs> = {
        [P in keyof T & keyof AggregatePlots]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlots[P]>
      : GetScalarType<T[P], AggregatePlots[P]>
  }




  export type PlotsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PlotsWhereInput
    orderBy?: PlotsOrderByWithAggregationInput | PlotsOrderByWithAggregationInput[]
    by: PlotsScalarFieldEnum[] | PlotsScalarFieldEnum
    having?: PlotsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PlotsCountAggregateInputType | true
    _avg?: PlotsAvgAggregateInputType
    _sum?: PlotsSumAggregateInputType
    _min?: PlotsMinAggregateInputType
    _max?: PlotsMaxAggregateInputType
  }

  export type PlotsGroupByOutputType = {
    id: number
    society_id: number
    date: string | null
    plot_type: string | null
    type: string | null
    size: string | null
    apartment_size: string | null
    apartment_size_ft: string | null
    shop_size: string | null
    office_size: string | null
    plot_price: number | null
    plot_rent: number | null
    banglow_price: string | null
    banglow_rent: string | null
    direction: string | null
    is_corner: string | null
    payment_mode: string | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
    remarks: string | null
    imagePath: string | null
    createdAt: Date
    updatedAt: Date
    _count: PlotsCountAggregateOutputType | null
    _avg: PlotsAvgAggregateOutputType | null
    _sum: PlotsSumAggregateOutputType | null
    _min: PlotsMinAggregateOutputType | null
    _max: PlotsMaxAggregateOutputType | null
  }

  type GetPlotsGroupByPayload<T extends PlotsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PlotsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PlotsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PlotsGroupByOutputType[P]>
            : GetScalarType<T[P], PlotsGroupByOutputType[P]>
        }
      >
    >


  export type PlotsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    society_id?: boolean
    date?: boolean
    plot_type?: boolean
    type?: boolean
    size?: boolean
    apartment_size?: boolean
    apartment_size_ft?: boolean
    shop_size?: boolean
    office_size?: boolean
    plot_price?: boolean
    plot_rent?: boolean
    banglow_price?: boolean
    banglow_rent?: boolean
    direction?: boolean
    is_corner?: boolean
    payment_mode?: boolean
    ins_total_price?: boolean
    ins_down_payment?: boolean
    ins_possession_Amount?: boolean
    ins_period?: boolean
    remarks?: boolean
    imagePath?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    societies?: boolean | SocietiesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["plots"]>

  export type PlotsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    society_id?: boolean
    date?: boolean
    plot_type?: boolean
    type?: boolean
    size?: boolean
    apartment_size?: boolean
    apartment_size_ft?: boolean
    shop_size?: boolean
    office_size?: boolean
    plot_price?: boolean
    plot_rent?: boolean
    banglow_price?: boolean
    banglow_rent?: boolean
    direction?: boolean
    is_corner?: boolean
    payment_mode?: boolean
    ins_total_price?: boolean
    ins_down_payment?: boolean
    ins_possession_Amount?: boolean
    ins_period?: boolean
    remarks?: boolean
    imagePath?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    societies?: boolean | SocietiesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["plots"]>

  export type PlotsSelectScalar = {
    id?: boolean
    society_id?: boolean
    date?: boolean
    plot_type?: boolean
    type?: boolean
    size?: boolean
    apartment_size?: boolean
    apartment_size_ft?: boolean
    shop_size?: boolean
    office_size?: boolean
    plot_price?: boolean
    plot_rent?: boolean
    banglow_price?: boolean
    banglow_rent?: boolean
    direction?: boolean
    is_corner?: boolean
    payment_mode?: boolean
    ins_total_price?: boolean
    ins_down_payment?: boolean
    ins_possession_Amount?: boolean
    ins_period?: boolean
    remarks?: boolean
    imagePath?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PlotsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    societies?: boolean | SocietiesDefaultArgs<ExtArgs>
  }
  export type PlotsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    societies?: boolean | SocietiesDefaultArgs<ExtArgs>
  }

  export type $PlotsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Plots"
    objects: {
      societies: Prisma.$SocietiesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      society_id: number
      date: string | null
      plot_type: string | null
      type: string | null
      size: string | null
      apartment_size: string | null
      apartment_size_ft: string | null
      shop_size: string | null
      office_size: string | null
      plot_price: number | null
      plot_rent: number | null
      banglow_price: string | null
      banglow_rent: string | null
      direction: string | null
      is_corner: string | null
      payment_mode: string | null
      ins_total_price: number | null
      ins_down_payment: number | null
      ins_possession_Amount: number | null
      ins_period: number | null
      remarks: string | null
      imagePath: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["plots"]>
    composites: {}
  }

  type PlotsGetPayload<S extends boolean | null | undefined | PlotsDefaultArgs> = $Result.GetResult<Prisma.$PlotsPayload, S>

  type PlotsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PlotsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PlotsCountAggregateInputType | true
    }

  export interface PlotsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Plots'], meta: { name: 'Plots' } }
    /**
     * Find zero or one Plots that matches the filter.
     * @param {PlotsFindUniqueArgs} args - Arguments to find a Plots
     * @example
     * // Get one Plots
     * const plots = await prisma.plots.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PlotsFindUniqueArgs>(args: SelectSubset<T, PlotsFindUniqueArgs<ExtArgs>>): Prisma__PlotsClient<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Plots that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PlotsFindUniqueOrThrowArgs} args - Arguments to find a Plots
     * @example
     * // Get one Plots
     * const plots = await prisma.plots.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PlotsFindUniqueOrThrowArgs>(args: SelectSubset<T, PlotsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PlotsClient<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Plots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlotsFindFirstArgs} args - Arguments to find a Plots
     * @example
     * // Get one Plots
     * const plots = await prisma.plots.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PlotsFindFirstArgs>(args?: SelectSubset<T, PlotsFindFirstArgs<ExtArgs>>): Prisma__PlotsClient<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Plots that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlotsFindFirstOrThrowArgs} args - Arguments to find a Plots
     * @example
     * // Get one Plots
     * const plots = await prisma.plots.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PlotsFindFirstOrThrowArgs>(args?: SelectSubset<T, PlotsFindFirstOrThrowArgs<ExtArgs>>): Prisma__PlotsClient<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Plots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlotsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Plots
     * const plots = await prisma.plots.findMany()
     * 
     * // Get first 10 Plots
     * const plots = await prisma.plots.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const plotsWithIdOnly = await prisma.plots.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PlotsFindManyArgs>(args?: SelectSubset<T, PlotsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Plots.
     * @param {PlotsCreateArgs} args - Arguments to create a Plots.
     * @example
     * // Create one Plots
     * const Plots = await prisma.plots.create({
     *   data: {
     *     // ... data to create a Plots
     *   }
     * })
     * 
     */
    create<T extends PlotsCreateArgs>(args: SelectSubset<T, PlotsCreateArgs<ExtArgs>>): Prisma__PlotsClient<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Plots.
     * @param {PlotsCreateManyArgs} args - Arguments to create many Plots.
     * @example
     * // Create many Plots
     * const plots = await prisma.plots.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PlotsCreateManyArgs>(args?: SelectSubset<T, PlotsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Plots and returns the data saved in the database.
     * @param {PlotsCreateManyAndReturnArgs} args - Arguments to create many Plots.
     * @example
     * // Create many Plots
     * const plots = await prisma.plots.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Plots and only return the `id`
     * const plotsWithIdOnly = await prisma.plots.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PlotsCreateManyAndReturnArgs>(args?: SelectSubset<T, PlotsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Plots.
     * @param {PlotsDeleteArgs} args - Arguments to delete one Plots.
     * @example
     * // Delete one Plots
     * const Plots = await prisma.plots.delete({
     *   where: {
     *     // ... filter to delete one Plots
     *   }
     * })
     * 
     */
    delete<T extends PlotsDeleteArgs>(args: SelectSubset<T, PlotsDeleteArgs<ExtArgs>>): Prisma__PlotsClient<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Plots.
     * @param {PlotsUpdateArgs} args - Arguments to update one Plots.
     * @example
     * // Update one Plots
     * const plots = await prisma.plots.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PlotsUpdateArgs>(args: SelectSubset<T, PlotsUpdateArgs<ExtArgs>>): Prisma__PlotsClient<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Plots.
     * @param {PlotsDeleteManyArgs} args - Arguments to filter Plots to delete.
     * @example
     * // Delete a few Plots
     * const { count } = await prisma.plots.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PlotsDeleteManyArgs>(args?: SelectSubset<T, PlotsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Plots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlotsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Plots
     * const plots = await prisma.plots.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PlotsUpdateManyArgs>(args: SelectSubset<T, PlotsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Plots.
     * @param {PlotsUpsertArgs} args - Arguments to update or create a Plots.
     * @example
     * // Update or create a Plots
     * const plots = await prisma.plots.upsert({
     *   create: {
     *     // ... data to create a Plots
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Plots we want to update
     *   }
     * })
     */
    upsert<T extends PlotsUpsertArgs>(args: SelectSubset<T, PlotsUpsertArgs<ExtArgs>>): Prisma__PlotsClient<$Result.GetResult<Prisma.$PlotsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Plots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlotsCountArgs} args - Arguments to filter Plots to count.
     * @example
     * // Count the number of Plots
     * const count = await prisma.plots.count({
     *   where: {
     *     // ... the filter for the Plots we want to count
     *   }
     * })
    **/
    count<T extends PlotsCountArgs>(
      args?: Subset<T, PlotsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PlotsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Plots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlotsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PlotsAggregateArgs>(args: Subset<T, PlotsAggregateArgs>): Prisma.PrismaPromise<GetPlotsAggregateType<T>>

    /**
     * Group by Plots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PlotsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PlotsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PlotsGroupByArgs['orderBy'] }
        : { orderBy?: PlotsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PlotsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlotsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Plots model
   */
  readonly fields: PlotsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Plots.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PlotsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    societies<T extends SocietiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SocietiesDefaultArgs<ExtArgs>>): Prisma__SocietiesClient<$Result.GetResult<Prisma.$SocietiesPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Plots model
   */ 
  interface PlotsFieldRefs {
    readonly id: FieldRef<"Plots", 'Int'>
    readonly society_id: FieldRef<"Plots", 'Int'>
    readonly date: FieldRef<"Plots", 'String'>
    readonly plot_type: FieldRef<"Plots", 'String'>
    readonly type: FieldRef<"Plots", 'String'>
    readonly size: FieldRef<"Plots", 'String'>
    readonly apartment_size: FieldRef<"Plots", 'String'>
    readonly apartment_size_ft: FieldRef<"Plots", 'String'>
    readonly shop_size: FieldRef<"Plots", 'String'>
    readonly office_size: FieldRef<"Plots", 'String'>
    readonly plot_price: FieldRef<"Plots", 'Int'>
    readonly plot_rent: FieldRef<"Plots", 'Int'>
    readonly banglow_price: FieldRef<"Plots", 'String'>
    readonly banglow_rent: FieldRef<"Plots", 'String'>
    readonly direction: FieldRef<"Plots", 'String'>
    readonly is_corner: FieldRef<"Plots", 'String'>
    readonly payment_mode: FieldRef<"Plots", 'String'>
    readonly ins_total_price: FieldRef<"Plots", 'Int'>
    readonly ins_down_payment: FieldRef<"Plots", 'Int'>
    readonly ins_possession_Amount: FieldRef<"Plots", 'Int'>
    readonly ins_period: FieldRef<"Plots", 'Int'>
    readonly remarks: FieldRef<"Plots", 'String'>
    readonly imagePath: FieldRef<"Plots", 'String'>
    readonly createdAt: FieldRef<"Plots", 'DateTime'>
    readonly updatedAt: FieldRef<"Plots", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Plots findUnique
   */
  export type PlotsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * Filter, which Plots to fetch.
     */
    where: PlotsWhereUniqueInput
  }

  /**
   * Plots findUniqueOrThrow
   */
  export type PlotsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * Filter, which Plots to fetch.
     */
    where: PlotsWhereUniqueInput
  }

  /**
   * Plots findFirst
   */
  export type PlotsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * Filter, which Plots to fetch.
     */
    where?: PlotsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Plots to fetch.
     */
    orderBy?: PlotsOrderByWithRelationInput | PlotsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Plots.
     */
    cursor?: PlotsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Plots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Plots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Plots.
     */
    distinct?: PlotsScalarFieldEnum | PlotsScalarFieldEnum[]
  }

  /**
   * Plots findFirstOrThrow
   */
  export type PlotsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * Filter, which Plots to fetch.
     */
    where?: PlotsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Plots to fetch.
     */
    orderBy?: PlotsOrderByWithRelationInput | PlotsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Plots.
     */
    cursor?: PlotsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Plots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Plots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Plots.
     */
    distinct?: PlotsScalarFieldEnum | PlotsScalarFieldEnum[]
  }

  /**
   * Plots findMany
   */
  export type PlotsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * Filter, which Plots to fetch.
     */
    where?: PlotsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Plots to fetch.
     */
    orderBy?: PlotsOrderByWithRelationInput | PlotsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Plots.
     */
    cursor?: PlotsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Plots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Plots.
     */
    skip?: number
    distinct?: PlotsScalarFieldEnum | PlotsScalarFieldEnum[]
  }

  /**
   * Plots create
   */
  export type PlotsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * The data needed to create a Plots.
     */
    data: XOR<PlotsCreateInput, PlotsUncheckedCreateInput>
  }

  /**
   * Plots createMany
   */
  export type PlotsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Plots.
     */
    data: PlotsCreateManyInput | PlotsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Plots createManyAndReturn
   */
  export type PlotsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Plots.
     */
    data: PlotsCreateManyInput | PlotsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Plots update
   */
  export type PlotsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * The data needed to update a Plots.
     */
    data: XOR<PlotsUpdateInput, PlotsUncheckedUpdateInput>
    /**
     * Choose, which Plots to update.
     */
    where: PlotsWhereUniqueInput
  }

  /**
   * Plots updateMany
   */
  export type PlotsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Plots.
     */
    data: XOR<PlotsUpdateManyMutationInput, PlotsUncheckedUpdateManyInput>
    /**
     * Filter which Plots to update
     */
    where?: PlotsWhereInput
  }

  /**
   * Plots upsert
   */
  export type PlotsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * The filter to search for the Plots to update in case it exists.
     */
    where: PlotsWhereUniqueInput
    /**
     * In case the Plots found by the `where` argument doesn't exist, create a new Plots with this data.
     */
    create: XOR<PlotsCreateInput, PlotsUncheckedCreateInput>
    /**
     * In case the Plots was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PlotsUpdateInput, PlotsUncheckedUpdateInput>
  }

  /**
   * Plots delete
   */
  export type PlotsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
    /**
     * Filter which Plots to delete.
     */
    where: PlotsWhereUniqueInput
  }

  /**
   * Plots deleteMany
   */
  export type PlotsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Plots to delete
     */
    where?: PlotsWhereInput
  }

  /**
   * Plots without action
   */
  export type PlotsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots
     */
    select?: PlotsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PlotsInclude<ExtArgs> | null
  }


  /**
   * Model Plots_history
   */

  export type AggregatePlots_history = {
    _count: Plots_historyCountAggregateOutputType | null
    _avg: Plots_historyAvgAggregateOutputType | null
    _sum: Plots_historySumAggregateOutputType | null
    _min: Plots_historyMinAggregateOutputType | null
    _max: Plots_historyMaxAggregateOutputType | null
  }

  export type Plots_historyAvgAggregateOutputType = {
    id: number | null
    society_id: number | null
    plot_id: number | null
    plot_price: number | null
    plot_rent: number | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
  }

  export type Plots_historySumAggregateOutputType = {
    id: number | null
    society_id: number | null
    plot_id: number | null
    plot_price: number | null
    plot_rent: number | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
  }

  export type Plots_historyMinAggregateOutputType = {
    id: number | null
    society_id: number | null
    plot_id: number | null
    date: string | null
    plot_type: string | null
    type: string | null
    size: string | null
    apartment_size: string | null
    apartment_size_ft: string | null
    shop_size: string | null
    office_size: string | null
    plot_price: number | null
    plot_rent: number | null
    banglow_price: string | null
    banglow_rent: string | null
    direction: string | null
    is_corner: string | null
    payment_mode: string | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
    remarks: string | null
    imagePath: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Plots_historyMaxAggregateOutputType = {
    id: number | null
    society_id: number | null
    plot_id: number | null
    date: string | null
    plot_type: string | null
    type: string | null
    size: string | null
    apartment_size: string | null
    apartment_size_ft: string | null
    shop_size: string | null
    office_size: string | null
    plot_price: number | null
    plot_rent: number | null
    banglow_price: string | null
    banglow_rent: string | null
    direction: string | null
    is_corner: string | null
    payment_mode: string | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
    remarks: string | null
    imagePath: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Plots_historyCountAggregateOutputType = {
    id: number
    society_id: number
    plot_id: number
    date: number
    plot_type: number
    type: number
    size: number
    apartment_size: number
    apartment_size_ft: number
    shop_size: number
    office_size: number
    plot_price: number
    plot_rent: number
    banglow_price: number
    banglow_rent: number
    direction: number
    is_corner: number
    payment_mode: number
    ins_total_price: number
    ins_down_payment: number
    ins_possession_Amount: number
    ins_period: number
    remarks: number
    imagePath: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Plots_historyAvgAggregateInputType = {
    id?: true
    society_id?: true
    plot_id?: true
    plot_price?: true
    plot_rent?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
  }

  export type Plots_historySumAggregateInputType = {
    id?: true
    society_id?: true
    plot_id?: true
    plot_price?: true
    plot_rent?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
  }

  export type Plots_historyMinAggregateInputType = {
    id?: true
    society_id?: true
    plot_id?: true
    date?: true
    plot_type?: true
    type?: true
    size?: true
    apartment_size?: true
    apartment_size_ft?: true
    shop_size?: true
    office_size?: true
    plot_price?: true
    plot_rent?: true
    banglow_price?: true
    banglow_rent?: true
    direction?: true
    is_corner?: true
    payment_mode?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
    remarks?: true
    imagePath?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Plots_historyMaxAggregateInputType = {
    id?: true
    society_id?: true
    plot_id?: true
    date?: true
    plot_type?: true
    type?: true
    size?: true
    apartment_size?: true
    apartment_size_ft?: true
    shop_size?: true
    office_size?: true
    plot_price?: true
    plot_rent?: true
    banglow_price?: true
    banglow_rent?: true
    direction?: true
    is_corner?: true
    payment_mode?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
    remarks?: true
    imagePath?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Plots_historyCountAggregateInputType = {
    id?: true
    society_id?: true
    plot_id?: true
    date?: true
    plot_type?: true
    type?: true
    size?: true
    apartment_size?: true
    apartment_size_ft?: true
    shop_size?: true
    office_size?: true
    plot_price?: true
    plot_rent?: true
    banglow_price?: true
    banglow_rent?: true
    direction?: true
    is_corner?: true
    payment_mode?: true
    ins_total_price?: true
    ins_down_payment?: true
    ins_possession_Amount?: true
    ins_period?: true
    remarks?: true
    imagePath?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Plots_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Plots_history to aggregate.
     */
    where?: Plots_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Plots_histories to fetch.
     */
    orderBy?: Plots_historyOrderByWithRelationInput | Plots_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Plots_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Plots_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Plots_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Plots_histories
    **/
    _count?: true | Plots_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Plots_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Plots_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Plots_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Plots_historyMaxAggregateInputType
  }

  export type GetPlots_historyAggregateType<T extends Plots_historyAggregateArgs> = {
        [P in keyof T & keyof AggregatePlots_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePlots_history[P]>
      : GetScalarType<T[P], AggregatePlots_history[P]>
  }




  export type Plots_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Plots_historyWhereInput
    orderBy?: Plots_historyOrderByWithAggregationInput | Plots_historyOrderByWithAggregationInput[]
    by: Plots_historyScalarFieldEnum[] | Plots_historyScalarFieldEnum
    having?: Plots_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Plots_historyCountAggregateInputType | true
    _avg?: Plots_historyAvgAggregateInputType
    _sum?: Plots_historySumAggregateInputType
    _min?: Plots_historyMinAggregateInputType
    _max?: Plots_historyMaxAggregateInputType
  }

  export type Plots_historyGroupByOutputType = {
    id: number
    society_id: number
    plot_id: number
    date: string | null
    plot_type: string | null
    type: string | null
    size: string | null
    apartment_size: string | null
    apartment_size_ft: string | null
    shop_size: string | null
    office_size: string | null
    plot_price: number | null
    plot_rent: number | null
    banglow_price: string | null
    banglow_rent: string | null
    direction: string | null
    is_corner: string | null
    payment_mode: string | null
    ins_total_price: number | null
    ins_down_payment: number | null
    ins_possession_Amount: number | null
    ins_period: number | null
    remarks: string | null
    imagePath: string | null
    createdAt: Date
    updatedAt: Date
    _count: Plots_historyCountAggregateOutputType | null
    _avg: Plots_historyAvgAggregateOutputType | null
    _sum: Plots_historySumAggregateOutputType | null
    _min: Plots_historyMinAggregateOutputType | null
    _max: Plots_historyMaxAggregateOutputType | null
  }

  type GetPlots_historyGroupByPayload<T extends Plots_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Plots_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Plots_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Plots_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Plots_historyGroupByOutputType[P]>
        }
      >
    >


  export type Plots_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    society_id?: boolean
    plot_id?: boolean
    date?: boolean
    plot_type?: boolean
    type?: boolean
    size?: boolean
    apartment_size?: boolean
    apartment_size_ft?: boolean
    shop_size?: boolean
    office_size?: boolean
    plot_price?: boolean
    plot_rent?: boolean
    banglow_price?: boolean
    banglow_rent?: boolean
    direction?: boolean
    is_corner?: boolean
    payment_mode?: boolean
    ins_total_price?: boolean
    ins_down_payment?: boolean
    ins_possession_Amount?: boolean
    ins_period?: boolean
    remarks?: boolean
    imagePath?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["plots_history"]>

  export type Plots_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    society_id?: boolean
    plot_id?: boolean
    date?: boolean
    plot_type?: boolean
    type?: boolean
    size?: boolean
    apartment_size?: boolean
    apartment_size_ft?: boolean
    shop_size?: boolean
    office_size?: boolean
    plot_price?: boolean
    plot_rent?: boolean
    banglow_price?: boolean
    banglow_rent?: boolean
    direction?: boolean
    is_corner?: boolean
    payment_mode?: boolean
    ins_total_price?: boolean
    ins_down_payment?: boolean
    ins_possession_Amount?: boolean
    ins_period?: boolean
    remarks?: boolean
    imagePath?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["plots_history"]>

  export type Plots_historySelectScalar = {
    id?: boolean
    society_id?: boolean
    plot_id?: boolean
    date?: boolean
    plot_type?: boolean
    type?: boolean
    size?: boolean
    apartment_size?: boolean
    apartment_size_ft?: boolean
    shop_size?: boolean
    office_size?: boolean
    plot_price?: boolean
    plot_rent?: boolean
    banglow_price?: boolean
    banglow_rent?: boolean
    direction?: boolean
    is_corner?: boolean
    payment_mode?: boolean
    ins_total_price?: boolean
    ins_down_payment?: boolean
    ins_possession_Amount?: boolean
    ins_period?: boolean
    remarks?: boolean
    imagePath?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $Plots_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Plots_history"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      society_id: number
      plot_id: number
      date: string | null
      plot_type: string | null
      type: string | null
      size: string | null
      apartment_size: string | null
      apartment_size_ft: string | null
      shop_size: string | null
      office_size: string | null
      plot_price: number | null
      plot_rent: number | null
      banglow_price: string | null
      banglow_rent: string | null
      direction: string | null
      is_corner: string | null
      payment_mode: string | null
      ins_total_price: number | null
      ins_down_payment: number | null
      ins_possession_Amount: number | null
      ins_period: number | null
      remarks: string | null
      imagePath: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["plots_history"]>
    composites: {}
  }

  type Plots_historyGetPayload<S extends boolean | null | undefined | Plots_historyDefaultArgs> = $Result.GetResult<Prisma.$Plots_historyPayload, S>

  type Plots_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Plots_historyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Plots_historyCountAggregateInputType | true
    }

  export interface Plots_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Plots_history'], meta: { name: 'Plots_history' } }
    /**
     * Find zero or one Plots_history that matches the filter.
     * @param {Plots_historyFindUniqueArgs} args - Arguments to find a Plots_history
     * @example
     * // Get one Plots_history
     * const plots_history = await prisma.plots_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Plots_historyFindUniqueArgs>(args: SelectSubset<T, Plots_historyFindUniqueArgs<ExtArgs>>): Prisma__Plots_historyClient<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Plots_history that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Plots_historyFindUniqueOrThrowArgs} args - Arguments to find a Plots_history
     * @example
     * // Get one Plots_history
     * const plots_history = await prisma.plots_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Plots_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, Plots_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Plots_historyClient<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Plots_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Plots_historyFindFirstArgs} args - Arguments to find a Plots_history
     * @example
     * // Get one Plots_history
     * const plots_history = await prisma.plots_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Plots_historyFindFirstArgs>(args?: SelectSubset<T, Plots_historyFindFirstArgs<ExtArgs>>): Prisma__Plots_historyClient<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Plots_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Plots_historyFindFirstOrThrowArgs} args - Arguments to find a Plots_history
     * @example
     * // Get one Plots_history
     * const plots_history = await prisma.plots_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Plots_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, Plots_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__Plots_historyClient<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Plots_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Plots_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Plots_histories
     * const plots_histories = await prisma.plots_history.findMany()
     * 
     * // Get first 10 Plots_histories
     * const plots_histories = await prisma.plots_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const plots_historyWithIdOnly = await prisma.plots_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Plots_historyFindManyArgs>(args?: SelectSubset<T, Plots_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Plots_history.
     * @param {Plots_historyCreateArgs} args - Arguments to create a Plots_history.
     * @example
     * // Create one Plots_history
     * const Plots_history = await prisma.plots_history.create({
     *   data: {
     *     // ... data to create a Plots_history
     *   }
     * })
     * 
     */
    create<T extends Plots_historyCreateArgs>(args: SelectSubset<T, Plots_historyCreateArgs<ExtArgs>>): Prisma__Plots_historyClient<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Plots_histories.
     * @param {Plots_historyCreateManyArgs} args - Arguments to create many Plots_histories.
     * @example
     * // Create many Plots_histories
     * const plots_history = await prisma.plots_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Plots_historyCreateManyArgs>(args?: SelectSubset<T, Plots_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Plots_histories and returns the data saved in the database.
     * @param {Plots_historyCreateManyAndReturnArgs} args - Arguments to create many Plots_histories.
     * @example
     * // Create many Plots_histories
     * const plots_history = await prisma.plots_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Plots_histories and only return the `id`
     * const plots_historyWithIdOnly = await prisma.plots_history.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Plots_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, Plots_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Plots_history.
     * @param {Plots_historyDeleteArgs} args - Arguments to delete one Plots_history.
     * @example
     * // Delete one Plots_history
     * const Plots_history = await prisma.plots_history.delete({
     *   where: {
     *     // ... filter to delete one Plots_history
     *   }
     * })
     * 
     */
    delete<T extends Plots_historyDeleteArgs>(args: SelectSubset<T, Plots_historyDeleteArgs<ExtArgs>>): Prisma__Plots_historyClient<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Plots_history.
     * @param {Plots_historyUpdateArgs} args - Arguments to update one Plots_history.
     * @example
     * // Update one Plots_history
     * const plots_history = await prisma.plots_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Plots_historyUpdateArgs>(args: SelectSubset<T, Plots_historyUpdateArgs<ExtArgs>>): Prisma__Plots_historyClient<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Plots_histories.
     * @param {Plots_historyDeleteManyArgs} args - Arguments to filter Plots_histories to delete.
     * @example
     * // Delete a few Plots_histories
     * const { count } = await prisma.plots_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Plots_historyDeleteManyArgs>(args?: SelectSubset<T, Plots_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Plots_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Plots_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Plots_histories
     * const plots_history = await prisma.plots_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Plots_historyUpdateManyArgs>(args: SelectSubset<T, Plots_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Plots_history.
     * @param {Plots_historyUpsertArgs} args - Arguments to update or create a Plots_history.
     * @example
     * // Update or create a Plots_history
     * const plots_history = await prisma.plots_history.upsert({
     *   create: {
     *     // ... data to create a Plots_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Plots_history we want to update
     *   }
     * })
     */
    upsert<T extends Plots_historyUpsertArgs>(args: SelectSubset<T, Plots_historyUpsertArgs<ExtArgs>>): Prisma__Plots_historyClient<$Result.GetResult<Prisma.$Plots_historyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Plots_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Plots_historyCountArgs} args - Arguments to filter Plots_histories to count.
     * @example
     * // Count the number of Plots_histories
     * const count = await prisma.plots_history.count({
     *   where: {
     *     // ... the filter for the Plots_histories we want to count
     *   }
     * })
    **/
    count<T extends Plots_historyCountArgs>(
      args?: Subset<T, Plots_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Plots_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Plots_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Plots_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Plots_historyAggregateArgs>(args: Subset<T, Plots_historyAggregateArgs>): Prisma.PrismaPromise<GetPlots_historyAggregateType<T>>

    /**
     * Group by Plots_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Plots_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Plots_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Plots_historyGroupByArgs['orderBy'] }
        : { orderBy?: Plots_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Plots_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlots_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Plots_history model
   */
  readonly fields: Plots_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Plots_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Plots_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Plots_history model
   */ 
  interface Plots_historyFieldRefs {
    readonly id: FieldRef<"Plots_history", 'Int'>
    readonly society_id: FieldRef<"Plots_history", 'Int'>
    readonly plot_id: FieldRef<"Plots_history", 'Int'>
    readonly date: FieldRef<"Plots_history", 'String'>
    readonly plot_type: FieldRef<"Plots_history", 'String'>
    readonly type: FieldRef<"Plots_history", 'String'>
    readonly size: FieldRef<"Plots_history", 'String'>
    readonly apartment_size: FieldRef<"Plots_history", 'String'>
    readonly apartment_size_ft: FieldRef<"Plots_history", 'String'>
    readonly shop_size: FieldRef<"Plots_history", 'String'>
    readonly office_size: FieldRef<"Plots_history", 'String'>
    readonly plot_price: FieldRef<"Plots_history", 'Int'>
    readonly plot_rent: FieldRef<"Plots_history", 'Int'>
    readonly banglow_price: FieldRef<"Plots_history", 'String'>
    readonly banglow_rent: FieldRef<"Plots_history", 'String'>
    readonly direction: FieldRef<"Plots_history", 'String'>
    readonly is_corner: FieldRef<"Plots_history", 'String'>
    readonly payment_mode: FieldRef<"Plots_history", 'String'>
    readonly ins_total_price: FieldRef<"Plots_history", 'Int'>
    readonly ins_down_payment: FieldRef<"Plots_history", 'Int'>
    readonly ins_possession_Amount: FieldRef<"Plots_history", 'Int'>
    readonly ins_period: FieldRef<"Plots_history", 'Int'>
    readonly remarks: FieldRef<"Plots_history", 'String'>
    readonly imagePath: FieldRef<"Plots_history", 'String'>
    readonly createdAt: FieldRef<"Plots_history", 'DateTime'>
    readonly updatedAt: FieldRef<"Plots_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Plots_history findUnique
   */
  export type Plots_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * Filter, which Plots_history to fetch.
     */
    where: Plots_historyWhereUniqueInput
  }

  /**
   * Plots_history findUniqueOrThrow
   */
  export type Plots_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * Filter, which Plots_history to fetch.
     */
    where: Plots_historyWhereUniqueInput
  }

  /**
   * Plots_history findFirst
   */
  export type Plots_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * Filter, which Plots_history to fetch.
     */
    where?: Plots_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Plots_histories to fetch.
     */
    orderBy?: Plots_historyOrderByWithRelationInput | Plots_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Plots_histories.
     */
    cursor?: Plots_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Plots_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Plots_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Plots_histories.
     */
    distinct?: Plots_historyScalarFieldEnum | Plots_historyScalarFieldEnum[]
  }

  /**
   * Plots_history findFirstOrThrow
   */
  export type Plots_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * Filter, which Plots_history to fetch.
     */
    where?: Plots_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Plots_histories to fetch.
     */
    orderBy?: Plots_historyOrderByWithRelationInput | Plots_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Plots_histories.
     */
    cursor?: Plots_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Plots_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Plots_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Plots_histories.
     */
    distinct?: Plots_historyScalarFieldEnum | Plots_historyScalarFieldEnum[]
  }

  /**
   * Plots_history findMany
   */
  export type Plots_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * Filter, which Plots_histories to fetch.
     */
    where?: Plots_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Plots_histories to fetch.
     */
    orderBy?: Plots_historyOrderByWithRelationInput | Plots_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Plots_histories.
     */
    cursor?: Plots_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Plots_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Plots_histories.
     */
    skip?: number
    distinct?: Plots_historyScalarFieldEnum | Plots_historyScalarFieldEnum[]
  }

  /**
   * Plots_history create
   */
  export type Plots_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * The data needed to create a Plots_history.
     */
    data: XOR<Plots_historyCreateInput, Plots_historyUncheckedCreateInput>
  }

  /**
   * Plots_history createMany
   */
  export type Plots_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Plots_histories.
     */
    data: Plots_historyCreateManyInput | Plots_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Plots_history createManyAndReturn
   */
  export type Plots_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Plots_histories.
     */
    data: Plots_historyCreateManyInput | Plots_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Plots_history update
   */
  export type Plots_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * The data needed to update a Plots_history.
     */
    data: XOR<Plots_historyUpdateInput, Plots_historyUncheckedUpdateInput>
    /**
     * Choose, which Plots_history to update.
     */
    where: Plots_historyWhereUniqueInput
  }

  /**
   * Plots_history updateMany
   */
  export type Plots_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Plots_histories.
     */
    data: XOR<Plots_historyUpdateManyMutationInput, Plots_historyUncheckedUpdateManyInput>
    /**
     * Filter which Plots_histories to update
     */
    where?: Plots_historyWhereInput
  }

  /**
   * Plots_history upsert
   */
  export type Plots_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * The filter to search for the Plots_history to update in case it exists.
     */
    where: Plots_historyWhereUniqueInput
    /**
     * In case the Plots_history found by the `where` argument doesn't exist, create a new Plots_history with this data.
     */
    create: XOR<Plots_historyCreateInput, Plots_historyUncheckedCreateInput>
    /**
     * In case the Plots_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Plots_historyUpdateInput, Plots_historyUncheckedUpdateInput>
  }

  /**
   * Plots_history delete
   */
  export type Plots_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
    /**
     * Filter which Plots_history to delete.
     */
    where: Plots_historyWhereUniqueInput
  }

  /**
   * Plots_history deleteMany
   */
  export type Plots_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Plots_histories to delete
     */
    where?: Plots_historyWhereInput
  }

  /**
   * Plots_history without action
   */
  export type Plots_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Plots_history
     */
    select?: Plots_historySelect<ExtArgs> | null
  }


  /**
   * Model Price
   */

  export type AggregatePrice = {
    _count: PriceCountAggregateOutputType | null
    _avg: PriceAvgAggregateOutputType | null
    _sum: PriceSumAggregateOutputType | null
    _min: PriceMinAggregateOutputType | null
    _max: PriceMaxAggregateOutputType | null
  }

  export type PriceAvgAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
  }

  export type PriceSumAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
  }

  export type PriceMinAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    date: string | null
    property_type: string | null
    plot_size: string | null
    building_size: string | null
    total_floor: string | null
    building_size_sq: string | null
    shop_size: string | null
    office_size: string | null
    apartment_size: string | null
    warehouse_size: string | null
    total_bed: string | null
    payment_mode: string | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PriceMaxAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    date: string | null
    property_type: string | null
    plot_size: string | null
    building_size: string | null
    total_floor: string | null
    building_size_sq: string | null
    shop_size: string | null
    office_size: string | null
    apartment_size: string | null
    warehouse_size: string | null
    total_bed: string | null
    payment_mode: string | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PriceCountAggregateOutputType = {
    id: number
    commercial_id: number
    date: number
    property_type: number
    plot_size: number
    building_size: number
    total_floor: number
    building_size_sq: number
    shop_size: number
    office_size: number
    apartment_size: number
    warehouse_size: number
    total_bed: number
    payment_mode: number
    price: number
    rent: number
    total_price: number
    installment_period: number
    down_payment: number
    possession_amount: number
    remarks: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PriceAvgAggregateInputType = {
    id?: true
    commercial_id?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
  }

  export type PriceSumAggregateInputType = {
    id?: true
    commercial_id?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
  }

  export type PriceMinAggregateInputType = {
    id?: true
    commercial_id?: true
    date?: true
    property_type?: true
    plot_size?: true
    building_size?: true
    total_floor?: true
    building_size_sq?: true
    shop_size?: true
    office_size?: true
    apartment_size?: true
    warehouse_size?: true
    total_bed?: true
    payment_mode?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PriceMaxAggregateInputType = {
    id?: true
    commercial_id?: true
    date?: true
    property_type?: true
    plot_size?: true
    building_size?: true
    total_floor?: true
    building_size_sq?: true
    shop_size?: true
    office_size?: true
    apartment_size?: true
    warehouse_size?: true
    total_bed?: true
    payment_mode?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PriceCountAggregateInputType = {
    id?: true
    commercial_id?: true
    date?: true
    property_type?: true
    plot_size?: true
    building_size?: true
    total_floor?: true
    building_size_sq?: true
    shop_size?: true
    office_size?: true
    apartment_size?: true
    warehouse_size?: true
    total_bed?: true
    payment_mode?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PriceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Price to aggregate.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Prices
    **/
    _count?: true | PriceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PriceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PriceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PriceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PriceMaxAggregateInputType
  }

  export type GetPriceAggregateType<T extends PriceAggregateArgs> = {
        [P in keyof T & keyof AggregatePrice]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrice[P]>
      : GetScalarType<T[P], AggregatePrice[P]>
  }




  export type PriceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PriceWhereInput
    orderBy?: PriceOrderByWithAggregationInput | PriceOrderByWithAggregationInput[]
    by: PriceScalarFieldEnum[] | PriceScalarFieldEnum
    having?: PriceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PriceCountAggregateInputType | true
    _avg?: PriceAvgAggregateInputType
    _sum?: PriceSumAggregateInputType
    _min?: PriceMinAggregateInputType
    _max?: PriceMaxAggregateInputType
  }

  export type PriceGroupByOutputType = {
    id: number
    commercial_id: number
    date: string | null
    property_type: string | null
    plot_size: string | null
    building_size: string | null
    total_floor: string | null
    building_size_sq: string | null
    shop_size: string | null
    office_size: string | null
    apartment_size: string | null
    warehouse_size: string | null
    total_bed: string | null
    payment_mode: string | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
    remarks: string | null
    createdAt: Date
    updatedAt: Date
    _count: PriceCountAggregateOutputType | null
    _avg: PriceAvgAggregateOutputType | null
    _sum: PriceSumAggregateOutputType | null
    _min: PriceMinAggregateOutputType | null
    _max: PriceMaxAggregateOutputType | null
  }

  type GetPriceGroupByPayload<T extends PriceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PriceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PriceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PriceGroupByOutputType[P]>
            : GetScalarType<T[P], PriceGroupByOutputType[P]>
        }
      >
    >


  export type PriceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    commercial_id?: boolean
    date?: boolean
    property_type?: boolean
    plot_size?: boolean
    building_size?: boolean
    total_floor?: boolean
    building_size_sq?: boolean
    shop_size?: boolean
    office_size?: boolean
    apartment_size?: boolean
    warehouse_size?: boolean
    total_bed?: boolean
    payment_mode?: boolean
    price?: boolean
    rent?: boolean
    total_price?: boolean
    installment_period?: boolean
    down_payment?: boolean
    possession_amount?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    commercial?: boolean | CommercialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type PriceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    commercial_id?: boolean
    date?: boolean
    property_type?: boolean
    plot_size?: boolean
    building_size?: boolean
    total_floor?: boolean
    building_size_sq?: boolean
    shop_size?: boolean
    office_size?: boolean
    apartment_size?: boolean
    warehouse_size?: boolean
    total_bed?: boolean
    payment_mode?: boolean
    price?: boolean
    rent?: boolean
    total_price?: boolean
    installment_period?: boolean
    down_payment?: boolean
    possession_amount?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    commercial?: boolean | CommercialDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["price"]>

  export type PriceSelectScalar = {
    id?: boolean
    commercial_id?: boolean
    date?: boolean
    property_type?: boolean
    plot_size?: boolean
    building_size?: boolean
    total_floor?: boolean
    building_size_sq?: boolean
    shop_size?: boolean
    office_size?: boolean
    apartment_size?: boolean
    warehouse_size?: boolean
    total_bed?: boolean
    payment_mode?: boolean
    price?: boolean
    rent?: boolean
    total_price?: boolean
    installment_period?: boolean
    down_payment?: boolean
    possession_amount?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PriceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    commercial?: boolean | CommercialDefaultArgs<ExtArgs>
  }
  export type PriceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    commercial?: boolean | CommercialDefaultArgs<ExtArgs>
  }

  export type $PricePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Price"
    objects: {
      commercial: Prisma.$CommercialPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      commercial_id: number
      date: string | null
      property_type: string | null
      plot_size: string | null
      building_size: string | null
      total_floor: string | null
      building_size_sq: string | null
      shop_size: string | null
      office_size: string | null
      apartment_size: string | null
      warehouse_size: string | null
      total_bed: string | null
      payment_mode: string | null
      price: number | null
      rent: number | null
      total_price: number | null
      installment_period: number | null
      down_payment: number | null
      possession_amount: number | null
      remarks: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["price"]>
    composites: {}
  }

  type PriceGetPayload<S extends boolean | null | undefined | PriceDefaultArgs> = $Result.GetResult<Prisma.$PricePayload, S>

  type PriceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PriceFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PriceCountAggregateInputType | true
    }

  export interface PriceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Price'], meta: { name: 'Price' } }
    /**
     * Find zero or one Price that matches the filter.
     * @param {PriceFindUniqueArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PriceFindUniqueArgs>(args: SelectSubset<T, PriceFindUniqueArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Price that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PriceFindUniqueOrThrowArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PriceFindUniqueOrThrowArgs>(args: SelectSubset<T, PriceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Price that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindFirstArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PriceFindFirstArgs>(args?: SelectSubset<T, PriceFindFirstArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Price that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindFirstOrThrowArgs} args - Arguments to find a Price
     * @example
     * // Get one Price
     * const price = await prisma.price.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PriceFindFirstOrThrowArgs>(args?: SelectSubset<T, PriceFindFirstOrThrowArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Prices that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Prices
     * const prices = await prisma.price.findMany()
     * 
     * // Get first 10 Prices
     * const prices = await prisma.price.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const priceWithIdOnly = await prisma.price.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PriceFindManyArgs>(args?: SelectSubset<T, PriceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Price.
     * @param {PriceCreateArgs} args - Arguments to create a Price.
     * @example
     * // Create one Price
     * const Price = await prisma.price.create({
     *   data: {
     *     // ... data to create a Price
     *   }
     * })
     * 
     */
    create<T extends PriceCreateArgs>(args: SelectSubset<T, PriceCreateArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Prices.
     * @param {PriceCreateManyArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const price = await prisma.price.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PriceCreateManyArgs>(args?: SelectSubset<T, PriceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Prices and returns the data saved in the database.
     * @param {PriceCreateManyAndReturnArgs} args - Arguments to create many Prices.
     * @example
     * // Create many Prices
     * const price = await prisma.price.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Prices and only return the `id`
     * const priceWithIdOnly = await prisma.price.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PriceCreateManyAndReturnArgs>(args?: SelectSubset<T, PriceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Price.
     * @param {PriceDeleteArgs} args - Arguments to delete one Price.
     * @example
     * // Delete one Price
     * const Price = await prisma.price.delete({
     *   where: {
     *     // ... filter to delete one Price
     *   }
     * })
     * 
     */
    delete<T extends PriceDeleteArgs>(args: SelectSubset<T, PriceDeleteArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Price.
     * @param {PriceUpdateArgs} args - Arguments to update one Price.
     * @example
     * // Update one Price
     * const price = await prisma.price.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PriceUpdateArgs>(args: SelectSubset<T, PriceUpdateArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Prices.
     * @param {PriceDeleteManyArgs} args - Arguments to filter Prices to delete.
     * @example
     * // Delete a few Prices
     * const { count } = await prisma.price.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PriceDeleteManyArgs>(args?: SelectSubset<T, PriceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Prices
     * const price = await prisma.price.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PriceUpdateManyArgs>(args: SelectSubset<T, PriceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Price.
     * @param {PriceUpsertArgs} args - Arguments to update or create a Price.
     * @example
     * // Update or create a Price
     * const price = await prisma.price.upsert({
     *   create: {
     *     // ... data to create a Price
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Price we want to update
     *   }
     * })
     */
    upsert<T extends PriceUpsertArgs>(args: SelectSubset<T, PriceUpsertArgs<ExtArgs>>): Prisma__PriceClient<$Result.GetResult<Prisma.$PricePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Prices.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceCountArgs} args - Arguments to filter Prices to count.
     * @example
     * // Count the number of Prices
     * const count = await prisma.price.count({
     *   where: {
     *     // ... the filter for the Prices we want to count
     *   }
     * })
    **/
    count<T extends PriceCountArgs>(
      args?: Subset<T, PriceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PriceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Price.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PriceAggregateArgs>(args: Subset<T, PriceAggregateArgs>): Prisma.PrismaPromise<GetPriceAggregateType<T>>

    /**
     * Group by Price.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PriceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PriceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PriceGroupByArgs['orderBy'] }
        : { orderBy?: PriceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PriceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPriceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Price model
   */
  readonly fields: PriceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Price.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PriceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    commercial<T extends CommercialDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CommercialDefaultArgs<ExtArgs>>): Prisma__CommercialClient<$Result.GetResult<Prisma.$CommercialPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Price model
   */ 
  interface PriceFieldRefs {
    readonly id: FieldRef<"Price", 'Int'>
    readonly commercial_id: FieldRef<"Price", 'Int'>
    readonly date: FieldRef<"Price", 'String'>
    readonly property_type: FieldRef<"Price", 'String'>
    readonly plot_size: FieldRef<"Price", 'String'>
    readonly building_size: FieldRef<"Price", 'String'>
    readonly total_floor: FieldRef<"Price", 'String'>
    readonly building_size_sq: FieldRef<"Price", 'String'>
    readonly shop_size: FieldRef<"Price", 'String'>
    readonly office_size: FieldRef<"Price", 'String'>
    readonly apartment_size: FieldRef<"Price", 'String'>
    readonly warehouse_size: FieldRef<"Price", 'String'>
    readonly total_bed: FieldRef<"Price", 'String'>
    readonly payment_mode: FieldRef<"Price", 'String'>
    readonly price: FieldRef<"Price", 'Int'>
    readonly rent: FieldRef<"Price", 'Int'>
    readonly total_price: FieldRef<"Price", 'Int'>
    readonly installment_period: FieldRef<"Price", 'Int'>
    readonly down_payment: FieldRef<"Price", 'Int'>
    readonly possession_amount: FieldRef<"Price", 'Int'>
    readonly remarks: FieldRef<"Price", 'String'>
    readonly createdAt: FieldRef<"Price", 'DateTime'>
    readonly updatedAt: FieldRef<"Price", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Price findUnique
   */
  export type PriceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price findUniqueOrThrow
   */
  export type PriceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price findFirst
   */
  export type PriceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prices.
     */
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price findFirstOrThrow
   */
  export type PriceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Price to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Prices.
     */
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price findMany
   */
  export type PriceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter, which Prices to fetch.
     */
    where?: PriceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Prices to fetch.
     */
    orderBy?: PriceOrderByWithRelationInput | PriceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Prices.
     */
    cursor?: PriceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Prices from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Prices.
     */
    skip?: number
    distinct?: PriceScalarFieldEnum | PriceScalarFieldEnum[]
  }

  /**
   * Price create
   */
  export type PriceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The data needed to create a Price.
     */
    data: XOR<PriceCreateInput, PriceUncheckedCreateInput>
  }

  /**
   * Price createMany
   */
  export type PriceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Prices.
     */
    data: PriceCreateManyInput | PriceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Price createManyAndReturn
   */
  export type PriceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Prices.
     */
    data: PriceCreateManyInput | PriceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Price update
   */
  export type PriceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The data needed to update a Price.
     */
    data: XOR<PriceUpdateInput, PriceUncheckedUpdateInput>
    /**
     * Choose, which Price to update.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price updateMany
   */
  export type PriceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Prices.
     */
    data: XOR<PriceUpdateManyMutationInput, PriceUncheckedUpdateManyInput>
    /**
     * Filter which Prices to update
     */
    where?: PriceWhereInput
  }

  /**
   * Price upsert
   */
  export type PriceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * The filter to search for the Price to update in case it exists.
     */
    where: PriceWhereUniqueInput
    /**
     * In case the Price found by the `where` argument doesn't exist, create a new Price with this data.
     */
    create: XOR<PriceCreateInput, PriceUncheckedCreateInput>
    /**
     * In case the Price was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PriceUpdateInput, PriceUncheckedUpdateInput>
  }

  /**
   * Price delete
   */
  export type PriceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
    /**
     * Filter which Price to delete.
     */
    where: PriceWhereUniqueInput
  }

  /**
   * Price deleteMany
   */
  export type PriceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Prices to delete
     */
    where?: PriceWhereInput
  }

  /**
   * Price without action
   */
  export type PriceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price
     */
    select?: PriceSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PriceInclude<ExtArgs> | null
  }


  /**
   * Model Price_history
   */

  export type AggregatePrice_history = {
    _count: Price_historyCountAggregateOutputType | null
    _avg: Price_historyAvgAggregateOutputType | null
    _sum: Price_historySumAggregateOutputType | null
    _min: Price_historyMinAggregateOutputType | null
    _max: Price_historyMaxAggregateOutputType | null
  }

  export type Price_historyAvgAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    price_id: number | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
  }

  export type Price_historySumAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    price_id: number | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
  }

  export type Price_historyMinAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    price_id: number | null
    date: string | null
    property_type: string | null
    plot_size: string | null
    building_size: string | null
    total_floor: string | null
    building_size_sq: string | null
    shop_size: string | null
    office_size: string | null
    apartment_size: string | null
    warehouse_size: string | null
    total_bed: string | null
    payment_mode: string | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Price_historyMaxAggregateOutputType = {
    id: number | null
    commercial_id: number | null
    price_id: number | null
    date: string | null
    property_type: string | null
    plot_size: string | null
    building_size: string | null
    total_floor: string | null
    building_size_sq: string | null
    shop_size: string | null
    office_size: string | null
    apartment_size: string | null
    warehouse_size: string | null
    total_bed: string | null
    payment_mode: string | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
    remarks: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type Price_historyCountAggregateOutputType = {
    id: number
    commercial_id: number
    price_id: number
    date: number
    property_type: number
    plot_size: number
    building_size: number
    total_floor: number
    building_size_sq: number
    shop_size: number
    office_size: number
    apartment_size: number
    warehouse_size: number
    total_bed: number
    payment_mode: number
    price: number
    rent: number
    total_price: number
    installment_period: number
    down_payment: number
    possession_amount: number
    remarks: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type Price_historyAvgAggregateInputType = {
    id?: true
    commercial_id?: true
    price_id?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
  }

  export type Price_historySumAggregateInputType = {
    id?: true
    commercial_id?: true
    price_id?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
  }

  export type Price_historyMinAggregateInputType = {
    id?: true
    commercial_id?: true
    price_id?: true
    date?: true
    property_type?: true
    plot_size?: true
    building_size?: true
    total_floor?: true
    building_size_sq?: true
    shop_size?: true
    office_size?: true
    apartment_size?: true
    warehouse_size?: true
    total_bed?: true
    payment_mode?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Price_historyMaxAggregateInputType = {
    id?: true
    commercial_id?: true
    price_id?: true
    date?: true
    property_type?: true
    plot_size?: true
    building_size?: true
    total_floor?: true
    building_size_sq?: true
    shop_size?: true
    office_size?: true
    apartment_size?: true
    warehouse_size?: true
    total_bed?: true
    payment_mode?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
  }

  export type Price_historyCountAggregateInputType = {
    id?: true
    commercial_id?: true
    price_id?: true
    date?: true
    property_type?: true
    plot_size?: true
    building_size?: true
    total_floor?: true
    building_size_sq?: true
    shop_size?: true
    office_size?: true
    apartment_size?: true
    warehouse_size?: true
    total_bed?: true
    payment_mode?: true
    price?: true
    rent?: true
    total_price?: true
    installment_period?: true
    down_payment?: true
    possession_amount?: true
    remarks?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type Price_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Price_history to aggregate.
     */
    where?: Price_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Price_histories to fetch.
     */
    orderBy?: Price_historyOrderByWithRelationInput | Price_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Price_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Price_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Price_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Price_histories
    **/
    _count?: true | Price_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Price_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Price_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Price_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Price_historyMaxAggregateInputType
  }

  export type GetPrice_historyAggregateType<T extends Price_historyAggregateArgs> = {
        [P in keyof T & keyof AggregatePrice_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePrice_history[P]>
      : GetScalarType<T[P], AggregatePrice_history[P]>
  }




  export type Price_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Price_historyWhereInput
    orderBy?: Price_historyOrderByWithAggregationInput | Price_historyOrderByWithAggregationInput[]
    by: Price_historyScalarFieldEnum[] | Price_historyScalarFieldEnum
    having?: Price_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Price_historyCountAggregateInputType | true
    _avg?: Price_historyAvgAggregateInputType
    _sum?: Price_historySumAggregateInputType
    _min?: Price_historyMinAggregateInputType
    _max?: Price_historyMaxAggregateInputType
  }

  export type Price_historyGroupByOutputType = {
    id: number
    commercial_id: number
    price_id: number
    date: string | null
    property_type: string | null
    plot_size: string | null
    building_size: string | null
    total_floor: string | null
    building_size_sq: string | null
    shop_size: string | null
    office_size: string | null
    apartment_size: string | null
    warehouse_size: string | null
    total_bed: string | null
    payment_mode: string | null
    price: number | null
    rent: number | null
    total_price: number | null
    installment_period: number | null
    down_payment: number | null
    possession_amount: number | null
    remarks: string | null
    createdAt: Date
    updatedAt: Date
    _count: Price_historyCountAggregateOutputType | null
    _avg: Price_historyAvgAggregateOutputType | null
    _sum: Price_historySumAggregateOutputType | null
    _min: Price_historyMinAggregateOutputType | null
    _max: Price_historyMaxAggregateOutputType | null
  }

  type GetPrice_historyGroupByPayload<T extends Price_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Price_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Price_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Price_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Price_historyGroupByOutputType[P]>
        }
      >
    >


  export type Price_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    commercial_id?: boolean
    price_id?: boolean
    date?: boolean
    property_type?: boolean
    plot_size?: boolean
    building_size?: boolean
    total_floor?: boolean
    building_size_sq?: boolean
    shop_size?: boolean
    office_size?: boolean
    apartment_size?: boolean
    warehouse_size?: boolean
    total_bed?: boolean
    payment_mode?: boolean
    price?: boolean
    rent?: boolean
    total_price?: boolean
    installment_period?: boolean
    down_payment?: boolean
    possession_amount?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["price_history"]>

  export type Price_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    commercial_id?: boolean
    price_id?: boolean
    date?: boolean
    property_type?: boolean
    plot_size?: boolean
    building_size?: boolean
    total_floor?: boolean
    building_size_sq?: boolean
    shop_size?: boolean
    office_size?: boolean
    apartment_size?: boolean
    warehouse_size?: boolean
    total_bed?: boolean
    payment_mode?: boolean
    price?: boolean
    rent?: boolean
    total_price?: boolean
    installment_period?: boolean
    down_payment?: boolean
    possession_amount?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["price_history"]>

  export type Price_historySelectScalar = {
    id?: boolean
    commercial_id?: boolean
    price_id?: boolean
    date?: boolean
    property_type?: boolean
    plot_size?: boolean
    building_size?: boolean
    total_floor?: boolean
    building_size_sq?: boolean
    shop_size?: boolean
    office_size?: boolean
    apartment_size?: boolean
    warehouse_size?: boolean
    total_bed?: boolean
    payment_mode?: boolean
    price?: boolean
    rent?: boolean
    total_price?: boolean
    installment_period?: boolean
    down_payment?: boolean
    possession_amount?: boolean
    remarks?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }


  export type $Price_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Price_history"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      commercial_id: number
      price_id: number
      date: string | null
      property_type: string | null
      plot_size: string | null
      building_size: string | null
      total_floor: string | null
      building_size_sq: string | null
      shop_size: string | null
      office_size: string | null
      apartment_size: string | null
      warehouse_size: string | null
      total_bed: string | null
      payment_mode: string | null
      price: number | null
      rent: number | null
      total_price: number | null
      installment_period: number | null
      down_payment: number | null
      possession_amount: number | null
      remarks: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["price_history"]>
    composites: {}
  }

  type Price_historyGetPayload<S extends boolean | null | undefined | Price_historyDefaultArgs> = $Result.GetResult<Prisma.$Price_historyPayload, S>

  type Price_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Price_historyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Price_historyCountAggregateInputType | true
    }

  export interface Price_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Price_history'], meta: { name: 'Price_history' } }
    /**
     * Find zero or one Price_history that matches the filter.
     * @param {Price_historyFindUniqueArgs} args - Arguments to find a Price_history
     * @example
     * // Get one Price_history
     * const price_history = await prisma.price_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Price_historyFindUniqueArgs>(args: SelectSubset<T, Price_historyFindUniqueArgs<ExtArgs>>): Prisma__Price_historyClient<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Price_history that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Price_historyFindUniqueOrThrowArgs} args - Arguments to find a Price_history
     * @example
     * // Get one Price_history
     * const price_history = await prisma.price_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Price_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, Price_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Price_historyClient<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Price_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Price_historyFindFirstArgs} args - Arguments to find a Price_history
     * @example
     * // Get one Price_history
     * const price_history = await prisma.price_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Price_historyFindFirstArgs>(args?: SelectSubset<T, Price_historyFindFirstArgs<ExtArgs>>): Prisma__Price_historyClient<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Price_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Price_historyFindFirstOrThrowArgs} args - Arguments to find a Price_history
     * @example
     * // Get one Price_history
     * const price_history = await prisma.price_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Price_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, Price_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__Price_historyClient<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Price_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Price_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Price_histories
     * const price_histories = await prisma.price_history.findMany()
     * 
     * // Get first 10 Price_histories
     * const price_histories = await prisma.price_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const price_historyWithIdOnly = await prisma.price_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends Price_historyFindManyArgs>(args?: SelectSubset<T, Price_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Price_history.
     * @param {Price_historyCreateArgs} args - Arguments to create a Price_history.
     * @example
     * // Create one Price_history
     * const Price_history = await prisma.price_history.create({
     *   data: {
     *     // ... data to create a Price_history
     *   }
     * })
     * 
     */
    create<T extends Price_historyCreateArgs>(args: SelectSubset<T, Price_historyCreateArgs<ExtArgs>>): Prisma__Price_historyClient<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Price_histories.
     * @param {Price_historyCreateManyArgs} args - Arguments to create many Price_histories.
     * @example
     * // Create many Price_histories
     * const price_history = await prisma.price_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Price_historyCreateManyArgs>(args?: SelectSubset<T, Price_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Price_histories and returns the data saved in the database.
     * @param {Price_historyCreateManyAndReturnArgs} args - Arguments to create many Price_histories.
     * @example
     * // Create many Price_histories
     * const price_history = await prisma.price_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Price_histories and only return the `id`
     * const price_historyWithIdOnly = await prisma.price_history.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends Price_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, Price_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "createManyAndReturn">>

    /**
     * Delete a Price_history.
     * @param {Price_historyDeleteArgs} args - Arguments to delete one Price_history.
     * @example
     * // Delete one Price_history
     * const Price_history = await prisma.price_history.delete({
     *   where: {
     *     // ... filter to delete one Price_history
     *   }
     * })
     * 
     */
    delete<T extends Price_historyDeleteArgs>(args: SelectSubset<T, Price_historyDeleteArgs<ExtArgs>>): Prisma__Price_historyClient<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Price_history.
     * @param {Price_historyUpdateArgs} args - Arguments to update one Price_history.
     * @example
     * // Update one Price_history
     * const price_history = await prisma.price_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Price_historyUpdateArgs>(args: SelectSubset<T, Price_historyUpdateArgs<ExtArgs>>): Prisma__Price_historyClient<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Price_histories.
     * @param {Price_historyDeleteManyArgs} args - Arguments to filter Price_histories to delete.
     * @example
     * // Delete a few Price_histories
     * const { count } = await prisma.price_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Price_historyDeleteManyArgs>(args?: SelectSubset<T, Price_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Price_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Price_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Price_histories
     * const price_history = await prisma.price_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Price_historyUpdateManyArgs>(args: SelectSubset<T, Price_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Price_history.
     * @param {Price_historyUpsertArgs} args - Arguments to update or create a Price_history.
     * @example
     * // Update or create a Price_history
     * const price_history = await prisma.price_history.upsert({
     *   create: {
     *     // ... data to create a Price_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Price_history we want to update
     *   }
     * })
     */
    upsert<T extends Price_historyUpsertArgs>(args: SelectSubset<T, Price_historyUpsertArgs<ExtArgs>>): Prisma__Price_historyClient<$Result.GetResult<Prisma.$Price_historyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Price_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Price_historyCountArgs} args - Arguments to filter Price_histories to count.
     * @example
     * // Count the number of Price_histories
     * const count = await prisma.price_history.count({
     *   where: {
     *     // ... the filter for the Price_histories we want to count
     *   }
     * })
    **/
    count<T extends Price_historyCountArgs>(
      args?: Subset<T, Price_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Price_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Price_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Price_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Price_historyAggregateArgs>(args: Subset<T, Price_historyAggregateArgs>): Prisma.PrismaPromise<GetPrice_historyAggregateType<T>>

    /**
     * Group by Price_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Price_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Price_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Price_historyGroupByArgs['orderBy'] }
        : { orderBy?: Price_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Price_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPrice_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Price_history model
   */
  readonly fields: Price_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Price_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Price_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Price_history model
   */ 
  interface Price_historyFieldRefs {
    readonly id: FieldRef<"Price_history", 'Int'>
    readonly commercial_id: FieldRef<"Price_history", 'Int'>
    readonly price_id: FieldRef<"Price_history", 'Int'>
    readonly date: FieldRef<"Price_history", 'String'>
    readonly property_type: FieldRef<"Price_history", 'String'>
    readonly plot_size: FieldRef<"Price_history", 'String'>
    readonly building_size: FieldRef<"Price_history", 'String'>
    readonly total_floor: FieldRef<"Price_history", 'String'>
    readonly building_size_sq: FieldRef<"Price_history", 'String'>
    readonly shop_size: FieldRef<"Price_history", 'String'>
    readonly office_size: FieldRef<"Price_history", 'String'>
    readonly apartment_size: FieldRef<"Price_history", 'String'>
    readonly warehouse_size: FieldRef<"Price_history", 'String'>
    readonly total_bed: FieldRef<"Price_history", 'String'>
    readonly payment_mode: FieldRef<"Price_history", 'String'>
    readonly price: FieldRef<"Price_history", 'Int'>
    readonly rent: FieldRef<"Price_history", 'Int'>
    readonly total_price: FieldRef<"Price_history", 'Int'>
    readonly installment_period: FieldRef<"Price_history", 'Int'>
    readonly down_payment: FieldRef<"Price_history", 'Int'>
    readonly possession_amount: FieldRef<"Price_history", 'Int'>
    readonly remarks: FieldRef<"Price_history", 'String'>
    readonly createdAt: FieldRef<"Price_history", 'DateTime'>
    readonly updatedAt: FieldRef<"Price_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Price_history findUnique
   */
  export type Price_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * Filter, which Price_history to fetch.
     */
    where: Price_historyWhereUniqueInput
  }

  /**
   * Price_history findUniqueOrThrow
   */
  export type Price_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * Filter, which Price_history to fetch.
     */
    where: Price_historyWhereUniqueInput
  }

  /**
   * Price_history findFirst
   */
  export type Price_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * Filter, which Price_history to fetch.
     */
    where?: Price_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Price_histories to fetch.
     */
    orderBy?: Price_historyOrderByWithRelationInput | Price_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Price_histories.
     */
    cursor?: Price_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Price_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Price_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Price_histories.
     */
    distinct?: Price_historyScalarFieldEnum | Price_historyScalarFieldEnum[]
  }

  /**
   * Price_history findFirstOrThrow
   */
  export type Price_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * Filter, which Price_history to fetch.
     */
    where?: Price_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Price_histories to fetch.
     */
    orderBy?: Price_historyOrderByWithRelationInput | Price_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Price_histories.
     */
    cursor?: Price_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Price_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Price_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Price_histories.
     */
    distinct?: Price_historyScalarFieldEnum | Price_historyScalarFieldEnum[]
  }

  /**
   * Price_history findMany
   */
  export type Price_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * Filter, which Price_histories to fetch.
     */
    where?: Price_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Price_histories to fetch.
     */
    orderBy?: Price_historyOrderByWithRelationInput | Price_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Price_histories.
     */
    cursor?: Price_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Price_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Price_histories.
     */
    skip?: number
    distinct?: Price_historyScalarFieldEnum | Price_historyScalarFieldEnum[]
  }

  /**
   * Price_history create
   */
  export type Price_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * The data needed to create a Price_history.
     */
    data: XOR<Price_historyCreateInput, Price_historyUncheckedCreateInput>
  }

  /**
   * Price_history createMany
   */
  export type Price_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Price_histories.
     */
    data: Price_historyCreateManyInput | Price_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Price_history createManyAndReturn
   */
  export type Price_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Price_histories.
     */
    data: Price_historyCreateManyInput | Price_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Price_history update
   */
  export type Price_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * The data needed to update a Price_history.
     */
    data: XOR<Price_historyUpdateInput, Price_historyUncheckedUpdateInput>
    /**
     * Choose, which Price_history to update.
     */
    where: Price_historyWhereUniqueInput
  }

  /**
   * Price_history updateMany
   */
  export type Price_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Price_histories.
     */
    data: XOR<Price_historyUpdateManyMutationInput, Price_historyUncheckedUpdateManyInput>
    /**
     * Filter which Price_histories to update
     */
    where?: Price_historyWhereInput
  }

  /**
   * Price_history upsert
   */
  export type Price_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * The filter to search for the Price_history to update in case it exists.
     */
    where: Price_historyWhereUniqueInput
    /**
     * In case the Price_history found by the `where` argument doesn't exist, create a new Price_history with this data.
     */
    create: XOR<Price_historyCreateInput, Price_historyUncheckedCreateInput>
    /**
     * In case the Price_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Price_historyUpdateInput, Price_historyUncheckedUpdateInput>
  }

  /**
   * Price_history delete
   */
  export type Price_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
    /**
     * Filter which Price_history to delete.
     */
    where: Price_historyWhereUniqueInput
  }

  /**
   * Price_history deleteMany
   */
  export type Price_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Price_histories to delete
     */
    where?: Price_historyWhereInput
  }

  /**
   * Price_history without action
   */
  export type Price_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Price_history
     */
    select?: Price_historySelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    contact: 'contact',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const BuildingsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    city: 'city',
    status: 'status',
    is_centrally_air_conditioned: 'is_centrally_air_conditioned',
    has_security: 'has_security',
    has_escalators: 'has_escalators',
    has_food_court: 'has_food_court',
    has_entertainment_area: 'has_entertainment_area',
    has_none: 'has_none',
    type_mixed_use: 'type_mixed_use',
    type_retail: 'type_retail',
    type_offices: 'type_offices',
    type_apartments: 'type_apartments',
    type_other: 'type_other',
    zone: 'zone',
    area: 'area',
    address: 'address',
    plot_size: 'plot_size',
    construction_area: 'construction_area',
    construction_year: 'construction_year',
    launch_year: 'launch_year',
    builder_name: 'builder_name',
    building_rank: 'building_rank',
    total_floors: 'total_floors',
    parking_floors: 'parking_floors',
    apartment_floors: 'apartment_floors',
    apartments_count: 'apartments_count',
    apartments_studio: 'apartments_studio',
    apartments_has_type_1_bed: 'apartments_has_type_1_bed',
    apartments_has_type_2_bed: 'apartments_has_type_2_bed',
    apartments_has_type_3_bed: 'apartments_has_type_3_bed',
    apartments_has_type_4_bed: 'apartments_has_type_4_bed',
    apartments_has_type_5_bed: 'apartments_has_type_5_bed',
    apartments_has_type_duplex: 'apartments_has_type_duplex',
    apartments_has_type_penthouse: 'apartments_has_type_penthouse',
    apartments_has_servant_quarter: 'apartments_has_servant_quarter',
    has_furnished: 'has_furnished',
    has_semi_furnished: 'has_semi_furnished',
    has_service_apartments: 'has_service_apartments',
    has_hotel_suites_apartments: 'has_hotel_suites_apartments',
    apartments_maintenance_fee: 'apartments_maintenance_fee',
    retail_floors_count: 'retail_floors_count',
    retail_floors_shops_count: 'retail_floors_shops_count',
    retail_floors_maintenance_fee: 'retail_floors_maintenance_fee',
    retail_floors_brands: 'retail_floors_brands',
    has_fashion_health: 'has_fashion_health',
    has_electronics_appliancecs: 'has_electronics_appliancecs',
    has_home_living: 'has_home_living',
    has_restaurants_courts: 'has_restaurants_courts',
    has_bakery_ice: 'has_bakery_ice',
    has_grocery_supermarkets: 'has_grocery_supermarkets',
    has_banks_atm: 'has_banks_atm',
    has_real_estate: 'has_real_estate',
    has_labs_pharmacies: 'has_labs_pharmacies',
    has_play_fitness: 'has_play_fitness',
    has_swimming_pool: 'has_swimming_pool',
    has_cinema: 'has_cinema',
    office_floors_count: 'office_floors_count',
    offices_count: 'offices_count',
    office_maintenance_fee: 'office_maintenance_fee',
    survey_date: 'survey_date',
    surveyor_name: 'surveyor_name',
    building_survery_remarks: 'building_survery_remarks',
    building_draft: 'building_draft',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type BuildingsScalarFieldEnum = (typeof BuildingsScalarFieldEnum)[keyof typeof BuildingsScalarFieldEnum]


  export const Buildings_historyScalarFieldEnum: {
    id: 'id',
    building_id: 'building_id',
    name: 'name',
    city: 'city',
    status: 'status',
    is_centrally_air_conditioned: 'is_centrally_air_conditioned',
    has_security: 'has_security',
    has_escalators: 'has_escalators',
    has_food_court: 'has_food_court',
    has_entertainment_area: 'has_entertainment_area',
    has_none: 'has_none',
    type_mixed_use: 'type_mixed_use',
    type_retail: 'type_retail',
    type_offices: 'type_offices',
    type_apartments: 'type_apartments',
    type_other: 'type_other',
    zone: 'zone',
    area: 'area',
    address: 'address',
    plot_size: 'plot_size',
    construction_area: 'construction_area',
    construction_year: 'construction_year',
    launch_year: 'launch_year',
    builder_name: 'builder_name',
    building_rank: 'building_rank',
    total_floors: 'total_floors',
    parking_floors: 'parking_floors',
    apartment_floors: 'apartment_floors',
    apartments_count: 'apartments_count',
    apartments_studio: 'apartments_studio',
    apartments_has_type_1_bed: 'apartments_has_type_1_bed',
    apartments_has_type_2_bed: 'apartments_has_type_2_bed',
    apartments_has_type_3_bed: 'apartments_has_type_3_bed',
    apartments_has_type_4_bed: 'apartments_has_type_4_bed',
    apartments_has_type_5_bed: 'apartments_has_type_5_bed',
    apartments_has_type_duplex: 'apartments_has_type_duplex',
    apartments_has_type_penthouse: 'apartments_has_type_penthouse',
    apartments_has_servant_quarter: 'apartments_has_servant_quarter',
    has_furnished: 'has_furnished',
    has_semi_furnished: 'has_semi_furnished',
    has_service_apartments: 'has_service_apartments',
    has_hotel_suites_apartments: 'has_hotel_suites_apartments',
    apartments_maintenance_fee: 'apartments_maintenance_fee',
    retail_floors_count: 'retail_floors_count',
    retail_floors_shops_count: 'retail_floors_shops_count',
    retail_floors_maintenance_fee: 'retail_floors_maintenance_fee',
    retail_floors_brands: 'retail_floors_brands',
    has_fashion_health: 'has_fashion_health',
    has_electronics_appliancecs: 'has_electronics_appliancecs',
    has_home_living: 'has_home_living',
    has_restaurants_courts: 'has_restaurants_courts',
    has_bakery_ice: 'has_bakery_ice',
    has_grocery_supermarkets: 'has_grocery_supermarkets',
    has_banks_atm: 'has_banks_atm',
    has_real_estate: 'has_real_estate',
    has_labs_pharmacies: 'has_labs_pharmacies',
    has_play_fitness: 'has_play_fitness',
    has_swimming_pool: 'has_swimming_pool',
    has_cinema: 'has_cinema',
    office_floors_count: 'office_floors_count',
    offices_count: 'offices_count',
    office_maintenance_fee: 'office_maintenance_fee',
    survey_date: 'survey_date',
    surveyor_name: 'surveyor_name',
    building_survery_remarks: 'building_survery_remarks',
    building_draft: 'building_draft',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Buildings_historyScalarFieldEnum = (typeof Buildings_historyScalarFieldEnum)[keyof typeof Buildings_historyScalarFieldEnum]


  export const FloorsScalarFieldEnum: {
    id: 'id',
    building_id: 'building_id',
    floor_no: 'floor_no',
    floor_type: 'floor_type',
    unit_type: 'unit_type',
    floor_apartments_studio: 'floor_apartments_studio',
    floor_apartments_1_bed: 'floor_apartments_1_bed',
    floor_apartments_2_bed: 'floor_apartments_2_bed',
    floor_apartments_3_bed: 'floor_apartments_3_bed',
    floor_apartments_4_bed: 'floor_apartments_4_bed',
    floor_apartments_5_bed: 'floor_apartments_5_bed',
    floor_apartments_duplex: 'floor_apartments_duplex',
    floor_apartments_penthouse: 'floor_apartments_penthouse',
    floor_has_furnished: 'floor_has_furnished',
    floor_has_semi_furnished: 'floor_has_semi_furnished',
    floor_has_service_apartments: 'floor_has_service_apartments',
    floor_has_hotel_suites_apartments: 'floor_has_hotel_suites_apartments',
    occupancy: 'occupancy',
    size_min: 'size_min',
    size_max: 'size_max',
    avg_sale_price: 'avg_sale_price',
    avg_monthly_rent: 'avg_monthly_rent',
    instalment_plan: 'instalment_plan',
    instalment_period: 'instalment_period',
    down_payment_amount: 'down_payment_amount',
    instalment_amount: 'instalment_amount',
    possession_amount: 'possession_amount',
    date: 'date',
    remarks: 'remarks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type FloorsScalarFieldEnum = (typeof FloorsScalarFieldEnum)[keyof typeof FloorsScalarFieldEnum]


  export const Floors_historyScalarFieldEnum: {
    id: 'id',
    building_id: 'building_id',
    floor_id: 'floor_id',
    floor_no: 'floor_no',
    floor_type: 'floor_type',
    unit_type: 'unit_type',
    floor_apartments_studio: 'floor_apartments_studio',
    floor_apartments_1_bed: 'floor_apartments_1_bed',
    floor_apartments_2_bed: 'floor_apartments_2_bed',
    floor_apartments_3_bed: 'floor_apartments_3_bed',
    floor_apartments_4_bed: 'floor_apartments_4_bed',
    floor_apartments_5_bed: 'floor_apartments_5_bed',
    floor_apartments_duplex: 'floor_apartments_duplex',
    floor_apartments_penthouse: 'floor_apartments_penthouse',
    floor_has_furnished: 'floor_has_furnished',
    floor_has_semi_furnished: 'floor_has_semi_furnished',
    floor_has_service_apartments: 'floor_has_service_apartments',
    floor_has_hotel_suites_apartments: 'floor_has_hotel_suites_apartments',
    occupancy: 'occupancy',
    size_min: 'size_min',
    size_max: 'size_max',
    avg_sale_price: 'avg_sale_price',
    avg_monthly_rent: 'avg_monthly_rent',
    instalment_plan: 'instalment_plan',
    instalment_period: 'instalment_period',
    down_payment_amount: 'down_payment_amount',
    instalment_amount: 'instalment_amount',
    possession_amount: 'possession_amount',
    date: 'date',
    remarks: 'remarks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Floors_historyScalarFieldEnum = (typeof Floors_historyScalarFieldEnum)[keyof typeof Floors_historyScalarFieldEnum]


  export const SocietiesScalarFieldEnum: {
    id: 'id',
    survey_date: 'survey_date',
    city: 'city',
    type: 'type',
    name: 'name',
    zone: 'zone',
    address: 'address',
    blocks: 'blocks',
    phase: 'phase',
    grade: 'grade',
    occupancy: 'occupancy',
    area: 'area',
    population: 'population',
    launch_year: 'launch_year',
    total_plots_residential: 'total_plots_residential',
    plot_sizes_residential: 'plot_sizes_residential',
    plot_sizes_residential_87_5: 'plot_sizes_residential_87_5',
    plot_sizes_residential_125: 'plot_sizes_residential_125',
    plot_sizes_residential_200: 'plot_sizes_residential_200',
    plot_sizes_residential_250: 'plot_sizes_residential_250',
    plot_sizes_residential_300: 'plot_sizes_residential_300',
    plot_sizes_residential_400: 'plot_sizes_residential_400',
    plot_sizes_residential_500: 'plot_sizes_residential_500',
    plot_sizes_residential_600: 'plot_sizes_residential_600',
    plot_sizes_residential_800: 'plot_sizes_residential_800',
    plot_sizes_residential_1000: 'plot_sizes_residential_1000',
    plot_sizes_residential_2000: 'plot_sizes_residential_2000',
    total_plots_commercial: 'total_plots_commercial',
    plot_sizes_commercial: 'plot_sizes_commercial',
    plot_sizes_commercial_87_5: 'plot_sizes_commercial_87_5',
    plot_sizes_commercial_100: 'plot_sizes_commercial_100',
    plot_sizes_commercial_125: 'plot_sizes_commercial_125',
    plot_sizes_commercial_200: 'plot_sizes_commercial_200',
    plot_sizes_commercial_250: 'plot_sizes_commercial_250',
    plot_sizes_commercial_500: 'plot_sizes_commercial_500',
    plot_sizes_commercial_1000: 'plot_sizes_commercial_1000',
    plot_sizes_commercial_2000: 'plot_sizes_commercial_2000',
    total_apartments: 'total_apartments',
    societies_apartment_size: 'societies_apartment_size',
    apartment_studio: 'apartment_studio',
    apartment_one_bad: 'apartment_one_bad',
    apartment_two_bad: 'apartment_two_bad',
    apartment_three_bad: 'apartment_three_bad',
    apartment_four_bad: 'apartment_four_bad',
    apartment_five_bad: 'apartment_five_bad',
    apartment_penthouse: 'apartment_penthouse',
    apartment_duplex: 'apartment_duplex',
    plot_size: 'plot_size',
    plot_price: 'plot_price',
    vilas_size: 'vilas_size',
    vilas_price: 'vilas_price',
    vilas_monthly_rent: 'vilas_monthly_rent',
    commercial_plot_size: 'commercial_plot_size',
    commercial_plot_price: 'commercial_plot_price',
    apartment_size: 'apartment_size',
    min_apartments_price: 'min_apartments_price',
    max_apartments_price: 'max_apartments_price',
    min_apartments_monthly_rent: 'min_apartments_monthly_rent',
    max_apartments_monthly_rent: 'max_apartments_monthly_rent',
    payment_terms: 'payment_terms',
    instalment_total_amount: 'instalment_total_amount',
    instalment_down_payment: 'instalment_down_payment',
    instalment_possession_Amount: 'instalment_possession_Amount',
    instalment_period: 'instalment_period',
    features_type_parks: 'features_type_parks',
    features_type_school: 'features_type_school',
    features_type_university: 'features_type_university',
    features_type_hospital: 'features_type_hospital',
    features_type_commercial_market: 'features_type_commercial_market',
    features_type_zoo: 'features_type_zoo',
    features_type_food_arena: 'features_type_food_arena',
    features_type_college: 'features_type_college',
    features_type_graveyard: 'features_type_graveyard',
    features_type_grid_station: 'features_type_grid_station',
    features_type_masjid: 'features_type_masjid',
    features_type_community_club: 'features_type_community_club',
    features_type_gated_community: 'features_type_gated_community',
    utilities_type_underground_electrification: 'utilities_type_underground_electrification',
    utilities_type_gas: 'utilities_type_gas',
    utilities_type_water: 'utilities_type_water',
    utilities_type_utilities_electricity: 'utilities_type_utilities_electricity',
    utilities_type_drainage: 'utilities_type_drainage',
    developer_name: 'developer_name',
    contact_no: 'contact_no',
    survery_remarks: 'survery_remarks',
    imagePath: 'imagePath',
    societies_draft: 'societies_draft',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type SocietiesScalarFieldEnum = (typeof SocietiesScalarFieldEnum)[keyof typeof SocietiesScalarFieldEnum]


  export const Societies_historyScalarFieldEnum: {
    id: 'id',
    society_id: 'society_id',
    survey_date: 'survey_date',
    city: 'city',
    type: 'type',
    name: 'name',
    zone: 'zone',
    address: 'address',
    blocks: 'blocks',
    phase: 'phase',
    grade: 'grade',
    occupancy: 'occupancy',
    area: 'area',
    population: 'population',
    launch_year: 'launch_year',
    total_plots_residential: 'total_plots_residential',
    plot_sizes_residential: 'plot_sizes_residential',
    plot_sizes_residential_87_5: 'plot_sizes_residential_87_5',
    plot_sizes_residential_125: 'plot_sizes_residential_125',
    plot_sizes_residential_200: 'plot_sizes_residential_200',
    plot_sizes_residential_250: 'plot_sizes_residential_250',
    plot_sizes_residential_300: 'plot_sizes_residential_300',
    plot_sizes_residential_400: 'plot_sizes_residential_400',
    plot_sizes_residential_500: 'plot_sizes_residential_500',
    plot_sizes_residential_600: 'plot_sizes_residential_600',
    plot_sizes_residential_800: 'plot_sizes_residential_800',
    plot_sizes_residential_1000: 'plot_sizes_residential_1000',
    plot_sizes_residential_2000: 'plot_sizes_residential_2000',
    total_plots_commercial: 'total_plots_commercial',
    plot_sizes_commercial: 'plot_sizes_commercial',
    plot_sizes_commercial_87_5: 'plot_sizes_commercial_87_5',
    plot_sizes_commercial_100: 'plot_sizes_commercial_100',
    plot_sizes_commercial_125: 'plot_sizes_commercial_125',
    plot_sizes_commercial_200: 'plot_sizes_commercial_200',
    plot_sizes_commercial_250: 'plot_sizes_commercial_250',
    plot_sizes_commercial_500: 'plot_sizes_commercial_500',
    plot_sizes_commercial_1000: 'plot_sizes_commercial_1000',
    plot_sizes_commercial_2000: 'plot_sizes_commercial_2000',
    total_apartments: 'total_apartments',
    societies_apartment_size: 'societies_apartment_size',
    apartment_studio: 'apartment_studio',
    apartment_one_bad: 'apartment_one_bad',
    apartment_two_bad: 'apartment_two_bad',
    apartment_three_bad: 'apartment_three_bad',
    apartment_four_bad: 'apartment_four_bad',
    apartment_five_bad: 'apartment_five_bad',
    apartment_penthouse: 'apartment_penthouse',
    apartment_duplex: 'apartment_duplex',
    plot_size: 'plot_size',
    plot_price: 'plot_price',
    vilas_size: 'vilas_size',
    vilas_price: 'vilas_price',
    vilas_monthly_rent: 'vilas_monthly_rent',
    commercial_plot_size: 'commercial_plot_size',
    commercial_plot_price: 'commercial_plot_price',
    apartment_size: 'apartment_size',
    min_apartments_price: 'min_apartments_price',
    max_apartments_price: 'max_apartments_price',
    min_apartments_monthly_rent: 'min_apartments_monthly_rent',
    max_apartments_monthly_rent: 'max_apartments_monthly_rent',
    payment_terms: 'payment_terms',
    instalment_total_amount: 'instalment_total_amount',
    instalment_down_payment: 'instalment_down_payment',
    instalment_possession_Amount: 'instalment_possession_Amount',
    instalment_period: 'instalment_period',
    features_type_parks: 'features_type_parks',
    features_type_school: 'features_type_school',
    features_type_university: 'features_type_university',
    features_type_hospital: 'features_type_hospital',
    features_type_commercial_market: 'features_type_commercial_market',
    features_type_zoo: 'features_type_zoo',
    features_type_food_arena: 'features_type_food_arena',
    features_type_college: 'features_type_college',
    features_type_graveyard: 'features_type_graveyard',
    features_type_grid_station: 'features_type_grid_station',
    features_type_masjid: 'features_type_masjid',
    features_type_community_club: 'features_type_community_club',
    features_type_gated_community: 'features_type_gated_community',
    utilities_type_underground_electrification: 'utilities_type_underground_electrification',
    utilities_type_gas: 'utilities_type_gas',
    utilities_type_water: 'utilities_type_water',
    utilities_type_utilities_electricity: 'utilities_type_utilities_electricity',
    utilities_type_drainage: 'utilities_type_drainage',
    developer_name: 'developer_name',
    contact_no: 'contact_no',
    survery_remarks: 'survery_remarks',
    imagePath: 'imagePath',
    societies_draft: 'societies_draft',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Societies_historyScalarFieldEnum = (typeof Societies_historyScalarFieldEnum)[keyof typeof Societies_historyScalarFieldEnum]


  export const CommercialScalarFieldEnum: {
    id: 'id',
    survey_date: 'survey_date',
    city: 'city',
    commercial_zone_name: 'commercial_zone_name',
    zone: 'zone',
    type: 'type',
    location: 'location',
    project_status: 'project_status',
    launch_year: 'launch_year',
    grade: 'grade',
    area: 'area',
    occupancy: 'occupancy',
    total_plots: 'total_plots',
    total_shops: 'total_shops',
    total_offices: 'total_offices',
    total_apartments: 'total_apartments',
    property_feature: 'property_feature',
    property_title: 'property_title',
    remarks: 'remarks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CommercialScalarFieldEnum = (typeof CommercialScalarFieldEnum)[keyof typeof CommercialScalarFieldEnum]


  export const Commercial_historyScalarFieldEnum: {
    id: 'id',
    commercial_id: 'commercial_id',
    survey_date: 'survey_date',
    city: 'city',
    commercial_zone_name: 'commercial_zone_name',
    zone: 'zone',
    type: 'type',
    location: 'location',
    project_status: 'project_status',
    launch_year: 'launch_year',
    grade: 'grade',
    area: 'area',
    occupancy: 'occupancy',
    total_plots: 'total_plots',
    total_shops: 'total_shops',
    total_offices: 'total_offices',
    total_apartments: 'total_apartments',
    property_feature: 'property_feature',
    property_title: 'property_title',
    remarks: 'remarks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Commercial_historyScalarFieldEnum = (typeof Commercial_historyScalarFieldEnum)[keyof typeof Commercial_historyScalarFieldEnum]


  export const HousesScalarFieldEnum: {
    id: 'id',
    society_id: 'society_id',
    type: 'type',
    size: 'size',
    price: 'price',
    direction: 'direction',
    is_corner: 'is_corner',
    condition: 'condition',
    floors: 'floors',
    has_basement: 'has_basement',
    construction_year: 'construction_year',
    remarks: 'remarks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HousesScalarFieldEnum = (typeof HousesScalarFieldEnum)[keyof typeof HousesScalarFieldEnum]


  export const PlotsScalarFieldEnum: {
    id: 'id',
    society_id: 'society_id',
    date: 'date',
    plot_type: 'plot_type',
    type: 'type',
    size: 'size',
    apartment_size: 'apartment_size',
    apartment_size_ft: 'apartment_size_ft',
    shop_size: 'shop_size',
    office_size: 'office_size',
    plot_price: 'plot_price',
    plot_rent: 'plot_rent',
    banglow_price: 'banglow_price',
    banglow_rent: 'banglow_rent',
    direction: 'direction',
    is_corner: 'is_corner',
    payment_mode: 'payment_mode',
    ins_total_price: 'ins_total_price',
    ins_down_payment: 'ins_down_payment',
    ins_possession_Amount: 'ins_possession_Amount',
    ins_period: 'ins_period',
    remarks: 'remarks',
    imagePath: 'imagePath',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PlotsScalarFieldEnum = (typeof PlotsScalarFieldEnum)[keyof typeof PlotsScalarFieldEnum]


  export const Plots_historyScalarFieldEnum: {
    id: 'id',
    society_id: 'society_id',
    plot_id: 'plot_id',
    date: 'date',
    plot_type: 'plot_type',
    type: 'type',
    size: 'size',
    apartment_size: 'apartment_size',
    apartment_size_ft: 'apartment_size_ft',
    shop_size: 'shop_size',
    office_size: 'office_size',
    plot_price: 'plot_price',
    plot_rent: 'plot_rent',
    banglow_price: 'banglow_price',
    banglow_rent: 'banglow_rent',
    direction: 'direction',
    is_corner: 'is_corner',
    payment_mode: 'payment_mode',
    ins_total_price: 'ins_total_price',
    ins_down_payment: 'ins_down_payment',
    ins_possession_Amount: 'ins_possession_Amount',
    ins_period: 'ins_period',
    remarks: 'remarks',
    imagePath: 'imagePath',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Plots_historyScalarFieldEnum = (typeof Plots_historyScalarFieldEnum)[keyof typeof Plots_historyScalarFieldEnum]


  export const PriceScalarFieldEnum: {
    id: 'id',
    commercial_id: 'commercial_id',
    date: 'date',
    property_type: 'property_type',
    plot_size: 'plot_size',
    building_size: 'building_size',
    total_floor: 'total_floor',
    building_size_sq: 'building_size_sq',
    shop_size: 'shop_size',
    office_size: 'office_size',
    apartment_size: 'apartment_size',
    warehouse_size: 'warehouse_size',
    total_bed: 'total_bed',
    payment_mode: 'payment_mode',
    price: 'price',
    rent: 'rent',
    total_price: 'total_price',
    installment_period: 'installment_period',
    down_payment: 'down_payment',
    possession_amount: 'possession_amount',
    remarks: 'remarks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PriceScalarFieldEnum = (typeof PriceScalarFieldEnum)[keyof typeof PriceScalarFieldEnum]


  export const Price_historyScalarFieldEnum: {
    id: 'id',
    commercial_id: 'commercial_id',
    price_id: 'price_id',
    date: 'date',
    property_type: 'property_type',
    plot_size: 'plot_size',
    building_size: 'building_size',
    total_floor: 'total_floor',
    building_size_sq: 'building_size_sq',
    shop_size: 'shop_size',
    office_size: 'office_size',
    apartment_size: 'apartment_size',
    warehouse_size: 'warehouse_size',
    total_bed: 'total_bed',
    payment_mode: 'payment_mode',
    price: 'price',
    rent: 'rent',
    total_price: 'total_price',
    installment_period: 'installment_period',
    down_payment: 'down_payment',
    possession_amount: 'possession_amount',
    remarks: 'remarks',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type Price_historyScalarFieldEnum = (typeof Price_historyScalarFieldEnum)[keyof typeof Price_historyScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: IntFilter<"User"> | number
    name?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    contact?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    contact?: StringNullableFilter<"User"> | string | null
    isActive?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _avg?: UserAvgOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
    _sum?: UserSumOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"User"> | number
    name?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    contact?: StringNullableWithAggregatesFilter<"User"> | string | null
    isActive?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type BuildingsWhereInput = {
    AND?: BuildingsWhereInput | BuildingsWhereInput[]
    OR?: BuildingsWhereInput[]
    NOT?: BuildingsWhereInput | BuildingsWhereInput[]
    id?: IntFilter<"Buildings"> | number
    name?: StringFilter<"Buildings"> | string
    city?: StringFilter<"Buildings"> | string
    status?: StringNullableFilter<"Buildings"> | string | null
    is_centrally_air_conditioned?: StringNullableFilter<"Buildings"> | string | null
    has_security?: StringNullableFilter<"Buildings"> | string | null
    has_escalators?: StringNullableFilter<"Buildings"> | string | null
    has_food_court?: StringNullableFilter<"Buildings"> | string | null
    has_entertainment_area?: StringNullableFilter<"Buildings"> | string | null
    has_none?: StringNullableFilter<"Buildings"> | string | null
    type_mixed_use?: StringNullableFilter<"Buildings"> | string | null
    type_retail?: StringNullableFilter<"Buildings"> | string | null
    type_offices?: StringNullableFilter<"Buildings"> | string | null
    type_apartments?: StringNullableFilter<"Buildings"> | string | null
    type_other?: StringNullableFilter<"Buildings"> | string | null
    zone?: StringNullableFilter<"Buildings"> | string | null
    area?: StringNullableFilter<"Buildings"> | string | null
    address?: StringNullableFilter<"Buildings"> | string | null
    plot_size?: IntNullableFilter<"Buildings"> | number | null
    construction_area?: IntNullableFilter<"Buildings"> | number | null
    construction_year?: IntNullableFilter<"Buildings"> | number | null
    launch_year?: IntNullableFilter<"Buildings"> | number | null
    builder_name?: StringNullableFilter<"Buildings"> | string | null
    building_rank?: StringNullableFilter<"Buildings"> | string | null
    total_floors?: IntNullableFilter<"Buildings"> | number | null
    parking_floors?: IntNullableFilter<"Buildings"> | number | null
    apartment_floors?: IntNullableFilter<"Buildings"> | number | null
    apartments_count?: IntNullableFilter<"Buildings"> | number | null
    apartments_studio?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_1_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_2_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_3_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_4_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_5_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_duplex?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_penthouse?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_servant_quarter?: StringNullableFilter<"Buildings"> | string | null
    has_furnished?: StringNullableFilter<"Buildings"> | string | null
    has_semi_furnished?: StringNullableFilter<"Buildings"> | string | null
    has_service_apartments?: StringNullableFilter<"Buildings"> | string | null
    has_hotel_suites_apartments?: StringNullableFilter<"Buildings"> | string | null
    apartments_maintenance_fee?: IntNullableFilter<"Buildings"> | number | null
    retail_floors_count?: IntNullableFilter<"Buildings"> | number | null
    retail_floors_shops_count?: IntNullableFilter<"Buildings"> | number | null
    retail_floors_maintenance_fee?: IntNullableFilter<"Buildings"> | number | null
    retail_floors_brands?: StringNullableFilter<"Buildings"> | string | null
    has_fashion_health?: StringNullableFilter<"Buildings"> | string | null
    has_electronics_appliancecs?: StringNullableFilter<"Buildings"> | string | null
    has_home_living?: StringNullableFilter<"Buildings"> | string | null
    has_restaurants_courts?: StringNullableFilter<"Buildings"> | string | null
    has_bakery_ice?: StringNullableFilter<"Buildings"> | string | null
    has_grocery_supermarkets?: StringNullableFilter<"Buildings"> | string | null
    has_banks_atm?: StringNullableFilter<"Buildings"> | string | null
    has_real_estate?: StringNullableFilter<"Buildings"> | string | null
    has_labs_pharmacies?: StringNullableFilter<"Buildings"> | string | null
    has_play_fitness?: StringNullableFilter<"Buildings"> | string | null
    has_swimming_pool?: StringNullableFilter<"Buildings"> | string | null
    has_cinema?: StringNullableFilter<"Buildings"> | string | null
    office_floors_count?: IntNullableFilter<"Buildings"> | number | null
    offices_count?: IntNullableFilter<"Buildings"> | number | null
    office_maintenance_fee?: IntNullableFilter<"Buildings"> | number | null
    survey_date?: StringNullableFilter<"Buildings"> | string | null
    surveyor_name?: StringNullableFilter<"Buildings"> | string | null
    building_survery_remarks?: StringNullableFilter<"Buildings"> | string | null
    building_draft?: StringNullableFilter<"Buildings"> | string | null
    createdAt?: DateTimeFilter<"Buildings"> | Date | string
    updatedAt?: DateTimeFilter<"Buildings"> | Date | string
    floors?: FloorsListRelationFilter
  }

  export type BuildingsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrderInput | SortOrder
    is_centrally_air_conditioned?: SortOrderInput | SortOrder
    has_security?: SortOrderInput | SortOrder
    has_escalators?: SortOrderInput | SortOrder
    has_food_court?: SortOrderInput | SortOrder
    has_entertainment_area?: SortOrderInput | SortOrder
    has_none?: SortOrderInput | SortOrder
    type_mixed_use?: SortOrderInput | SortOrder
    type_retail?: SortOrderInput | SortOrder
    type_offices?: SortOrderInput | SortOrder
    type_apartments?: SortOrderInput | SortOrder
    type_other?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    construction_area?: SortOrderInput | SortOrder
    construction_year?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    builder_name?: SortOrderInput | SortOrder
    building_rank?: SortOrderInput | SortOrder
    total_floors?: SortOrderInput | SortOrder
    parking_floors?: SortOrderInput | SortOrder
    apartment_floors?: SortOrderInput | SortOrder
    apartments_count?: SortOrderInput | SortOrder
    apartments_studio?: SortOrderInput | SortOrder
    apartments_has_type_1_bed?: SortOrderInput | SortOrder
    apartments_has_type_2_bed?: SortOrderInput | SortOrder
    apartments_has_type_3_bed?: SortOrderInput | SortOrder
    apartments_has_type_4_bed?: SortOrderInput | SortOrder
    apartments_has_type_5_bed?: SortOrderInput | SortOrder
    apartments_has_type_duplex?: SortOrderInput | SortOrder
    apartments_has_type_penthouse?: SortOrderInput | SortOrder
    apartments_has_servant_quarter?: SortOrderInput | SortOrder
    has_furnished?: SortOrderInput | SortOrder
    has_semi_furnished?: SortOrderInput | SortOrder
    has_service_apartments?: SortOrderInput | SortOrder
    has_hotel_suites_apartments?: SortOrderInput | SortOrder
    apartments_maintenance_fee?: SortOrderInput | SortOrder
    retail_floors_count?: SortOrderInput | SortOrder
    retail_floors_shops_count?: SortOrderInput | SortOrder
    retail_floors_maintenance_fee?: SortOrderInput | SortOrder
    retail_floors_brands?: SortOrderInput | SortOrder
    has_fashion_health?: SortOrderInput | SortOrder
    has_electronics_appliancecs?: SortOrderInput | SortOrder
    has_home_living?: SortOrderInput | SortOrder
    has_restaurants_courts?: SortOrderInput | SortOrder
    has_bakery_ice?: SortOrderInput | SortOrder
    has_grocery_supermarkets?: SortOrderInput | SortOrder
    has_banks_atm?: SortOrderInput | SortOrder
    has_real_estate?: SortOrderInput | SortOrder
    has_labs_pharmacies?: SortOrderInput | SortOrder
    has_play_fitness?: SortOrderInput | SortOrder
    has_swimming_pool?: SortOrderInput | SortOrder
    has_cinema?: SortOrderInput | SortOrder
    office_floors_count?: SortOrderInput | SortOrder
    offices_count?: SortOrderInput | SortOrder
    office_maintenance_fee?: SortOrderInput | SortOrder
    survey_date?: SortOrderInput | SortOrder
    surveyor_name?: SortOrderInput | SortOrder
    building_survery_remarks?: SortOrderInput | SortOrder
    building_draft?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    floors?: FloorsOrderByRelationAggregateInput
  }

  export type BuildingsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: BuildingsWhereInput | BuildingsWhereInput[]
    OR?: BuildingsWhereInput[]
    NOT?: BuildingsWhereInput | BuildingsWhereInput[]
    name?: StringFilter<"Buildings"> | string
    city?: StringFilter<"Buildings"> | string
    status?: StringNullableFilter<"Buildings"> | string | null
    is_centrally_air_conditioned?: StringNullableFilter<"Buildings"> | string | null
    has_security?: StringNullableFilter<"Buildings"> | string | null
    has_escalators?: StringNullableFilter<"Buildings"> | string | null
    has_food_court?: StringNullableFilter<"Buildings"> | string | null
    has_entertainment_area?: StringNullableFilter<"Buildings"> | string | null
    has_none?: StringNullableFilter<"Buildings"> | string | null
    type_mixed_use?: StringNullableFilter<"Buildings"> | string | null
    type_retail?: StringNullableFilter<"Buildings"> | string | null
    type_offices?: StringNullableFilter<"Buildings"> | string | null
    type_apartments?: StringNullableFilter<"Buildings"> | string | null
    type_other?: StringNullableFilter<"Buildings"> | string | null
    zone?: StringNullableFilter<"Buildings"> | string | null
    area?: StringNullableFilter<"Buildings"> | string | null
    address?: StringNullableFilter<"Buildings"> | string | null
    plot_size?: IntNullableFilter<"Buildings"> | number | null
    construction_area?: IntNullableFilter<"Buildings"> | number | null
    construction_year?: IntNullableFilter<"Buildings"> | number | null
    launch_year?: IntNullableFilter<"Buildings"> | number | null
    builder_name?: StringNullableFilter<"Buildings"> | string | null
    building_rank?: StringNullableFilter<"Buildings"> | string | null
    total_floors?: IntNullableFilter<"Buildings"> | number | null
    parking_floors?: IntNullableFilter<"Buildings"> | number | null
    apartment_floors?: IntNullableFilter<"Buildings"> | number | null
    apartments_count?: IntNullableFilter<"Buildings"> | number | null
    apartments_studio?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_1_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_2_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_3_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_4_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_5_bed?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_duplex?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_type_penthouse?: StringNullableFilter<"Buildings"> | string | null
    apartments_has_servant_quarter?: StringNullableFilter<"Buildings"> | string | null
    has_furnished?: StringNullableFilter<"Buildings"> | string | null
    has_semi_furnished?: StringNullableFilter<"Buildings"> | string | null
    has_service_apartments?: StringNullableFilter<"Buildings"> | string | null
    has_hotel_suites_apartments?: StringNullableFilter<"Buildings"> | string | null
    apartments_maintenance_fee?: IntNullableFilter<"Buildings"> | number | null
    retail_floors_count?: IntNullableFilter<"Buildings"> | number | null
    retail_floors_shops_count?: IntNullableFilter<"Buildings"> | number | null
    retail_floors_maintenance_fee?: IntNullableFilter<"Buildings"> | number | null
    retail_floors_brands?: StringNullableFilter<"Buildings"> | string | null
    has_fashion_health?: StringNullableFilter<"Buildings"> | string | null
    has_electronics_appliancecs?: StringNullableFilter<"Buildings"> | string | null
    has_home_living?: StringNullableFilter<"Buildings"> | string | null
    has_restaurants_courts?: StringNullableFilter<"Buildings"> | string | null
    has_bakery_ice?: StringNullableFilter<"Buildings"> | string | null
    has_grocery_supermarkets?: StringNullableFilter<"Buildings"> | string | null
    has_banks_atm?: StringNullableFilter<"Buildings"> | string | null
    has_real_estate?: StringNullableFilter<"Buildings"> | string | null
    has_labs_pharmacies?: StringNullableFilter<"Buildings"> | string | null
    has_play_fitness?: StringNullableFilter<"Buildings"> | string | null
    has_swimming_pool?: StringNullableFilter<"Buildings"> | string | null
    has_cinema?: StringNullableFilter<"Buildings"> | string | null
    office_floors_count?: IntNullableFilter<"Buildings"> | number | null
    offices_count?: IntNullableFilter<"Buildings"> | number | null
    office_maintenance_fee?: IntNullableFilter<"Buildings"> | number | null
    survey_date?: StringNullableFilter<"Buildings"> | string | null
    surveyor_name?: StringNullableFilter<"Buildings"> | string | null
    building_survery_remarks?: StringNullableFilter<"Buildings"> | string | null
    building_draft?: StringNullableFilter<"Buildings"> | string | null
    createdAt?: DateTimeFilter<"Buildings"> | Date | string
    updatedAt?: DateTimeFilter<"Buildings"> | Date | string
    floors?: FloorsListRelationFilter
  }, "id">

  export type BuildingsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrderInput | SortOrder
    is_centrally_air_conditioned?: SortOrderInput | SortOrder
    has_security?: SortOrderInput | SortOrder
    has_escalators?: SortOrderInput | SortOrder
    has_food_court?: SortOrderInput | SortOrder
    has_entertainment_area?: SortOrderInput | SortOrder
    has_none?: SortOrderInput | SortOrder
    type_mixed_use?: SortOrderInput | SortOrder
    type_retail?: SortOrderInput | SortOrder
    type_offices?: SortOrderInput | SortOrder
    type_apartments?: SortOrderInput | SortOrder
    type_other?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    construction_area?: SortOrderInput | SortOrder
    construction_year?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    builder_name?: SortOrderInput | SortOrder
    building_rank?: SortOrderInput | SortOrder
    total_floors?: SortOrderInput | SortOrder
    parking_floors?: SortOrderInput | SortOrder
    apartment_floors?: SortOrderInput | SortOrder
    apartments_count?: SortOrderInput | SortOrder
    apartments_studio?: SortOrderInput | SortOrder
    apartments_has_type_1_bed?: SortOrderInput | SortOrder
    apartments_has_type_2_bed?: SortOrderInput | SortOrder
    apartments_has_type_3_bed?: SortOrderInput | SortOrder
    apartments_has_type_4_bed?: SortOrderInput | SortOrder
    apartments_has_type_5_bed?: SortOrderInput | SortOrder
    apartments_has_type_duplex?: SortOrderInput | SortOrder
    apartments_has_type_penthouse?: SortOrderInput | SortOrder
    apartments_has_servant_quarter?: SortOrderInput | SortOrder
    has_furnished?: SortOrderInput | SortOrder
    has_semi_furnished?: SortOrderInput | SortOrder
    has_service_apartments?: SortOrderInput | SortOrder
    has_hotel_suites_apartments?: SortOrderInput | SortOrder
    apartments_maintenance_fee?: SortOrderInput | SortOrder
    retail_floors_count?: SortOrderInput | SortOrder
    retail_floors_shops_count?: SortOrderInput | SortOrder
    retail_floors_maintenance_fee?: SortOrderInput | SortOrder
    retail_floors_brands?: SortOrderInput | SortOrder
    has_fashion_health?: SortOrderInput | SortOrder
    has_electronics_appliancecs?: SortOrderInput | SortOrder
    has_home_living?: SortOrderInput | SortOrder
    has_restaurants_courts?: SortOrderInput | SortOrder
    has_bakery_ice?: SortOrderInput | SortOrder
    has_grocery_supermarkets?: SortOrderInput | SortOrder
    has_banks_atm?: SortOrderInput | SortOrder
    has_real_estate?: SortOrderInput | SortOrder
    has_labs_pharmacies?: SortOrderInput | SortOrder
    has_play_fitness?: SortOrderInput | SortOrder
    has_swimming_pool?: SortOrderInput | SortOrder
    has_cinema?: SortOrderInput | SortOrder
    office_floors_count?: SortOrderInput | SortOrder
    offices_count?: SortOrderInput | SortOrder
    office_maintenance_fee?: SortOrderInput | SortOrder
    survey_date?: SortOrderInput | SortOrder
    surveyor_name?: SortOrderInput | SortOrder
    building_survery_remarks?: SortOrderInput | SortOrder
    building_draft?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: BuildingsCountOrderByAggregateInput
    _avg?: BuildingsAvgOrderByAggregateInput
    _max?: BuildingsMaxOrderByAggregateInput
    _min?: BuildingsMinOrderByAggregateInput
    _sum?: BuildingsSumOrderByAggregateInput
  }

  export type BuildingsScalarWhereWithAggregatesInput = {
    AND?: BuildingsScalarWhereWithAggregatesInput | BuildingsScalarWhereWithAggregatesInput[]
    OR?: BuildingsScalarWhereWithAggregatesInput[]
    NOT?: BuildingsScalarWhereWithAggregatesInput | BuildingsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Buildings"> | number
    name?: StringWithAggregatesFilter<"Buildings"> | string
    city?: StringWithAggregatesFilter<"Buildings"> | string
    status?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    is_centrally_air_conditioned?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_security?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_escalators?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_food_court?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_entertainment_area?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_none?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    type_mixed_use?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    type_retail?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    type_offices?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    type_apartments?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    type_other?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    zone?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    area?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    address?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    plot_size?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    construction_area?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    construction_year?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    launch_year?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    builder_name?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    building_rank?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    total_floors?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    parking_floors?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    apartment_floors?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    apartments_count?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    apartments_studio?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_has_type_1_bed?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_has_type_2_bed?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_has_type_3_bed?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_has_type_4_bed?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_has_type_5_bed?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_has_type_duplex?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_has_type_penthouse?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_has_servant_quarter?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_furnished?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_semi_furnished?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_service_apartments?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_hotel_suites_apartments?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    apartments_maintenance_fee?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    retail_floors_count?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    retail_floors_shops_count?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    retail_floors_maintenance_fee?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    retail_floors_brands?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_fashion_health?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_electronics_appliancecs?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_home_living?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_restaurants_courts?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_bakery_ice?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_grocery_supermarkets?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_banks_atm?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_real_estate?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_labs_pharmacies?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_play_fitness?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_swimming_pool?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    has_cinema?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    office_floors_count?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    offices_count?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    office_maintenance_fee?: IntNullableWithAggregatesFilter<"Buildings"> | number | null
    survey_date?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    surveyor_name?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    building_survery_remarks?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    building_draft?: StringNullableWithAggregatesFilter<"Buildings"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Buildings"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Buildings"> | Date | string
  }

  export type Buildings_historyWhereInput = {
    AND?: Buildings_historyWhereInput | Buildings_historyWhereInput[]
    OR?: Buildings_historyWhereInput[]
    NOT?: Buildings_historyWhereInput | Buildings_historyWhereInput[]
    id?: IntFilter<"Buildings_history"> | number
    building_id?: IntFilter<"Buildings_history"> | number
    name?: StringFilter<"Buildings_history"> | string
    city?: StringFilter<"Buildings_history"> | string
    status?: StringNullableFilter<"Buildings_history"> | string | null
    is_centrally_air_conditioned?: StringNullableFilter<"Buildings_history"> | string | null
    has_security?: StringNullableFilter<"Buildings_history"> | string | null
    has_escalators?: StringNullableFilter<"Buildings_history"> | string | null
    has_food_court?: StringNullableFilter<"Buildings_history"> | string | null
    has_entertainment_area?: StringNullableFilter<"Buildings_history"> | string | null
    has_none?: StringNullableFilter<"Buildings_history"> | string | null
    type_mixed_use?: StringNullableFilter<"Buildings_history"> | string | null
    type_retail?: StringNullableFilter<"Buildings_history"> | string | null
    type_offices?: StringNullableFilter<"Buildings_history"> | string | null
    type_apartments?: StringNullableFilter<"Buildings_history"> | string | null
    type_other?: StringNullableFilter<"Buildings_history"> | string | null
    zone?: StringNullableFilter<"Buildings_history"> | string | null
    area?: StringNullableFilter<"Buildings_history"> | string | null
    address?: StringNullableFilter<"Buildings_history"> | string | null
    plot_size?: IntNullableFilter<"Buildings_history"> | number | null
    construction_area?: IntNullableFilter<"Buildings_history"> | number | null
    construction_year?: IntNullableFilter<"Buildings_history"> | number | null
    launch_year?: IntNullableFilter<"Buildings_history"> | number | null
    builder_name?: StringNullableFilter<"Buildings_history"> | string | null
    building_rank?: StringNullableFilter<"Buildings_history"> | string | null
    total_floors?: IntNullableFilter<"Buildings_history"> | number | null
    parking_floors?: IntNullableFilter<"Buildings_history"> | number | null
    apartment_floors?: IntNullableFilter<"Buildings_history"> | number | null
    apartments_count?: IntNullableFilter<"Buildings_history"> | number | null
    apartments_studio?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_1_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_2_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_3_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_4_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_5_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_duplex?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_penthouse?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_servant_quarter?: StringNullableFilter<"Buildings_history"> | string | null
    has_furnished?: StringNullableFilter<"Buildings_history"> | string | null
    has_semi_furnished?: StringNullableFilter<"Buildings_history"> | string | null
    has_service_apartments?: StringNullableFilter<"Buildings_history"> | string | null
    has_hotel_suites_apartments?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_maintenance_fee?: IntNullableFilter<"Buildings_history"> | number | null
    retail_floors_count?: IntNullableFilter<"Buildings_history"> | number | null
    retail_floors_shops_count?: IntNullableFilter<"Buildings_history"> | number | null
    retail_floors_maintenance_fee?: IntNullableFilter<"Buildings_history"> | number | null
    retail_floors_brands?: StringNullableFilter<"Buildings_history"> | string | null
    has_fashion_health?: StringNullableFilter<"Buildings_history"> | string | null
    has_electronics_appliancecs?: StringNullableFilter<"Buildings_history"> | string | null
    has_home_living?: StringNullableFilter<"Buildings_history"> | string | null
    has_restaurants_courts?: StringNullableFilter<"Buildings_history"> | string | null
    has_bakery_ice?: StringNullableFilter<"Buildings_history"> | string | null
    has_grocery_supermarkets?: StringNullableFilter<"Buildings_history"> | string | null
    has_banks_atm?: StringNullableFilter<"Buildings_history"> | string | null
    has_real_estate?: StringNullableFilter<"Buildings_history"> | string | null
    has_labs_pharmacies?: StringNullableFilter<"Buildings_history"> | string | null
    has_play_fitness?: StringNullableFilter<"Buildings_history"> | string | null
    has_swimming_pool?: StringNullableFilter<"Buildings_history"> | string | null
    has_cinema?: StringNullableFilter<"Buildings_history"> | string | null
    office_floors_count?: IntNullableFilter<"Buildings_history"> | number | null
    offices_count?: IntNullableFilter<"Buildings_history"> | number | null
    office_maintenance_fee?: IntNullableFilter<"Buildings_history"> | number | null
    survey_date?: StringNullableFilter<"Buildings_history"> | string | null
    surveyor_name?: StringNullableFilter<"Buildings_history"> | string | null
    building_survery_remarks?: StringNullableFilter<"Buildings_history"> | string | null
    building_draft?: StringNullableFilter<"Buildings_history"> | string | null
    createdAt?: DateTimeFilter<"Buildings_history"> | Date | string
    updatedAt?: DateTimeFilter<"Buildings_history"> | Date | string
  }

  export type Buildings_historyOrderByWithRelationInput = {
    id?: SortOrder
    building_id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrderInput | SortOrder
    is_centrally_air_conditioned?: SortOrderInput | SortOrder
    has_security?: SortOrderInput | SortOrder
    has_escalators?: SortOrderInput | SortOrder
    has_food_court?: SortOrderInput | SortOrder
    has_entertainment_area?: SortOrderInput | SortOrder
    has_none?: SortOrderInput | SortOrder
    type_mixed_use?: SortOrderInput | SortOrder
    type_retail?: SortOrderInput | SortOrder
    type_offices?: SortOrderInput | SortOrder
    type_apartments?: SortOrderInput | SortOrder
    type_other?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    construction_area?: SortOrderInput | SortOrder
    construction_year?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    builder_name?: SortOrderInput | SortOrder
    building_rank?: SortOrderInput | SortOrder
    total_floors?: SortOrderInput | SortOrder
    parking_floors?: SortOrderInput | SortOrder
    apartment_floors?: SortOrderInput | SortOrder
    apartments_count?: SortOrderInput | SortOrder
    apartments_studio?: SortOrderInput | SortOrder
    apartments_has_type_1_bed?: SortOrderInput | SortOrder
    apartments_has_type_2_bed?: SortOrderInput | SortOrder
    apartments_has_type_3_bed?: SortOrderInput | SortOrder
    apartments_has_type_4_bed?: SortOrderInput | SortOrder
    apartments_has_type_5_bed?: SortOrderInput | SortOrder
    apartments_has_type_duplex?: SortOrderInput | SortOrder
    apartments_has_type_penthouse?: SortOrderInput | SortOrder
    apartments_has_servant_quarter?: SortOrderInput | SortOrder
    has_furnished?: SortOrderInput | SortOrder
    has_semi_furnished?: SortOrderInput | SortOrder
    has_service_apartments?: SortOrderInput | SortOrder
    has_hotel_suites_apartments?: SortOrderInput | SortOrder
    apartments_maintenance_fee?: SortOrderInput | SortOrder
    retail_floors_count?: SortOrderInput | SortOrder
    retail_floors_shops_count?: SortOrderInput | SortOrder
    retail_floors_maintenance_fee?: SortOrderInput | SortOrder
    retail_floors_brands?: SortOrderInput | SortOrder
    has_fashion_health?: SortOrderInput | SortOrder
    has_electronics_appliancecs?: SortOrderInput | SortOrder
    has_home_living?: SortOrderInput | SortOrder
    has_restaurants_courts?: SortOrderInput | SortOrder
    has_bakery_ice?: SortOrderInput | SortOrder
    has_grocery_supermarkets?: SortOrderInput | SortOrder
    has_banks_atm?: SortOrderInput | SortOrder
    has_real_estate?: SortOrderInput | SortOrder
    has_labs_pharmacies?: SortOrderInput | SortOrder
    has_play_fitness?: SortOrderInput | SortOrder
    has_swimming_pool?: SortOrderInput | SortOrder
    has_cinema?: SortOrderInput | SortOrder
    office_floors_count?: SortOrderInput | SortOrder
    offices_count?: SortOrderInput | SortOrder
    office_maintenance_fee?: SortOrderInput | SortOrder
    survey_date?: SortOrderInput | SortOrder
    surveyor_name?: SortOrderInput | SortOrder
    building_survery_remarks?: SortOrderInput | SortOrder
    building_draft?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Buildings_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Buildings_historyWhereInput | Buildings_historyWhereInput[]
    OR?: Buildings_historyWhereInput[]
    NOT?: Buildings_historyWhereInput | Buildings_historyWhereInput[]
    building_id?: IntFilter<"Buildings_history"> | number
    name?: StringFilter<"Buildings_history"> | string
    city?: StringFilter<"Buildings_history"> | string
    status?: StringNullableFilter<"Buildings_history"> | string | null
    is_centrally_air_conditioned?: StringNullableFilter<"Buildings_history"> | string | null
    has_security?: StringNullableFilter<"Buildings_history"> | string | null
    has_escalators?: StringNullableFilter<"Buildings_history"> | string | null
    has_food_court?: StringNullableFilter<"Buildings_history"> | string | null
    has_entertainment_area?: StringNullableFilter<"Buildings_history"> | string | null
    has_none?: StringNullableFilter<"Buildings_history"> | string | null
    type_mixed_use?: StringNullableFilter<"Buildings_history"> | string | null
    type_retail?: StringNullableFilter<"Buildings_history"> | string | null
    type_offices?: StringNullableFilter<"Buildings_history"> | string | null
    type_apartments?: StringNullableFilter<"Buildings_history"> | string | null
    type_other?: StringNullableFilter<"Buildings_history"> | string | null
    zone?: StringNullableFilter<"Buildings_history"> | string | null
    area?: StringNullableFilter<"Buildings_history"> | string | null
    address?: StringNullableFilter<"Buildings_history"> | string | null
    plot_size?: IntNullableFilter<"Buildings_history"> | number | null
    construction_area?: IntNullableFilter<"Buildings_history"> | number | null
    construction_year?: IntNullableFilter<"Buildings_history"> | number | null
    launch_year?: IntNullableFilter<"Buildings_history"> | number | null
    builder_name?: StringNullableFilter<"Buildings_history"> | string | null
    building_rank?: StringNullableFilter<"Buildings_history"> | string | null
    total_floors?: IntNullableFilter<"Buildings_history"> | number | null
    parking_floors?: IntNullableFilter<"Buildings_history"> | number | null
    apartment_floors?: IntNullableFilter<"Buildings_history"> | number | null
    apartments_count?: IntNullableFilter<"Buildings_history"> | number | null
    apartments_studio?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_1_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_2_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_3_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_4_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_5_bed?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_duplex?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_type_penthouse?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_has_servant_quarter?: StringNullableFilter<"Buildings_history"> | string | null
    has_furnished?: StringNullableFilter<"Buildings_history"> | string | null
    has_semi_furnished?: StringNullableFilter<"Buildings_history"> | string | null
    has_service_apartments?: StringNullableFilter<"Buildings_history"> | string | null
    has_hotel_suites_apartments?: StringNullableFilter<"Buildings_history"> | string | null
    apartments_maintenance_fee?: IntNullableFilter<"Buildings_history"> | number | null
    retail_floors_count?: IntNullableFilter<"Buildings_history"> | number | null
    retail_floors_shops_count?: IntNullableFilter<"Buildings_history"> | number | null
    retail_floors_maintenance_fee?: IntNullableFilter<"Buildings_history"> | number | null
    retail_floors_brands?: StringNullableFilter<"Buildings_history"> | string | null
    has_fashion_health?: StringNullableFilter<"Buildings_history"> | string | null
    has_electronics_appliancecs?: StringNullableFilter<"Buildings_history"> | string | null
    has_home_living?: StringNullableFilter<"Buildings_history"> | string | null
    has_restaurants_courts?: StringNullableFilter<"Buildings_history"> | string | null
    has_bakery_ice?: StringNullableFilter<"Buildings_history"> | string | null
    has_grocery_supermarkets?: StringNullableFilter<"Buildings_history"> | string | null
    has_banks_atm?: StringNullableFilter<"Buildings_history"> | string | null
    has_real_estate?: StringNullableFilter<"Buildings_history"> | string | null
    has_labs_pharmacies?: StringNullableFilter<"Buildings_history"> | string | null
    has_play_fitness?: StringNullableFilter<"Buildings_history"> | string | null
    has_swimming_pool?: StringNullableFilter<"Buildings_history"> | string | null
    has_cinema?: StringNullableFilter<"Buildings_history"> | string | null
    office_floors_count?: IntNullableFilter<"Buildings_history"> | number | null
    offices_count?: IntNullableFilter<"Buildings_history"> | number | null
    office_maintenance_fee?: IntNullableFilter<"Buildings_history"> | number | null
    survey_date?: StringNullableFilter<"Buildings_history"> | string | null
    surveyor_name?: StringNullableFilter<"Buildings_history"> | string | null
    building_survery_remarks?: StringNullableFilter<"Buildings_history"> | string | null
    building_draft?: StringNullableFilter<"Buildings_history"> | string | null
    createdAt?: DateTimeFilter<"Buildings_history"> | Date | string
    updatedAt?: DateTimeFilter<"Buildings_history"> | Date | string
  }, "id">

  export type Buildings_historyOrderByWithAggregationInput = {
    id?: SortOrder
    building_id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrderInput | SortOrder
    is_centrally_air_conditioned?: SortOrderInput | SortOrder
    has_security?: SortOrderInput | SortOrder
    has_escalators?: SortOrderInput | SortOrder
    has_food_court?: SortOrderInput | SortOrder
    has_entertainment_area?: SortOrderInput | SortOrder
    has_none?: SortOrderInput | SortOrder
    type_mixed_use?: SortOrderInput | SortOrder
    type_retail?: SortOrderInput | SortOrder
    type_offices?: SortOrderInput | SortOrder
    type_apartments?: SortOrderInput | SortOrder
    type_other?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    construction_area?: SortOrderInput | SortOrder
    construction_year?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    builder_name?: SortOrderInput | SortOrder
    building_rank?: SortOrderInput | SortOrder
    total_floors?: SortOrderInput | SortOrder
    parking_floors?: SortOrderInput | SortOrder
    apartment_floors?: SortOrderInput | SortOrder
    apartments_count?: SortOrderInput | SortOrder
    apartments_studio?: SortOrderInput | SortOrder
    apartments_has_type_1_bed?: SortOrderInput | SortOrder
    apartments_has_type_2_bed?: SortOrderInput | SortOrder
    apartments_has_type_3_bed?: SortOrderInput | SortOrder
    apartments_has_type_4_bed?: SortOrderInput | SortOrder
    apartments_has_type_5_bed?: SortOrderInput | SortOrder
    apartments_has_type_duplex?: SortOrderInput | SortOrder
    apartments_has_type_penthouse?: SortOrderInput | SortOrder
    apartments_has_servant_quarter?: SortOrderInput | SortOrder
    has_furnished?: SortOrderInput | SortOrder
    has_semi_furnished?: SortOrderInput | SortOrder
    has_service_apartments?: SortOrderInput | SortOrder
    has_hotel_suites_apartments?: SortOrderInput | SortOrder
    apartments_maintenance_fee?: SortOrderInput | SortOrder
    retail_floors_count?: SortOrderInput | SortOrder
    retail_floors_shops_count?: SortOrderInput | SortOrder
    retail_floors_maintenance_fee?: SortOrderInput | SortOrder
    retail_floors_brands?: SortOrderInput | SortOrder
    has_fashion_health?: SortOrderInput | SortOrder
    has_electronics_appliancecs?: SortOrderInput | SortOrder
    has_home_living?: SortOrderInput | SortOrder
    has_restaurants_courts?: SortOrderInput | SortOrder
    has_bakery_ice?: SortOrderInput | SortOrder
    has_grocery_supermarkets?: SortOrderInput | SortOrder
    has_banks_atm?: SortOrderInput | SortOrder
    has_real_estate?: SortOrderInput | SortOrder
    has_labs_pharmacies?: SortOrderInput | SortOrder
    has_play_fitness?: SortOrderInput | SortOrder
    has_swimming_pool?: SortOrderInput | SortOrder
    has_cinema?: SortOrderInput | SortOrder
    office_floors_count?: SortOrderInput | SortOrder
    offices_count?: SortOrderInput | SortOrder
    office_maintenance_fee?: SortOrderInput | SortOrder
    survey_date?: SortOrderInput | SortOrder
    surveyor_name?: SortOrderInput | SortOrder
    building_survery_remarks?: SortOrderInput | SortOrder
    building_draft?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: Buildings_historyCountOrderByAggregateInput
    _avg?: Buildings_historyAvgOrderByAggregateInput
    _max?: Buildings_historyMaxOrderByAggregateInput
    _min?: Buildings_historyMinOrderByAggregateInput
    _sum?: Buildings_historySumOrderByAggregateInput
  }

  export type Buildings_historyScalarWhereWithAggregatesInput = {
    AND?: Buildings_historyScalarWhereWithAggregatesInput | Buildings_historyScalarWhereWithAggregatesInput[]
    OR?: Buildings_historyScalarWhereWithAggregatesInput[]
    NOT?: Buildings_historyScalarWhereWithAggregatesInput | Buildings_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Buildings_history"> | number
    building_id?: IntWithAggregatesFilter<"Buildings_history"> | number
    name?: StringWithAggregatesFilter<"Buildings_history"> | string
    city?: StringWithAggregatesFilter<"Buildings_history"> | string
    status?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    is_centrally_air_conditioned?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_security?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_escalators?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_food_court?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_entertainment_area?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_none?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    type_mixed_use?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    type_retail?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    type_offices?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    type_apartments?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    type_other?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    zone?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    area?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    address?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    plot_size?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    construction_area?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    construction_year?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    launch_year?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    builder_name?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    building_rank?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    total_floors?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    parking_floors?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    apartment_floors?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    apartments_count?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    apartments_studio?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_has_type_1_bed?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_has_type_2_bed?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_has_type_3_bed?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_has_type_4_bed?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_has_type_5_bed?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_has_type_duplex?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_has_type_penthouse?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_has_servant_quarter?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_furnished?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_semi_furnished?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_service_apartments?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_hotel_suites_apartments?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    apartments_maintenance_fee?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    retail_floors_count?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    retail_floors_shops_count?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    retail_floors_maintenance_fee?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    retail_floors_brands?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_fashion_health?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_electronics_appliancecs?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_home_living?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_restaurants_courts?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_bakery_ice?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_grocery_supermarkets?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_banks_atm?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_real_estate?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_labs_pharmacies?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_play_fitness?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_swimming_pool?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    has_cinema?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    office_floors_count?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    offices_count?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    office_maintenance_fee?: IntNullableWithAggregatesFilter<"Buildings_history"> | number | null
    survey_date?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    surveyor_name?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    building_survery_remarks?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    building_draft?: StringNullableWithAggregatesFilter<"Buildings_history"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Buildings_history"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Buildings_history"> | Date | string
  }

  export type FloorsWhereInput = {
    AND?: FloorsWhereInput | FloorsWhereInput[]
    OR?: FloorsWhereInput[]
    NOT?: FloorsWhereInput | FloorsWhereInput[]
    id?: IntFilter<"Floors"> | number
    building_id?: IntFilter<"Floors"> | number
    floor_no?: StringFilter<"Floors"> | string
    floor_type?: StringFilter<"Floors"> | string
    unit_type?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_studio?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_1_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_2_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_3_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_4_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_5_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_duplex?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_penthouse?: StringNullableFilter<"Floors"> | string | null
    floor_has_furnished?: StringNullableFilter<"Floors"> | string | null
    floor_has_semi_furnished?: StringNullableFilter<"Floors"> | string | null
    floor_has_service_apartments?: StringNullableFilter<"Floors"> | string | null
    floor_has_hotel_suites_apartments?: StringNullableFilter<"Floors"> | string | null
    occupancy?: IntNullableFilter<"Floors"> | number | null
    size_min?: IntNullableFilter<"Floors"> | number | null
    size_max?: IntNullableFilter<"Floors"> | number | null
    avg_sale_price?: IntNullableFilter<"Floors"> | number | null
    avg_monthly_rent?: IntNullableFilter<"Floors"> | number | null
    instalment_plan?: StringNullableFilter<"Floors"> | string | null
    instalment_period?: IntNullableFilter<"Floors"> | number | null
    down_payment_amount?: IntNullableFilter<"Floors"> | number | null
    instalment_amount?: IntNullableFilter<"Floors"> | number | null
    possession_amount?: IntNullableFilter<"Floors"> | number | null
    date?: StringNullableFilter<"Floors"> | string | null
    remarks?: StringNullableFilter<"Floors"> | string | null
    createdAt?: DateTimeFilter<"Floors"> | Date | string
    updatedAt?: DateTimeFilter<"Floors"> | Date | string
    buildings?: XOR<BuildingsScalarRelationFilter, BuildingsWhereInput>
  }

  export type FloorsOrderByWithRelationInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrderInput | SortOrder
    floor_apartments_studio?: SortOrderInput | SortOrder
    floor_apartments_1_bed?: SortOrderInput | SortOrder
    floor_apartments_2_bed?: SortOrderInput | SortOrder
    floor_apartments_3_bed?: SortOrderInput | SortOrder
    floor_apartments_4_bed?: SortOrderInput | SortOrder
    floor_apartments_5_bed?: SortOrderInput | SortOrder
    floor_apartments_duplex?: SortOrderInput | SortOrder
    floor_apartments_penthouse?: SortOrderInput | SortOrder
    floor_has_furnished?: SortOrderInput | SortOrder
    floor_has_semi_furnished?: SortOrderInput | SortOrder
    floor_has_service_apartments?: SortOrderInput | SortOrder
    floor_has_hotel_suites_apartments?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    size_min?: SortOrderInput | SortOrder
    size_max?: SortOrderInput | SortOrder
    avg_sale_price?: SortOrderInput | SortOrder
    avg_monthly_rent?: SortOrderInput | SortOrder
    instalment_plan?: SortOrderInput | SortOrder
    instalment_period?: SortOrderInput | SortOrder
    down_payment_amount?: SortOrderInput | SortOrder
    instalment_amount?: SortOrderInput | SortOrder
    possession_amount?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    buildings?: BuildingsOrderByWithRelationInput
  }

  export type FloorsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FloorsWhereInput | FloorsWhereInput[]
    OR?: FloorsWhereInput[]
    NOT?: FloorsWhereInput | FloorsWhereInput[]
    building_id?: IntFilter<"Floors"> | number
    floor_no?: StringFilter<"Floors"> | string
    floor_type?: StringFilter<"Floors"> | string
    unit_type?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_studio?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_1_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_2_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_3_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_4_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_5_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_duplex?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_penthouse?: StringNullableFilter<"Floors"> | string | null
    floor_has_furnished?: StringNullableFilter<"Floors"> | string | null
    floor_has_semi_furnished?: StringNullableFilter<"Floors"> | string | null
    floor_has_service_apartments?: StringNullableFilter<"Floors"> | string | null
    floor_has_hotel_suites_apartments?: StringNullableFilter<"Floors"> | string | null
    occupancy?: IntNullableFilter<"Floors"> | number | null
    size_min?: IntNullableFilter<"Floors"> | number | null
    size_max?: IntNullableFilter<"Floors"> | number | null
    avg_sale_price?: IntNullableFilter<"Floors"> | number | null
    avg_monthly_rent?: IntNullableFilter<"Floors"> | number | null
    instalment_plan?: StringNullableFilter<"Floors"> | string | null
    instalment_period?: IntNullableFilter<"Floors"> | number | null
    down_payment_amount?: IntNullableFilter<"Floors"> | number | null
    instalment_amount?: IntNullableFilter<"Floors"> | number | null
    possession_amount?: IntNullableFilter<"Floors"> | number | null
    date?: StringNullableFilter<"Floors"> | string | null
    remarks?: StringNullableFilter<"Floors"> | string | null
    createdAt?: DateTimeFilter<"Floors"> | Date | string
    updatedAt?: DateTimeFilter<"Floors"> | Date | string
    buildings?: XOR<BuildingsScalarRelationFilter, BuildingsWhereInput>
  }, "id">

  export type FloorsOrderByWithAggregationInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrderInput | SortOrder
    floor_apartments_studio?: SortOrderInput | SortOrder
    floor_apartments_1_bed?: SortOrderInput | SortOrder
    floor_apartments_2_bed?: SortOrderInput | SortOrder
    floor_apartments_3_bed?: SortOrderInput | SortOrder
    floor_apartments_4_bed?: SortOrderInput | SortOrder
    floor_apartments_5_bed?: SortOrderInput | SortOrder
    floor_apartments_duplex?: SortOrderInput | SortOrder
    floor_apartments_penthouse?: SortOrderInput | SortOrder
    floor_has_furnished?: SortOrderInput | SortOrder
    floor_has_semi_furnished?: SortOrderInput | SortOrder
    floor_has_service_apartments?: SortOrderInput | SortOrder
    floor_has_hotel_suites_apartments?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    size_min?: SortOrderInput | SortOrder
    size_max?: SortOrderInput | SortOrder
    avg_sale_price?: SortOrderInput | SortOrder
    avg_monthly_rent?: SortOrderInput | SortOrder
    instalment_plan?: SortOrderInput | SortOrder
    instalment_period?: SortOrderInput | SortOrder
    down_payment_amount?: SortOrderInput | SortOrder
    instalment_amount?: SortOrderInput | SortOrder
    possession_amount?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: FloorsCountOrderByAggregateInput
    _avg?: FloorsAvgOrderByAggregateInput
    _max?: FloorsMaxOrderByAggregateInput
    _min?: FloorsMinOrderByAggregateInput
    _sum?: FloorsSumOrderByAggregateInput
  }

  export type FloorsScalarWhereWithAggregatesInput = {
    AND?: FloorsScalarWhereWithAggregatesInput | FloorsScalarWhereWithAggregatesInput[]
    OR?: FloorsScalarWhereWithAggregatesInput[]
    NOT?: FloorsScalarWhereWithAggregatesInput | FloorsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Floors"> | number
    building_id?: IntWithAggregatesFilter<"Floors"> | number
    floor_no?: StringWithAggregatesFilter<"Floors"> | string
    floor_type?: StringWithAggregatesFilter<"Floors"> | string
    unit_type?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_apartments_studio?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_apartments_1_bed?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_apartments_2_bed?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_apartments_3_bed?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_apartments_4_bed?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_apartments_5_bed?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_apartments_duplex?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_apartments_penthouse?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_has_furnished?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_has_semi_furnished?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_has_service_apartments?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    floor_has_hotel_suites_apartments?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    occupancy?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    size_min?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    size_max?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    avg_sale_price?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    avg_monthly_rent?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    instalment_plan?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    instalment_period?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    down_payment_amount?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    instalment_amount?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    possession_amount?: IntNullableWithAggregatesFilter<"Floors"> | number | null
    date?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    remarks?: StringNullableWithAggregatesFilter<"Floors"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Floors"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Floors"> | Date | string
  }

  export type Floors_historyWhereInput = {
    AND?: Floors_historyWhereInput | Floors_historyWhereInput[]
    OR?: Floors_historyWhereInput[]
    NOT?: Floors_historyWhereInput | Floors_historyWhereInput[]
    id?: IntFilter<"Floors_history"> | number
    building_id?: IntFilter<"Floors_history"> | number
    floor_id?: IntFilter<"Floors_history"> | number
    floor_no?: StringFilter<"Floors_history"> | string
    floor_type?: StringFilter<"Floors_history"> | string
    unit_type?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_studio?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_1_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_2_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_3_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_4_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_5_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_duplex?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_penthouse?: StringNullableFilter<"Floors_history"> | string | null
    floor_has_furnished?: StringNullableFilter<"Floors_history"> | string | null
    floor_has_semi_furnished?: StringNullableFilter<"Floors_history"> | string | null
    floor_has_service_apartments?: StringNullableFilter<"Floors_history"> | string | null
    floor_has_hotel_suites_apartments?: StringNullableFilter<"Floors_history"> | string | null
    occupancy?: IntNullableFilter<"Floors_history"> | number | null
    size_min?: IntNullableFilter<"Floors_history"> | number | null
    size_max?: IntNullableFilter<"Floors_history"> | number | null
    avg_sale_price?: IntNullableFilter<"Floors_history"> | number | null
    avg_monthly_rent?: IntNullableFilter<"Floors_history"> | number | null
    instalment_plan?: StringNullableFilter<"Floors_history"> | string | null
    instalment_period?: IntNullableFilter<"Floors_history"> | number | null
    down_payment_amount?: IntNullableFilter<"Floors_history"> | number | null
    instalment_amount?: IntNullableFilter<"Floors_history"> | number | null
    possession_amount?: IntNullableFilter<"Floors_history"> | number | null
    date?: StringNullableFilter<"Floors_history"> | string | null
    remarks?: StringNullableFilter<"Floors_history"> | string | null
    createdAt?: DateTimeFilter<"Floors_history"> | Date | string
    updatedAt?: DateTimeFilter<"Floors_history"> | Date | string
  }

  export type Floors_historyOrderByWithRelationInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrderInput | SortOrder
    floor_apartments_studio?: SortOrderInput | SortOrder
    floor_apartments_1_bed?: SortOrderInput | SortOrder
    floor_apartments_2_bed?: SortOrderInput | SortOrder
    floor_apartments_3_bed?: SortOrderInput | SortOrder
    floor_apartments_4_bed?: SortOrderInput | SortOrder
    floor_apartments_5_bed?: SortOrderInput | SortOrder
    floor_apartments_duplex?: SortOrderInput | SortOrder
    floor_apartments_penthouse?: SortOrderInput | SortOrder
    floor_has_furnished?: SortOrderInput | SortOrder
    floor_has_semi_furnished?: SortOrderInput | SortOrder
    floor_has_service_apartments?: SortOrderInput | SortOrder
    floor_has_hotel_suites_apartments?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    size_min?: SortOrderInput | SortOrder
    size_max?: SortOrderInput | SortOrder
    avg_sale_price?: SortOrderInput | SortOrder
    avg_monthly_rent?: SortOrderInput | SortOrder
    instalment_plan?: SortOrderInput | SortOrder
    instalment_period?: SortOrderInput | SortOrder
    down_payment_amount?: SortOrderInput | SortOrder
    instalment_amount?: SortOrderInput | SortOrder
    possession_amount?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Floors_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Floors_historyWhereInput | Floors_historyWhereInput[]
    OR?: Floors_historyWhereInput[]
    NOT?: Floors_historyWhereInput | Floors_historyWhereInput[]
    building_id?: IntFilter<"Floors_history"> | number
    floor_id?: IntFilter<"Floors_history"> | number
    floor_no?: StringFilter<"Floors_history"> | string
    floor_type?: StringFilter<"Floors_history"> | string
    unit_type?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_studio?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_1_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_2_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_3_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_4_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_5_bed?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_duplex?: StringNullableFilter<"Floors_history"> | string | null
    floor_apartments_penthouse?: StringNullableFilter<"Floors_history"> | string | null
    floor_has_furnished?: StringNullableFilter<"Floors_history"> | string | null
    floor_has_semi_furnished?: StringNullableFilter<"Floors_history"> | string | null
    floor_has_service_apartments?: StringNullableFilter<"Floors_history"> | string | null
    floor_has_hotel_suites_apartments?: StringNullableFilter<"Floors_history"> | string | null
    occupancy?: IntNullableFilter<"Floors_history"> | number | null
    size_min?: IntNullableFilter<"Floors_history"> | number | null
    size_max?: IntNullableFilter<"Floors_history"> | number | null
    avg_sale_price?: IntNullableFilter<"Floors_history"> | number | null
    avg_monthly_rent?: IntNullableFilter<"Floors_history"> | number | null
    instalment_plan?: StringNullableFilter<"Floors_history"> | string | null
    instalment_period?: IntNullableFilter<"Floors_history"> | number | null
    down_payment_amount?: IntNullableFilter<"Floors_history"> | number | null
    instalment_amount?: IntNullableFilter<"Floors_history"> | number | null
    possession_amount?: IntNullableFilter<"Floors_history"> | number | null
    date?: StringNullableFilter<"Floors_history"> | string | null
    remarks?: StringNullableFilter<"Floors_history"> | string | null
    createdAt?: DateTimeFilter<"Floors_history"> | Date | string
    updatedAt?: DateTimeFilter<"Floors_history"> | Date | string
  }, "id">

  export type Floors_historyOrderByWithAggregationInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrderInput | SortOrder
    floor_apartments_studio?: SortOrderInput | SortOrder
    floor_apartments_1_bed?: SortOrderInput | SortOrder
    floor_apartments_2_bed?: SortOrderInput | SortOrder
    floor_apartments_3_bed?: SortOrderInput | SortOrder
    floor_apartments_4_bed?: SortOrderInput | SortOrder
    floor_apartments_5_bed?: SortOrderInput | SortOrder
    floor_apartments_duplex?: SortOrderInput | SortOrder
    floor_apartments_penthouse?: SortOrderInput | SortOrder
    floor_has_furnished?: SortOrderInput | SortOrder
    floor_has_semi_furnished?: SortOrderInput | SortOrder
    floor_has_service_apartments?: SortOrderInput | SortOrder
    floor_has_hotel_suites_apartments?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    size_min?: SortOrderInput | SortOrder
    size_max?: SortOrderInput | SortOrder
    avg_sale_price?: SortOrderInput | SortOrder
    avg_monthly_rent?: SortOrderInput | SortOrder
    instalment_plan?: SortOrderInput | SortOrder
    instalment_period?: SortOrderInput | SortOrder
    down_payment_amount?: SortOrderInput | SortOrder
    instalment_amount?: SortOrderInput | SortOrder
    possession_amount?: SortOrderInput | SortOrder
    date?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: Floors_historyCountOrderByAggregateInput
    _avg?: Floors_historyAvgOrderByAggregateInput
    _max?: Floors_historyMaxOrderByAggregateInput
    _min?: Floors_historyMinOrderByAggregateInput
    _sum?: Floors_historySumOrderByAggregateInput
  }

  export type Floors_historyScalarWhereWithAggregatesInput = {
    AND?: Floors_historyScalarWhereWithAggregatesInput | Floors_historyScalarWhereWithAggregatesInput[]
    OR?: Floors_historyScalarWhereWithAggregatesInput[]
    NOT?: Floors_historyScalarWhereWithAggregatesInput | Floors_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Floors_history"> | number
    building_id?: IntWithAggregatesFilter<"Floors_history"> | number
    floor_id?: IntWithAggregatesFilter<"Floors_history"> | number
    floor_no?: StringWithAggregatesFilter<"Floors_history"> | string
    floor_type?: StringWithAggregatesFilter<"Floors_history"> | string
    unit_type?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_apartments_studio?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_apartments_1_bed?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_apartments_2_bed?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_apartments_3_bed?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_apartments_4_bed?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_apartments_5_bed?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_apartments_duplex?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_apartments_penthouse?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_has_furnished?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_has_semi_furnished?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_has_service_apartments?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    floor_has_hotel_suites_apartments?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    occupancy?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    size_min?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    size_max?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    avg_sale_price?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    avg_monthly_rent?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    instalment_plan?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    instalment_period?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    down_payment_amount?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    instalment_amount?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    possession_amount?: IntNullableWithAggregatesFilter<"Floors_history"> | number | null
    date?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    remarks?: StringNullableWithAggregatesFilter<"Floors_history"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Floors_history"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Floors_history"> | Date | string
  }

  export type SocietiesWhereInput = {
    AND?: SocietiesWhereInput | SocietiesWhereInput[]
    OR?: SocietiesWhereInput[]
    NOT?: SocietiesWhereInput | SocietiesWhereInput[]
    id?: IntFilter<"Societies"> | number
    survey_date?: StringNullableFilter<"Societies"> | string | null
    city?: StringFilter<"Societies"> | string
    type?: StringNullableFilter<"Societies"> | string | null
    name?: StringNullableFilter<"Societies"> | string | null
    zone?: StringNullableFilter<"Societies"> | string | null
    address?: StringNullableFilter<"Societies"> | string | null
    blocks?: IntNullableFilter<"Societies"> | number | null
    phase?: IntNullableFilter<"Societies"> | number | null
    grade?: StringNullableFilter<"Societies"> | string | null
    occupancy?: IntNullableFilter<"Societies"> | number | null
    area?: IntNullableFilter<"Societies"> | number | null
    population?: IntNullableFilter<"Societies"> | number | null
    launch_year?: IntNullableFilter<"Societies"> | number | null
    total_plots_residential?: IntNullableFilter<"Societies"> | number | null
    plot_sizes_residential?: IntNullableFilter<"Societies"> | number | null
    plot_sizes_residential_87_5?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_125?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_200?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_250?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_300?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_400?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_500?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_600?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_800?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_1000?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_2000?: StringNullableFilter<"Societies"> | string | null
    total_plots_commercial?: IntNullableFilter<"Societies"> | number | null
    plot_sizes_commercial?: IntNullableFilter<"Societies"> | number | null
    plot_sizes_commercial_87_5?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_100?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_125?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_200?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_250?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_500?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_1000?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_2000?: StringNullableFilter<"Societies"> | string | null
    total_apartments?: IntNullableFilter<"Societies"> | number | null
    societies_apartment_size?: IntNullableFilter<"Societies"> | number | null
    apartment_studio?: StringNullableFilter<"Societies"> | string | null
    apartment_one_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_two_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_three_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_four_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_five_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_penthouse?: StringNullableFilter<"Societies"> | string | null
    apartment_duplex?: StringNullableFilter<"Societies"> | string | null
    plot_size?: IntNullableFilter<"Societies"> | number | null
    plot_price?: IntNullableFilter<"Societies"> | number | null
    vilas_size?: IntNullableFilter<"Societies"> | number | null
    vilas_price?: IntNullableFilter<"Societies"> | number | null
    vilas_monthly_rent?: IntNullableFilter<"Societies"> | number | null
    commercial_plot_size?: IntNullableFilter<"Societies"> | number | null
    commercial_plot_price?: IntNullableFilter<"Societies"> | number | null
    apartment_size?: IntNullableFilter<"Societies"> | number | null
    min_apartments_price?: IntNullableFilter<"Societies"> | number | null
    max_apartments_price?: IntNullableFilter<"Societies"> | number | null
    min_apartments_monthly_rent?: IntNullableFilter<"Societies"> | number | null
    max_apartments_monthly_rent?: IntNullableFilter<"Societies"> | number | null
    payment_terms?: StringNullableFilter<"Societies"> | string | null
    instalment_total_amount?: IntNullableFilter<"Societies"> | number | null
    instalment_down_payment?: IntNullableFilter<"Societies"> | number | null
    instalment_possession_Amount?: IntNullableFilter<"Societies"> | number | null
    instalment_period?: IntNullableFilter<"Societies"> | number | null
    features_type_parks?: StringNullableFilter<"Societies"> | string | null
    features_type_school?: StringNullableFilter<"Societies"> | string | null
    features_type_university?: StringNullableFilter<"Societies"> | string | null
    features_type_hospital?: StringNullableFilter<"Societies"> | string | null
    features_type_commercial_market?: StringNullableFilter<"Societies"> | string | null
    features_type_zoo?: StringNullableFilter<"Societies"> | string | null
    features_type_food_arena?: StringNullableFilter<"Societies"> | string | null
    features_type_college?: StringNullableFilter<"Societies"> | string | null
    features_type_graveyard?: StringNullableFilter<"Societies"> | string | null
    features_type_grid_station?: StringNullableFilter<"Societies"> | string | null
    features_type_masjid?: StringNullableFilter<"Societies"> | string | null
    features_type_community_club?: StringNullableFilter<"Societies"> | string | null
    features_type_gated_community?: StringNullableFilter<"Societies"> | string | null
    utilities_type_underground_electrification?: StringNullableFilter<"Societies"> | string | null
    utilities_type_gas?: StringNullableFilter<"Societies"> | string | null
    utilities_type_water?: StringNullableFilter<"Societies"> | string | null
    utilities_type_utilities_electricity?: StringNullableFilter<"Societies"> | string | null
    utilities_type_drainage?: StringNullableFilter<"Societies"> | string | null
    developer_name?: StringNullableFilter<"Societies"> | string | null
    contact_no?: IntNullableFilter<"Societies"> | number | null
    survery_remarks?: StringNullableFilter<"Societies"> | string | null
    imagePath?: StringNullableFilter<"Societies"> | string | null
    societies_draft?: StringNullableFilter<"Societies"> | string | null
    createdAt?: DateTimeFilter<"Societies"> | Date | string
    updatedAt?: DateTimeFilter<"Societies"> | Date | string
    Plots?: PlotsListRelationFilter
    Houses?: HousesListRelationFilter
  }

  export type SocietiesOrderByWithRelationInput = {
    id?: SortOrder
    survey_date?: SortOrderInput | SortOrder
    city?: SortOrder
    type?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    blocks?: SortOrderInput | SortOrder
    phase?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    population?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    total_plots_residential?: SortOrderInput | SortOrder
    plot_sizes_residential?: SortOrderInput | SortOrder
    plot_sizes_residential_87_5?: SortOrderInput | SortOrder
    plot_sizes_residential_125?: SortOrderInput | SortOrder
    plot_sizes_residential_200?: SortOrderInput | SortOrder
    plot_sizes_residential_250?: SortOrderInput | SortOrder
    plot_sizes_residential_300?: SortOrderInput | SortOrder
    plot_sizes_residential_400?: SortOrderInput | SortOrder
    plot_sizes_residential_500?: SortOrderInput | SortOrder
    plot_sizes_residential_600?: SortOrderInput | SortOrder
    plot_sizes_residential_800?: SortOrderInput | SortOrder
    plot_sizes_residential_1000?: SortOrderInput | SortOrder
    plot_sizes_residential_2000?: SortOrderInput | SortOrder
    total_plots_commercial?: SortOrderInput | SortOrder
    plot_sizes_commercial?: SortOrderInput | SortOrder
    plot_sizes_commercial_87_5?: SortOrderInput | SortOrder
    plot_sizes_commercial_100?: SortOrderInput | SortOrder
    plot_sizes_commercial_125?: SortOrderInput | SortOrder
    plot_sizes_commercial_200?: SortOrderInput | SortOrder
    plot_sizes_commercial_250?: SortOrderInput | SortOrder
    plot_sizes_commercial_500?: SortOrderInput | SortOrder
    plot_sizes_commercial_1000?: SortOrderInput | SortOrder
    plot_sizes_commercial_2000?: SortOrderInput | SortOrder
    total_apartments?: SortOrderInput | SortOrder
    societies_apartment_size?: SortOrderInput | SortOrder
    apartment_studio?: SortOrderInput | SortOrder
    apartment_one_bad?: SortOrderInput | SortOrder
    apartment_two_bad?: SortOrderInput | SortOrder
    apartment_three_bad?: SortOrderInput | SortOrder
    apartment_four_bad?: SortOrderInput | SortOrder
    apartment_five_bad?: SortOrderInput | SortOrder
    apartment_penthouse?: SortOrderInput | SortOrder
    apartment_duplex?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    plot_price?: SortOrderInput | SortOrder
    vilas_size?: SortOrderInput | SortOrder
    vilas_price?: SortOrderInput | SortOrder
    vilas_monthly_rent?: SortOrderInput | SortOrder
    commercial_plot_size?: SortOrderInput | SortOrder
    commercial_plot_price?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    min_apartments_price?: SortOrderInput | SortOrder
    max_apartments_price?: SortOrderInput | SortOrder
    min_apartments_monthly_rent?: SortOrderInput | SortOrder
    max_apartments_monthly_rent?: SortOrderInput | SortOrder
    payment_terms?: SortOrderInput | SortOrder
    instalment_total_amount?: SortOrderInput | SortOrder
    instalment_down_payment?: SortOrderInput | SortOrder
    instalment_possession_Amount?: SortOrderInput | SortOrder
    instalment_period?: SortOrderInput | SortOrder
    features_type_parks?: SortOrderInput | SortOrder
    features_type_school?: SortOrderInput | SortOrder
    features_type_university?: SortOrderInput | SortOrder
    features_type_hospital?: SortOrderInput | SortOrder
    features_type_commercial_market?: SortOrderInput | SortOrder
    features_type_zoo?: SortOrderInput | SortOrder
    features_type_food_arena?: SortOrderInput | SortOrder
    features_type_college?: SortOrderInput | SortOrder
    features_type_graveyard?: SortOrderInput | SortOrder
    features_type_grid_station?: SortOrderInput | SortOrder
    features_type_masjid?: SortOrderInput | SortOrder
    features_type_community_club?: SortOrderInput | SortOrder
    features_type_gated_community?: SortOrderInput | SortOrder
    utilities_type_underground_electrification?: SortOrderInput | SortOrder
    utilities_type_gas?: SortOrderInput | SortOrder
    utilities_type_water?: SortOrderInput | SortOrder
    utilities_type_utilities_electricity?: SortOrderInput | SortOrder
    utilities_type_drainage?: SortOrderInput | SortOrder
    developer_name?: SortOrderInput | SortOrder
    contact_no?: SortOrderInput | SortOrder
    survery_remarks?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    societies_draft?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Plots?: PlotsOrderByRelationAggregateInput
    Houses?: HousesOrderByRelationAggregateInput
  }

  export type SocietiesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: SocietiesWhereInput | SocietiesWhereInput[]
    OR?: SocietiesWhereInput[]
    NOT?: SocietiesWhereInput | SocietiesWhereInput[]
    survey_date?: StringNullableFilter<"Societies"> | string | null
    city?: StringFilter<"Societies"> | string
    type?: StringNullableFilter<"Societies"> | string | null
    name?: StringNullableFilter<"Societies"> | string | null
    zone?: StringNullableFilter<"Societies"> | string | null
    address?: StringNullableFilter<"Societies"> | string | null
    blocks?: IntNullableFilter<"Societies"> | number | null
    phase?: IntNullableFilter<"Societies"> | number | null
    grade?: StringNullableFilter<"Societies"> | string | null
    occupancy?: IntNullableFilter<"Societies"> | number | null
    area?: IntNullableFilter<"Societies"> | number | null
    population?: IntNullableFilter<"Societies"> | number | null
    launch_year?: IntNullableFilter<"Societies"> | number | null
    total_plots_residential?: IntNullableFilter<"Societies"> | number | null
    plot_sizes_residential?: IntNullableFilter<"Societies"> | number | null
    plot_sizes_residential_87_5?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_125?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_200?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_250?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_300?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_400?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_500?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_600?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_800?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_1000?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_residential_2000?: StringNullableFilter<"Societies"> | string | null
    total_plots_commercial?: IntNullableFilter<"Societies"> | number | null
    plot_sizes_commercial?: IntNullableFilter<"Societies"> | number | null
    plot_sizes_commercial_87_5?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_100?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_125?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_200?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_250?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_500?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_1000?: StringNullableFilter<"Societies"> | string | null
    plot_sizes_commercial_2000?: StringNullableFilter<"Societies"> | string | null
    total_apartments?: IntNullableFilter<"Societies"> | number | null
    societies_apartment_size?: IntNullableFilter<"Societies"> | number | null
    apartment_studio?: StringNullableFilter<"Societies"> | string | null
    apartment_one_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_two_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_three_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_four_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_five_bad?: StringNullableFilter<"Societies"> | string | null
    apartment_penthouse?: StringNullableFilter<"Societies"> | string | null
    apartment_duplex?: StringNullableFilter<"Societies"> | string | null
    plot_size?: IntNullableFilter<"Societies"> | number | null
    plot_price?: IntNullableFilter<"Societies"> | number | null
    vilas_size?: IntNullableFilter<"Societies"> | number | null
    vilas_price?: IntNullableFilter<"Societies"> | number | null
    vilas_monthly_rent?: IntNullableFilter<"Societies"> | number | null
    commercial_plot_size?: IntNullableFilter<"Societies"> | number | null
    commercial_plot_price?: IntNullableFilter<"Societies"> | number | null
    apartment_size?: IntNullableFilter<"Societies"> | number | null
    min_apartments_price?: IntNullableFilter<"Societies"> | number | null
    max_apartments_price?: IntNullableFilter<"Societies"> | number | null
    min_apartments_monthly_rent?: IntNullableFilter<"Societies"> | number | null
    max_apartments_monthly_rent?: IntNullableFilter<"Societies"> | number | null
    payment_terms?: StringNullableFilter<"Societies"> | string | null
    instalment_total_amount?: IntNullableFilter<"Societies"> | number | null
    instalment_down_payment?: IntNullableFilter<"Societies"> | number | null
    instalment_possession_Amount?: IntNullableFilter<"Societies"> | number | null
    instalment_period?: IntNullableFilter<"Societies"> | number | null
    features_type_parks?: StringNullableFilter<"Societies"> | string | null
    features_type_school?: StringNullableFilter<"Societies"> | string | null
    features_type_university?: StringNullableFilter<"Societies"> | string | null
    features_type_hospital?: StringNullableFilter<"Societies"> | string | null
    features_type_commercial_market?: StringNullableFilter<"Societies"> | string | null
    features_type_zoo?: StringNullableFilter<"Societies"> | string | null
    features_type_food_arena?: StringNullableFilter<"Societies"> | string | null
    features_type_college?: StringNullableFilter<"Societies"> | string | null
    features_type_graveyard?: StringNullableFilter<"Societies"> | string | null
    features_type_grid_station?: StringNullableFilter<"Societies"> | string | null
    features_type_masjid?: StringNullableFilter<"Societies"> | string | null
    features_type_community_club?: StringNullableFilter<"Societies"> | string | null
    features_type_gated_community?: StringNullableFilter<"Societies"> | string | null
    utilities_type_underground_electrification?: StringNullableFilter<"Societies"> | string | null
    utilities_type_gas?: StringNullableFilter<"Societies"> | string | null
    utilities_type_water?: StringNullableFilter<"Societies"> | string | null
    utilities_type_utilities_electricity?: StringNullableFilter<"Societies"> | string | null
    utilities_type_drainage?: StringNullableFilter<"Societies"> | string | null
    developer_name?: StringNullableFilter<"Societies"> | string | null
    contact_no?: IntNullableFilter<"Societies"> | number | null
    survery_remarks?: StringNullableFilter<"Societies"> | string | null
    imagePath?: StringNullableFilter<"Societies"> | string | null
    societies_draft?: StringNullableFilter<"Societies"> | string | null
    createdAt?: DateTimeFilter<"Societies"> | Date | string
    updatedAt?: DateTimeFilter<"Societies"> | Date | string
    Plots?: PlotsListRelationFilter
    Houses?: HousesListRelationFilter
  }, "id">

  export type SocietiesOrderByWithAggregationInput = {
    id?: SortOrder
    survey_date?: SortOrderInput | SortOrder
    city?: SortOrder
    type?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    blocks?: SortOrderInput | SortOrder
    phase?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    population?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    total_plots_residential?: SortOrderInput | SortOrder
    plot_sizes_residential?: SortOrderInput | SortOrder
    plot_sizes_residential_87_5?: SortOrderInput | SortOrder
    plot_sizes_residential_125?: SortOrderInput | SortOrder
    plot_sizes_residential_200?: SortOrderInput | SortOrder
    plot_sizes_residential_250?: SortOrderInput | SortOrder
    plot_sizes_residential_300?: SortOrderInput | SortOrder
    plot_sizes_residential_400?: SortOrderInput | SortOrder
    plot_sizes_residential_500?: SortOrderInput | SortOrder
    plot_sizes_residential_600?: SortOrderInput | SortOrder
    plot_sizes_residential_800?: SortOrderInput | SortOrder
    plot_sizes_residential_1000?: SortOrderInput | SortOrder
    plot_sizes_residential_2000?: SortOrderInput | SortOrder
    total_plots_commercial?: SortOrderInput | SortOrder
    plot_sizes_commercial?: SortOrderInput | SortOrder
    plot_sizes_commercial_87_5?: SortOrderInput | SortOrder
    plot_sizes_commercial_100?: SortOrderInput | SortOrder
    plot_sizes_commercial_125?: SortOrderInput | SortOrder
    plot_sizes_commercial_200?: SortOrderInput | SortOrder
    plot_sizes_commercial_250?: SortOrderInput | SortOrder
    plot_sizes_commercial_500?: SortOrderInput | SortOrder
    plot_sizes_commercial_1000?: SortOrderInput | SortOrder
    plot_sizes_commercial_2000?: SortOrderInput | SortOrder
    total_apartments?: SortOrderInput | SortOrder
    societies_apartment_size?: SortOrderInput | SortOrder
    apartment_studio?: SortOrderInput | SortOrder
    apartment_one_bad?: SortOrderInput | SortOrder
    apartment_two_bad?: SortOrderInput | SortOrder
    apartment_three_bad?: SortOrderInput | SortOrder
    apartment_four_bad?: SortOrderInput | SortOrder
    apartment_five_bad?: SortOrderInput | SortOrder
    apartment_penthouse?: SortOrderInput | SortOrder
    apartment_duplex?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    plot_price?: SortOrderInput | SortOrder
    vilas_size?: SortOrderInput | SortOrder
    vilas_price?: SortOrderInput | SortOrder
    vilas_monthly_rent?: SortOrderInput | SortOrder
    commercial_plot_size?: SortOrderInput | SortOrder
    commercial_plot_price?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    min_apartments_price?: SortOrderInput | SortOrder
    max_apartments_price?: SortOrderInput | SortOrder
    min_apartments_monthly_rent?: SortOrderInput | SortOrder
    max_apartments_monthly_rent?: SortOrderInput | SortOrder
    payment_terms?: SortOrderInput | SortOrder
    instalment_total_amount?: SortOrderInput | SortOrder
    instalment_down_payment?: SortOrderInput | SortOrder
    instalment_possession_Amount?: SortOrderInput | SortOrder
    instalment_period?: SortOrderInput | SortOrder
    features_type_parks?: SortOrderInput | SortOrder
    features_type_school?: SortOrderInput | SortOrder
    features_type_university?: SortOrderInput | SortOrder
    features_type_hospital?: SortOrderInput | SortOrder
    features_type_commercial_market?: SortOrderInput | SortOrder
    features_type_zoo?: SortOrderInput | SortOrder
    features_type_food_arena?: SortOrderInput | SortOrder
    features_type_college?: SortOrderInput | SortOrder
    features_type_graveyard?: SortOrderInput | SortOrder
    features_type_grid_station?: SortOrderInput | SortOrder
    features_type_masjid?: SortOrderInput | SortOrder
    features_type_community_club?: SortOrderInput | SortOrder
    features_type_gated_community?: SortOrderInput | SortOrder
    utilities_type_underground_electrification?: SortOrderInput | SortOrder
    utilities_type_gas?: SortOrderInput | SortOrder
    utilities_type_water?: SortOrderInput | SortOrder
    utilities_type_utilities_electricity?: SortOrderInput | SortOrder
    utilities_type_drainage?: SortOrderInput | SortOrder
    developer_name?: SortOrderInput | SortOrder
    contact_no?: SortOrderInput | SortOrder
    survery_remarks?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    societies_draft?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: SocietiesCountOrderByAggregateInput
    _avg?: SocietiesAvgOrderByAggregateInput
    _max?: SocietiesMaxOrderByAggregateInput
    _min?: SocietiesMinOrderByAggregateInput
    _sum?: SocietiesSumOrderByAggregateInput
  }

  export type SocietiesScalarWhereWithAggregatesInput = {
    AND?: SocietiesScalarWhereWithAggregatesInput | SocietiesScalarWhereWithAggregatesInput[]
    OR?: SocietiesScalarWhereWithAggregatesInput[]
    NOT?: SocietiesScalarWhereWithAggregatesInput | SocietiesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Societies"> | number
    survey_date?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    city?: StringWithAggregatesFilter<"Societies"> | string
    type?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    name?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    zone?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    address?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    blocks?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    phase?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    grade?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    occupancy?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    area?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    population?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    launch_year?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    total_plots_residential?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    plot_sizes_residential?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    plot_sizes_residential_87_5?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_125?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_200?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_250?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_300?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_400?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_500?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_600?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_800?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_1000?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_residential_2000?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    total_plots_commercial?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    plot_sizes_commercial?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    plot_sizes_commercial_87_5?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_commercial_100?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_commercial_125?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_commercial_200?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_commercial_250?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_commercial_500?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_commercial_1000?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_sizes_commercial_2000?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    total_apartments?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    societies_apartment_size?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    apartment_studio?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    apartment_one_bad?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    apartment_two_bad?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    apartment_three_bad?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    apartment_four_bad?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    apartment_five_bad?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    apartment_penthouse?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    apartment_duplex?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    plot_size?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    plot_price?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    vilas_size?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    vilas_price?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    vilas_monthly_rent?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    commercial_plot_size?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    commercial_plot_price?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    apartment_size?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    min_apartments_price?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    max_apartments_price?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    min_apartments_monthly_rent?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    max_apartments_monthly_rent?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    payment_terms?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    instalment_total_amount?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    instalment_down_payment?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    instalment_possession_Amount?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    instalment_period?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    features_type_parks?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_school?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_university?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_hospital?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_commercial_market?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_zoo?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_food_arena?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_college?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_graveyard?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_grid_station?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_masjid?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_community_club?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    features_type_gated_community?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    utilities_type_underground_electrification?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    utilities_type_gas?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    utilities_type_water?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    utilities_type_utilities_electricity?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    utilities_type_drainage?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    developer_name?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    contact_no?: IntNullableWithAggregatesFilter<"Societies"> | number | null
    survery_remarks?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    imagePath?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    societies_draft?: StringNullableWithAggregatesFilter<"Societies"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Societies"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Societies"> | Date | string
  }

  export type Societies_historyWhereInput = {
    AND?: Societies_historyWhereInput | Societies_historyWhereInput[]
    OR?: Societies_historyWhereInput[]
    NOT?: Societies_historyWhereInput | Societies_historyWhereInput[]
    id?: IntFilter<"Societies_history"> | number
    society_id?: IntFilter<"Societies_history"> | number
    survey_date?: StringNullableFilter<"Societies_history"> | string | null
    city?: StringFilter<"Societies_history"> | string
    type?: StringNullableFilter<"Societies_history"> | string | null
    name?: StringNullableFilter<"Societies_history"> | string | null
    zone?: StringNullableFilter<"Societies_history"> | string | null
    address?: StringNullableFilter<"Societies_history"> | string | null
    blocks?: IntNullableFilter<"Societies_history"> | number | null
    phase?: IntNullableFilter<"Societies_history"> | number | null
    grade?: StringNullableFilter<"Societies_history"> | string | null
    occupancy?: IntNullableFilter<"Societies_history"> | number | null
    area?: IntNullableFilter<"Societies_history"> | number | null
    population?: IntNullableFilter<"Societies_history"> | number | null
    launch_year?: IntNullableFilter<"Societies_history"> | number | null
    total_plots_residential?: IntNullableFilter<"Societies_history"> | number | null
    plot_sizes_residential?: IntNullableFilter<"Societies_history"> | number | null
    plot_sizes_residential_87_5?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_125?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_200?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_250?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_300?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_400?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_500?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_600?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_800?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_1000?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_2000?: StringNullableFilter<"Societies_history"> | string | null
    total_plots_commercial?: IntNullableFilter<"Societies_history"> | number | null
    plot_sizes_commercial?: IntNullableFilter<"Societies_history"> | number | null
    plot_sizes_commercial_87_5?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_100?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_125?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_200?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_250?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_500?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_1000?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_2000?: StringNullableFilter<"Societies_history"> | string | null
    total_apartments?: IntNullableFilter<"Societies_history"> | number | null
    societies_apartment_size?: IntNullableFilter<"Societies_history"> | number | null
    apartment_studio?: StringNullableFilter<"Societies_history"> | string | null
    apartment_one_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_two_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_three_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_four_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_five_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_penthouse?: StringNullableFilter<"Societies_history"> | string | null
    apartment_duplex?: StringNullableFilter<"Societies_history"> | string | null
    plot_size?: IntNullableFilter<"Societies_history"> | number | null
    plot_price?: IntNullableFilter<"Societies_history"> | number | null
    vilas_size?: IntNullableFilter<"Societies_history"> | number | null
    vilas_price?: IntNullableFilter<"Societies_history"> | number | null
    vilas_monthly_rent?: IntNullableFilter<"Societies_history"> | number | null
    commercial_plot_size?: IntNullableFilter<"Societies_history"> | number | null
    commercial_plot_price?: IntNullableFilter<"Societies_history"> | number | null
    apartment_size?: IntNullableFilter<"Societies_history"> | number | null
    min_apartments_price?: IntNullableFilter<"Societies_history"> | number | null
    max_apartments_price?: IntNullableFilter<"Societies_history"> | number | null
    min_apartments_monthly_rent?: IntNullableFilter<"Societies_history"> | number | null
    max_apartments_monthly_rent?: IntNullableFilter<"Societies_history"> | number | null
    payment_terms?: StringNullableFilter<"Societies_history"> | string | null
    instalment_total_amount?: IntNullableFilter<"Societies_history"> | number | null
    instalment_down_payment?: IntNullableFilter<"Societies_history"> | number | null
    instalment_possession_Amount?: IntNullableFilter<"Societies_history"> | number | null
    instalment_period?: IntNullableFilter<"Societies_history"> | number | null
    features_type_parks?: StringNullableFilter<"Societies_history"> | string | null
    features_type_school?: StringNullableFilter<"Societies_history"> | string | null
    features_type_university?: StringNullableFilter<"Societies_history"> | string | null
    features_type_hospital?: StringNullableFilter<"Societies_history"> | string | null
    features_type_commercial_market?: StringNullableFilter<"Societies_history"> | string | null
    features_type_zoo?: StringNullableFilter<"Societies_history"> | string | null
    features_type_food_arena?: StringNullableFilter<"Societies_history"> | string | null
    features_type_college?: StringNullableFilter<"Societies_history"> | string | null
    features_type_graveyard?: StringNullableFilter<"Societies_history"> | string | null
    features_type_grid_station?: StringNullableFilter<"Societies_history"> | string | null
    features_type_masjid?: StringNullableFilter<"Societies_history"> | string | null
    features_type_community_club?: StringNullableFilter<"Societies_history"> | string | null
    features_type_gated_community?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_underground_electrification?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_gas?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_water?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_utilities_electricity?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_drainage?: StringNullableFilter<"Societies_history"> | string | null
    developer_name?: StringNullableFilter<"Societies_history"> | string | null
    contact_no?: IntNullableFilter<"Societies_history"> | number | null
    survery_remarks?: StringNullableFilter<"Societies_history"> | string | null
    imagePath?: StringNullableFilter<"Societies_history"> | string | null
    societies_draft?: StringNullableFilter<"Societies_history"> | string | null
    createdAt?: DateTimeFilter<"Societies_history"> | Date | string
    updatedAt?: DateTimeFilter<"Societies_history"> | Date | string
  }

  export type Societies_historyOrderByWithRelationInput = {
    id?: SortOrder
    society_id?: SortOrder
    survey_date?: SortOrderInput | SortOrder
    city?: SortOrder
    type?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    blocks?: SortOrderInput | SortOrder
    phase?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    population?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    total_plots_residential?: SortOrderInput | SortOrder
    plot_sizes_residential?: SortOrderInput | SortOrder
    plot_sizes_residential_87_5?: SortOrderInput | SortOrder
    plot_sizes_residential_125?: SortOrderInput | SortOrder
    plot_sizes_residential_200?: SortOrderInput | SortOrder
    plot_sizes_residential_250?: SortOrderInput | SortOrder
    plot_sizes_residential_300?: SortOrderInput | SortOrder
    plot_sizes_residential_400?: SortOrderInput | SortOrder
    plot_sizes_residential_500?: SortOrderInput | SortOrder
    plot_sizes_residential_600?: SortOrderInput | SortOrder
    plot_sizes_residential_800?: SortOrderInput | SortOrder
    plot_sizes_residential_1000?: SortOrderInput | SortOrder
    plot_sizes_residential_2000?: SortOrderInput | SortOrder
    total_plots_commercial?: SortOrderInput | SortOrder
    plot_sizes_commercial?: SortOrderInput | SortOrder
    plot_sizes_commercial_87_5?: SortOrderInput | SortOrder
    plot_sizes_commercial_100?: SortOrderInput | SortOrder
    plot_sizes_commercial_125?: SortOrderInput | SortOrder
    plot_sizes_commercial_200?: SortOrderInput | SortOrder
    plot_sizes_commercial_250?: SortOrderInput | SortOrder
    plot_sizes_commercial_500?: SortOrderInput | SortOrder
    plot_sizes_commercial_1000?: SortOrderInput | SortOrder
    plot_sizes_commercial_2000?: SortOrderInput | SortOrder
    total_apartments?: SortOrderInput | SortOrder
    societies_apartment_size?: SortOrderInput | SortOrder
    apartment_studio?: SortOrderInput | SortOrder
    apartment_one_bad?: SortOrderInput | SortOrder
    apartment_two_bad?: SortOrderInput | SortOrder
    apartment_three_bad?: SortOrderInput | SortOrder
    apartment_four_bad?: SortOrderInput | SortOrder
    apartment_five_bad?: SortOrderInput | SortOrder
    apartment_penthouse?: SortOrderInput | SortOrder
    apartment_duplex?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    plot_price?: SortOrderInput | SortOrder
    vilas_size?: SortOrderInput | SortOrder
    vilas_price?: SortOrderInput | SortOrder
    vilas_monthly_rent?: SortOrderInput | SortOrder
    commercial_plot_size?: SortOrderInput | SortOrder
    commercial_plot_price?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    min_apartments_price?: SortOrderInput | SortOrder
    max_apartments_price?: SortOrderInput | SortOrder
    min_apartments_monthly_rent?: SortOrderInput | SortOrder
    max_apartments_monthly_rent?: SortOrderInput | SortOrder
    payment_terms?: SortOrderInput | SortOrder
    instalment_total_amount?: SortOrderInput | SortOrder
    instalment_down_payment?: SortOrderInput | SortOrder
    instalment_possession_Amount?: SortOrderInput | SortOrder
    instalment_period?: SortOrderInput | SortOrder
    features_type_parks?: SortOrderInput | SortOrder
    features_type_school?: SortOrderInput | SortOrder
    features_type_university?: SortOrderInput | SortOrder
    features_type_hospital?: SortOrderInput | SortOrder
    features_type_commercial_market?: SortOrderInput | SortOrder
    features_type_zoo?: SortOrderInput | SortOrder
    features_type_food_arena?: SortOrderInput | SortOrder
    features_type_college?: SortOrderInput | SortOrder
    features_type_graveyard?: SortOrderInput | SortOrder
    features_type_grid_station?: SortOrderInput | SortOrder
    features_type_masjid?: SortOrderInput | SortOrder
    features_type_community_club?: SortOrderInput | SortOrder
    features_type_gated_community?: SortOrderInput | SortOrder
    utilities_type_underground_electrification?: SortOrderInput | SortOrder
    utilities_type_gas?: SortOrderInput | SortOrder
    utilities_type_water?: SortOrderInput | SortOrder
    utilities_type_utilities_electricity?: SortOrderInput | SortOrder
    utilities_type_drainage?: SortOrderInput | SortOrder
    developer_name?: SortOrderInput | SortOrder
    contact_no?: SortOrderInput | SortOrder
    survery_remarks?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    societies_draft?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Societies_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Societies_historyWhereInput | Societies_historyWhereInput[]
    OR?: Societies_historyWhereInput[]
    NOT?: Societies_historyWhereInput | Societies_historyWhereInput[]
    society_id?: IntFilter<"Societies_history"> | number
    survey_date?: StringNullableFilter<"Societies_history"> | string | null
    city?: StringFilter<"Societies_history"> | string
    type?: StringNullableFilter<"Societies_history"> | string | null
    name?: StringNullableFilter<"Societies_history"> | string | null
    zone?: StringNullableFilter<"Societies_history"> | string | null
    address?: StringNullableFilter<"Societies_history"> | string | null
    blocks?: IntNullableFilter<"Societies_history"> | number | null
    phase?: IntNullableFilter<"Societies_history"> | number | null
    grade?: StringNullableFilter<"Societies_history"> | string | null
    occupancy?: IntNullableFilter<"Societies_history"> | number | null
    area?: IntNullableFilter<"Societies_history"> | number | null
    population?: IntNullableFilter<"Societies_history"> | number | null
    launch_year?: IntNullableFilter<"Societies_history"> | number | null
    total_plots_residential?: IntNullableFilter<"Societies_history"> | number | null
    plot_sizes_residential?: IntNullableFilter<"Societies_history"> | number | null
    plot_sizes_residential_87_5?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_125?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_200?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_250?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_300?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_400?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_500?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_600?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_800?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_1000?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_residential_2000?: StringNullableFilter<"Societies_history"> | string | null
    total_plots_commercial?: IntNullableFilter<"Societies_history"> | number | null
    plot_sizes_commercial?: IntNullableFilter<"Societies_history"> | number | null
    plot_sizes_commercial_87_5?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_100?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_125?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_200?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_250?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_500?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_1000?: StringNullableFilter<"Societies_history"> | string | null
    plot_sizes_commercial_2000?: StringNullableFilter<"Societies_history"> | string | null
    total_apartments?: IntNullableFilter<"Societies_history"> | number | null
    societies_apartment_size?: IntNullableFilter<"Societies_history"> | number | null
    apartment_studio?: StringNullableFilter<"Societies_history"> | string | null
    apartment_one_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_two_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_three_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_four_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_five_bad?: StringNullableFilter<"Societies_history"> | string | null
    apartment_penthouse?: StringNullableFilter<"Societies_history"> | string | null
    apartment_duplex?: StringNullableFilter<"Societies_history"> | string | null
    plot_size?: IntNullableFilter<"Societies_history"> | number | null
    plot_price?: IntNullableFilter<"Societies_history"> | number | null
    vilas_size?: IntNullableFilter<"Societies_history"> | number | null
    vilas_price?: IntNullableFilter<"Societies_history"> | number | null
    vilas_monthly_rent?: IntNullableFilter<"Societies_history"> | number | null
    commercial_plot_size?: IntNullableFilter<"Societies_history"> | number | null
    commercial_plot_price?: IntNullableFilter<"Societies_history"> | number | null
    apartment_size?: IntNullableFilter<"Societies_history"> | number | null
    min_apartments_price?: IntNullableFilter<"Societies_history"> | number | null
    max_apartments_price?: IntNullableFilter<"Societies_history"> | number | null
    min_apartments_monthly_rent?: IntNullableFilter<"Societies_history"> | number | null
    max_apartments_monthly_rent?: IntNullableFilter<"Societies_history"> | number | null
    payment_terms?: StringNullableFilter<"Societies_history"> | string | null
    instalment_total_amount?: IntNullableFilter<"Societies_history"> | number | null
    instalment_down_payment?: IntNullableFilter<"Societies_history"> | number | null
    instalment_possession_Amount?: IntNullableFilter<"Societies_history"> | number | null
    instalment_period?: IntNullableFilter<"Societies_history"> | number | null
    features_type_parks?: StringNullableFilter<"Societies_history"> | string | null
    features_type_school?: StringNullableFilter<"Societies_history"> | string | null
    features_type_university?: StringNullableFilter<"Societies_history"> | string | null
    features_type_hospital?: StringNullableFilter<"Societies_history"> | string | null
    features_type_commercial_market?: StringNullableFilter<"Societies_history"> | string | null
    features_type_zoo?: StringNullableFilter<"Societies_history"> | string | null
    features_type_food_arena?: StringNullableFilter<"Societies_history"> | string | null
    features_type_college?: StringNullableFilter<"Societies_history"> | string | null
    features_type_graveyard?: StringNullableFilter<"Societies_history"> | string | null
    features_type_grid_station?: StringNullableFilter<"Societies_history"> | string | null
    features_type_masjid?: StringNullableFilter<"Societies_history"> | string | null
    features_type_community_club?: StringNullableFilter<"Societies_history"> | string | null
    features_type_gated_community?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_underground_electrification?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_gas?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_water?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_utilities_electricity?: StringNullableFilter<"Societies_history"> | string | null
    utilities_type_drainage?: StringNullableFilter<"Societies_history"> | string | null
    developer_name?: StringNullableFilter<"Societies_history"> | string | null
    contact_no?: IntNullableFilter<"Societies_history"> | number | null
    survery_remarks?: StringNullableFilter<"Societies_history"> | string | null
    imagePath?: StringNullableFilter<"Societies_history"> | string | null
    societies_draft?: StringNullableFilter<"Societies_history"> | string | null
    createdAt?: DateTimeFilter<"Societies_history"> | Date | string
    updatedAt?: DateTimeFilter<"Societies_history"> | Date | string
  }, "id">

  export type Societies_historyOrderByWithAggregationInput = {
    id?: SortOrder
    society_id?: SortOrder
    survey_date?: SortOrderInput | SortOrder
    city?: SortOrder
    type?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    address?: SortOrderInput | SortOrder
    blocks?: SortOrderInput | SortOrder
    phase?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    population?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    total_plots_residential?: SortOrderInput | SortOrder
    plot_sizes_residential?: SortOrderInput | SortOrder
    plot_sizes_residential_87_5?: SortOrderInput | SortOrder
    plot_sizes_residential_125?: SortOrderInput | SortOrder
    plot_sizes_residential_200?: SortOrderInput | SortOrder
    plot_sizes_residential_250?: SortOrderInput | SortOrder
    plot_sizes_residential_300?: SortOrderInput | SortOrder
    plot_sizes_residential_400?: SortOrderInput | SortOrder
    plot_sizes_residential_500?: SortOrderInput | SortOrder
    plot_sizes_residential_600?: SortOrderInput | SortOrder
    plot_sizes_residential_800?: SortOrderInput | SortOrder
    plot_sizes_residential_1000?: SortOrderInput | SortOrder
    plot_sizes_residential_2000?: SortOrderInput | SortOrder
    total_plots_commercial?: SortOrderInput | SortOrder
    plot_sizes_commercial?: SortOrderInput | SortOrder
    plot_sizes_commercial_87_5?: SortOrderInput | SortOrder
    plot_sizes_commercial_100?: SortOrderInput | SortOrder
    plot_sizes_commercial_125?: SortOrderInput | SortOrder
    plot_sizes_commercial_200?: SortOrderInput | SortOrder
    plot_sizes_commercial_250?: SortOrderInput | SortOrder
    plot_sizes_commercial_500?: SortOrderInput | SortOrder
    plot_sizes_commercial_1000?: SortOrderInput | SortOrder
    plot_sizes_commercial_2000?: SortOrderInput | SortOrder
    total_apartments?: SortOrderInput | SortOrder
    societies_apartment_size?: SortOrderInput | SortOrder
    apartment_studio?: SortOrderInput | SortOrder
    apartment_one_bad?: SortOrderInput | SortOrder
    apartment_two_bad?: SortOrderInput | SortOrder
    apartment_three_bad?: SortOrderInput | SortOrder
    apartment_four_bad?: SortOrderInput | SortOrder
    apartment_five_bad?: SortOrderInput | SortOrder
    apartment_penthouse?: SortOrderInput | SortOrder
    apartment_duplex?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    plot_price?: SortOrderInput | SortOrder
    vilas_size?: SortOrderInput | SortOrder
    vilas_price?: SortOrderInput | SortOrder
    vilas_monthly_rent?: SortOrderInput | SortOrder
    commercial_plot_size?: SortOrderInput | SortOrder
    commercial_plot_price?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    min_apartments_price?: SortOrderInput | SortOrder
    max_apartments_price?: SortOrderInput | SortOrder
    min_apartments_monthly_rent?: SortOrderInput | SortOrder
    max_apartments_monthly_rent?: SortOrderInput | SortOrder
    payment_terms?: SortOrderInput | SortOrder
    instalment_total_amount?: SortOrderInput | SortOrder
    instalment_down_payment?: SortOrderInput | SortOrder
    instalment_possession_Amount?: SortOrderInput | SortOrder
    instalment_period?: SortOrderInput | SortOrder
    features_type_parks?: SortOrderInput | SortOrder
    features_type_school?: SortOrderInput | SortOrder
    features_type_university?: SortOrderInput | SortOrder
    features_type_hospital?: SortOrderInput | SortOrder
    features_type_commercial_market?: SortOrderInput | SortOrder
    features_type_zoo?: SortOrderInput | SortOrder
    features_type_food_arena?: SortOrderInput | SortOrder
    features_type_college?: SortOrderInput | SortOrder
    features_type_graveyard?: SortOrderInput | SortOrder
    features_type_grid_station?: SortOrderInput | SortOrder
    features_type_masjid?: SortOrderInput | SortOrder
    features_type_community_club?: SortOrderInput | SortOrder
    features_type_gated_community?: SortOrderInput | SortOrder
    utilities_type_underground_electrification?: SortOrderInput | SortOrder
    utilities_type_gas?: SortOrderInput | SortOrder
    utilities_type_water?: SortOrderInput | SortOrder
    utilities_type_utilities_electricity?: SortOrderInput | SortOrder
    utilities_type_drainage?: SortOrderInput | SortOrder
    developer_name?: SortOrderInput | SortOrder
    contact_no?: SortOrderInput | SortOrder
    survery_remarks?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    societies_draft?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: Societies_historyCountOrderByAggregateInput
    _avg?: Societies_historyAvgOrderByAggregateInput
    _max?: Societies_historyMaxOrderByAggregateInput
    _min?: Societies_historyMinOrderByAggregateInput
    _sum?: Societies_historySumOrderByAggregateInput
  }

  export type Societies_historyScalarWhereWithAggregatesInput = {
    AND?: Societies_historyScalarWhereWithAggregatesInput | Societies_historyScalarWhereWithAggregatesInput[]
    OR?: Societies_historyScalarWhereWithAggregatesInput[]
    NOT?: Societies_historyScalarWhereWithAggregatesInput | Societies_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Societies_history"> | number
    society_id?: IntWithAggregatesFilter<"Societies_history"> | number
    survey_date?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    city?: StringWithAggregatesFilter<"Societies_history"> | string
    type?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    name?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    zone?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    address?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    blocks?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    phase?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    grade?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    occupancy?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    area?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    population?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    launch_year?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    total_plots_residential?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    plot_sizes_residential?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    plot_sizes_residential_87_5?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_125?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_200?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_250?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_300?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_400?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_500?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_600?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_800?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_1000?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_residential_2000?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    total_plots_commercial?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    plot_sizes_commercial?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    plot_sizes_commercial_87_5?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_commercial_100?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_commercial_125?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_commercial_200?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_commercial_250?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_commercial_500?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_commercial_1000?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_sizes_commercial_2000?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    total_apartments?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    societies_apartment_size?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    apartment_studio?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    apartment_one_bad?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    apartment_two_bad?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    apartment_three_bad?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    apartment_four_bad?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    apartment_five_bad?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    apartment_penthouse?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    apartment_duplex?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    plot_size?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    plot_price?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    vilas_size?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    vilas_price?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    vilas_monthly_rent?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    commercial_plot_size?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    commercial_plot_price?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    apartment_size?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    min_apartments_price?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    max_apartments_price?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    min_apartments_monthly_rent?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    max_apartments_monthly_rent?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    payment_terms?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    instalment_total_amount?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    instalment_down_payment?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    instalment_possession_Amount?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    instalment_period?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    features_type_parks?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_school?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_university?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_hospital?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_commercial_market?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_zoo?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_food_arena?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_college?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_graveyard?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_grid_station?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_masjid?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_community_club?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    features_type_gated_community?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    utilities_type_underground_electrification?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    utilities_type_gas?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    utilities_type_water?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    utilities_type_utilities_electricity?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    utilities_type_drainage?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    developer_name?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    contact_no?: IntNullableWithAggregatesFilter<"Societies_history"> | number | null
    survery_remarks?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    imagePath?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    societies_draft?: StringNullableWithAggregatesFilter<"Societies_history"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Societies_history"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Societies_history"> | Date | string
  }

  export type CommercialWhereInput = {
    AND?: CommercialWhereInput | CommercialWhereInput[]
    OR?: CommercialWhereInput[]
    NOT?: CommercialWhereInput | CommercialWhereInput[]
    id?: IntFilter<"Commercial"> | number
    survey_date?: StringNullableFilter<"Commercial"> | string | null
    city?: StringNullableFilter<"Commercial"> | string | null
    commercial_zone_name?: StringNullableFilter<"Commercial"> | string | null
    zone?: StringNullableFilter<"Commercial"> | string | null
    type?: StringNullableFilter<"Commercial"> | string | null
    location?: StringNullableFilter<"Commercial"> | string | null
    project_status?: StringNullableFilter<"Commercial"> | string | null
    launch_year?: IntNullableFilter<"Commercial"> | number | null
    grade?: StringNullableFilter<"Commercial"> | string | null
    area?: IntNullableFilter<"Commercial"> | number | null
    occupancy?: IntNullableFilter<"Commercial"> | number | null
    total_plots?: IntNullableFilter<"Commercial"> | number | null
    total_shops?: IntNullableFilter<"Commercial"> | number | null
    total_offices?: IntNullableFilter<"Commercial"> | number | null
    total_apartments?: IntNullableFilter<"Commercial"> | number | null
    property_feature?: StringNullableFilter<"Commercial"> | string | null
    property_title?: StringNullableFilter<"Commercial"> | string | null
    remarks?: StringNullableFilter<"Commercial"> | string | null
    createdAt?: DateTimeFilter<"Commercial"> | Date | string
    updatedAt?: DateTimeFilter<"Commercial"> | Date | string
    Price?: PriceListRelationFilter
  }

  export type CommercialOrderByWithRelationInput = {
    id?: SortOrder
    survey_date?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    commercial_zone_name?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    project_status?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    total_plots?: SortOrderInput | SortOrder
    total_shops?: SortOrderInput | SortOrder
    total_offices?: SortOrderInput | SortOrder
    total_apartments?: SortOrderInput | SortOrder
    property_feature?: SortOrderInput | SortOrder
    property_title?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Price?: PriceOrderByRelationAggregateInput
  }

  export type CommercialWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: CommercialWhereInput | CommercialWhereInput[]
    OR?: CommercialWhereInput[]
    NOT?: CommercialWhereInput | CommercialWhereInput[]
    survey_date?: StringNullableFilter<"Commercial"> | string | null
    city?: StringNullableFilter<"Commercial"> | string | null
    commercial_zone_name?: StringNullableFilter<"Commercial"> | string | null
    zone?: StringNullableFilter<"Commercial"> | string | null
    type?: StringNullableFilter<"Commercial"> | string | null
    location?: StringNullableFilter<"Commercial"> | string | null
    project_status?: StringNullableFilter<"Commercial"> | string | null
    launch_year?: IntNullableFilter<"Commercial"> | number | null
    grade?: StringNullableFilter<"Commercial"> | string | null
    area?: IntNullableFilter<"Commercial"> | number | null
    occupancy?: IntNullableFilter<"Commercial"> | number | null
    total_plots?: IntNullableFilter<"Commercial"> | number | null
    total_shops?: IntNullableFilter<"Commercial"> | number | null
    total_offices?: IntNullableFilter<"Commercial"> | number | null
    total_apartments?: IntNullableFilter<"Commercial"> | number | null
    property_feature?: StringNullableFilter<"Commercial"> | string | null
    property_title?: StringNullableFilter<"Commercial"> | string | null
    remarks?: StringNullableFilter<"Commercial"> | string | null
    createdAt?: DateTimeFilter<"Commercial"> | Date | string
    updatedAt?: DateTimeFilter<"Commercial"> | Date | string
    Price?: PriceListRelationFilter
  }, "id">

  export type CommercialOrderByWithAggregationInput = {
    id?: SortOrder
    survey_date?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    commercial_zone_name?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    project_status?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    total_plots?: SortOrderInput | SortOrder
    total_shops?: SortOrderInput | SortOrder
    total_offices?: SortOrderInput | SortOrder
    total_apartments?: SortOrderInput | SortOrder
    property_feature?: SortOrderInput | SortOrder
    property_title?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CommercialCountOrderByAggregateInput
    _avg?: CommercialAvgOrderByAggregateInput
    _max?: CommercialMaxOrderByAggregateInput
    _min?: CommercialMinOrderByAggregateInput
    _sum?: CommercialSumOrderByAggregateInput
  }

  export type CommercialScalarWhereWithAggregatesInput = {
    AND?: CommercialScalarWhereWithAggregatesInput | CommercialScalarWhereWithAggregatesInput[]
    OR?: CommercialScalarWhereWithAggregatesInput[]
    NOT?: CommercialScalarWhereWithAggregatesInput | CommercialScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Commercial"> | number
    survey_date?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    city?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    commercial_zone_name?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    zone?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    type?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    location?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    project_status?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    launch_year?: IntNullableWithAggregatesFilter<"Commercial"> | number | null
    grade?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    area?: IntNullableWithAggregatesFilter<"Commercial"> | number | null
    occupancy?: IntNullableWithAggregatesFilter<"Commercial"> | number | null
    total_plots?: IntNullableWithAggregatesFilter<"Commercial"> | number | null
    total_shops?: IntNullableWithAggregatesFilter<"Commercial"> | number | null
    total_offices?: IntNullableWithAggregatesFilter<"Commercial"> | number | null
    total_apartments?: IntNullableWithAggregatesFilter<"Commercial"> | number | null
    property_feature?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    property_title?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    remarks?: StringNullableWithAggregatesFilter<"Commercial"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Commercial"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Commercial"> | Date | string
  }

  export type Commercial_historyWhereInput = {
    AND?: Commercial_historyWhereInput | Commercial_historyWhereInput[]
    OR?: Commercial_historyWhereInput[]
    NOT?: Commercial_historyWhereInput | Commercial_historyWhereInput[]
    id?: IntFilter<"Commercial_history"> | number
    commercial_id?: IntFilter<"Commercial_history"> | number
    survey_date?: StringNullableFilter<"Commercial_history"> | string | null
    city?: StringNullableFilter<"Commercial_history"> | string | null
    commercial_zone_name?: StringNullableFilter<"Commercial_history"> | string | null
    zone?: StringNullableFilter<"Commercial_history"> | string | null
    type?: StringNullableFilter<"Commercial_history"> | string | null
    location?: StringNullableFilter<"Commercial_history"> | string | null
    project_status?: StringNullableFilter<"Commercial_history"> | string | null
    launch_year?: StringNullableFilter<"Commercial_history"> | string | null
    grade?: StringNullableFilter<"Commercial_history"> | string | null
    area?: IntNullableFilter<"Commercial_history"> | number | null
    occupancy?: IntNullableFilter<"Commercial_history"> | number | null
    total_plots?: IntNullableFilter<"Commercial_history"> | number | null
    total_shops?: IntNullableFilter<"Commercial_history"> | number | null
    total_offices?: IntNullableFilter<"Commercial_history"> | number | null
    total_apartments?: IntNullableFilter<"Commercial_history"> | number | null
    property_feature?: StringNullableFilter<"Commercial_history"> | string | null
    property_title?: StringNullableFilter<"Commercial_history"> | string | null
    remarks?: StringNullableFilter<"Commercial_history"> | string | null
    createdAt?: DateTimeFilter<"Commercial_history"> | Date | string
    updatedAt?: DateTimeFilter<"Commercial_history"> | Date | string
  }

  export type Commercial_historyOrderByWithRelationInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    survey_date?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    commercial_zone_name?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    project_status?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    total_plots?: SortOrderInput | SortOrder
    total_shops?: SortOrderInput | SortOrder
    total_offices?: SortOrderInput | SortOrder
    total_apartments?: SortOrderInput | SortOrder
    property_feature?: SortOrderInput | SortOrder
    property_title?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Commercial_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Commercial_historyWhereInput | Commercial_historyWhereInput[]
    OR?: Commercial_historyWhereInput[]
    NOT?: Commercial_historyWhereInput | Commercial_historyWhereInput[]
    commercial_id?: IntFilter<"Commercial_history"> | number
    survey_date?: StringNullableFilter<"Commercial_history"> | string | null
    city?: StringNullableFilter<"Commercial_history"> | string | null
    commercial_zone_name?: StringNullableFilter<"Commercial_history"> | string | null
    zone?: StringNullableFilter<"Commercial_history"> | string | null
    type?: StringNullableFilter<"Commercial_history"> | string | null
    location?: StringNullableFilter<"Commercial_history"> | string | null
    project_status?: StringNullableFilter<"Commercial_history"> | string | null
    launch_year?: StringNullableFilter<"Commercial_history"> | string | null
    grade?: StringNullableFilter<"Commercial_history"> | string | null
    area?: IntNullableFilter<"Commercial_history"> | number | null
    occupancy?: IntNullableFilter<"Commercial_history"> | number | null
    total_plots?: IntNullableFilter<"Commercial_history"> | number | null
    total_shops?: IntNullableFilter<"Commercial_history"> | number | null
    total_offices?: IntNullableFilter<"Commercial_history"> | number | null
    total_apartments?: IntNullableFilter<"Commercial_history"> | number | null
    property_feature?: StringNullableFilter<"Commercial_history"> | string | null
    property_title?: StringNullableFilter<"Commercial_history"> | string | null
    remarks?: StringNullableFilter<"Commercial_history"> | string | null
    createdAt?: DateTimeFilter<"Commercial_history"> | Date | string
    updatedAt?: DateTimeFilter<"Commercial_history"> | Date | string
  }, "id">

  export type Commercial_historyOrderByWithAggregationInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    survey_date?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    commercial_zone_name?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    project_status?: SortOrderInput | SortOrder
    launch_year?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    area?: SortOrderInput | SortOrder
    occupancy?: SortOrderInput | SortOrder
    total_plots?: SortOrderInput | SortOrder
    total_shops?: SortOrderInput | SortOrder
    total_offices?: SortOrderInput | SortOrder
    total_apartments?: SortOrderInput | SortOrder
    property_feature?: SortOrderInput | SortOrder
    property_title?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: Commercial_historyCountOrderByAggregateInput
    _avg?: Commercial_historyAvgOrderByAggregateInput
    _max?: Commercial_historyMaxOrderByAggregateInput
    _min?: Commercial_historyMinOrderByAggregateInput
    _sum?: Commercial_historySumOrderByAggregateInput
  }

  export type Commercial_historyScalarWhereWithAggregatesInput = {
    AND?: Commercial_historyScalarWhereWithAggregatesInput | Commercial_historyScalarWhereWithAggregatesInput[]
    OR?: Commercial_historyScalarWhereWithAggregatesInput[]
    NOT?: Commercial_historyScalarWhereWithAggregatesInput | Commercial_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Commercial_history"> | number
    commercial_id?: IntWithAggregatesFilter<"Commercial_history"> | number
    survey_date?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    city?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    commercial_zone_name?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    zone?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    type?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    location?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    project_status?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    launch_year?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    grade?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    area?: IntNullableWithAggregatesFilter<"Commercial_history"> | number | null
    occupancy?: IntNullableWithAggregatesFilter<"Commercial_history"> | number | null
    total_plots?: IntNullableWithAggregatesFilter<"Commercial_history"> | number | null
    total_shops?: IntNullableWithAggregatesFilter<"Commercial_history"> | number | null
    total_offices?: IntNullableWithAggregatesFilter<"Commercial_history"> | number | null
    total_apartments?: IntNullableWithAggregatesFilter<"Commercial_history"> | number | null
    property_feature?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    property_title?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    remarks?: StringNullableWithAggregatesFilter<"Commercial_history"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Commercial_history"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Commercial_history"> | Date | string
  }

  export type HousesWhereInput = {
    AND?: HousesWhereInput | HousesWhereInput[]
    OR?: HousesWhereInput[]
    NOT?: HousesWhereInput | HousesWhereInput[]
    id?: IntFilter<"Houses"> | number
    society_id?: IntFilter<"Houses"> | number
    type?: StringNullableFilter<"Houses"> | string | null
    size?: StringNullableFilter<"Houses"> | string | null
    price?: StringNullableFilter<"Houses"> | string | null
    direction?: StringNullableFilter<"Houses"> | string | null
    is_corner?: StringNullableFilter<"Houses"> | string | null
    condition?: StringNullableFilter<"Houses"> | string | null
    floors?: StringNullableFilter<"Houses"> | string | null
    has_basement?: StringNullableFilter<"Houses"> | string | null
    construction_year?: StringNullableFilter<"Houses"> | string | null
    remarks?: StringNullableFilter<"Houses"> | string | null
    createdAt?: DateTimeFilter<"Houses"> | Date | string
    updatedAt?: DateTimeFilter<"Houses"> | Date | string
    societies?: XOR<SocietiesScalarRelationFilter, SocietiesWhereInput>
  }

  export type HousesOrderByWithRelationInput = {
    id?: SortOrder
    society_id?: SortOrder
    type?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    direction?: SortOrderInput | SortOrder
    is_corner?: SortOrderInput | SortOrder
    condition?: SortOrderInput | SortOrder
    floors?: SortOrderInput | SortOrder
    has_basement?: SortOrderInput | SortOrder
    construction_year?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    societies?: SocietiesOrderByWithRelationInput
  }

  export type HousesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: HousesWhereInput | HousesWhereInput[]
    OR?: HousesWhereInput[]
    NOT?: HousesWhereInput | HousesWhereInput[]
    society_id?: IntFilter<"Houses"> | number
    type?: StringNullableFilter<"Houses"> | string | null
    size?: StringNullableFilter<"Houses"> | string | null
    price?: StringNullableFilter<"Houses"> | string | null
    direction?: StringNullableFilter<"Houses"> | string | null
    is_corner?: StringNullableFilter<"Houses"> | string | null
    condition?: StringNullableFilter<"Houses"> | string | null
    floors?: StringNullableFilter<"Houses"> | string | null
    has_basement?: StringNullableFilter<"Houses"> | string | null
    construction_year?: StringNullableFilter<"Houses"> | string | null
    remarks?: StringNullableFilter<"Houses"> | string | null
    createdAt?: DateTimeFilter<"Houses"> | Date | string
    updatedAt?: DateTimeFilter<"Houses"> | Date | string
    societies?: XOR<SocietiesScalarRelationFilter, SocietiesWhereInput>
  }, "id">

  export type HousesOrderByWithAggregationInput = {
    id?: SortOrder
    society_id?: SortOrder
    type?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    direction?: SortOrderInput | SortOrder
    is_corner?: SortOrderInput | SortOrder
    condition?: SortOrderInput | SortOrder
    floors?: SortOrderInput | SortOrder
    has_basement?: SortOrderInput | SortOrder
    construction_year?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: HousesCountOrderByAggregateInput
    _avg?: HousesAvgOrderByAggregateInput
    _max?: HousesMaxOrderByAggregateInput
    _min?: HousesMinOrderByAggregateInput
    _sum?: HousesSumOrderByAggregateInput
  }

  export type HousesScalarWhereWithAggregatesInput = {
    AND?: HousesScalarWhereWithAggregatesInput | HousesScalarWhereWithAggregatesInput[]
    OR?: HousesScalarWhereWithAggregatesInput[]
    NOT?: HousesScalarWhereWithAggregatesInput | HousesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Houses"> | number
    society_id?: IntWithAggregatesFilter<"Houses"> | number
    type?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    size?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    price?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    direction?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    is_corner?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    condition?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    floors?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    has_basement?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    construction_year?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    remarks?: StringNullableWithAggregatesFilter<"Houses"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Houses"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Houses"> | Date | string
  }

  export type PlotsWhereInput = {
    AND?: PlotsWhereInput | PlotsWhereInput[]
    OR?: PlotsWhereInput[]
    NOT?: PlotsWhereInput | PlotsWhereInput[]
    id?: IntFilter<"Plots"> | number
    society_id?: IntFilter<"Plots"> | number
    date?: StringNullableFilter<"Plots"> | string | null
    plot_type?: StringNullableFilter<"Plots"> | string | null
    type?: StringNullableFilter<"Plots"> | string | null
    size?: StringNullableFilter<"Plots"> | string | null
    apartment_size?: StringNullableFilter<"Plots"> | string | null
    apartment_size_ft?: StringNullableFilter<"Plots"> | string | null
    shop_size?: StringNullableFilter<"Plots"> | string | null
    office_size?: StringNullableFilter<"Plots"> | string | null
    plot_price?: IntNullableFilter<"Plots"> | number | null
    plot_rent?: IntNullableFilter<"Plots"> | number | null
    banglow_price?: StringNullableFilter<"Plots"> | string | null
    banglow_rent?: StringNullableFilter<"Plots"> | string | null
    direction?: StringNullableFilter<"Plots"> | string | null
    is_corner?: StringNullableFilter<"Plots"> | string | null
    payment_mode?: StringNullableFilter<"Plots"> | string | null
    ins_total_price?: IntNullableFilter<"Plots"> | number | null
    ins_down_payment?: IntNullableFilter<"Plots"> | number | null
    ins_possession_Amount?: IntNullableFilter<"Plots"> | number | null
    ins_period?: IntNullableFilter<"Plots"> | number | null
    remarks?: StringNullableFilter<"Plots"> | string | null
    imagePath?: StringNullableFilter<"Plots"> | string | null
    createdAt?: DateTimeFilter<"Plots"> | Date | string
    updatedAt?: DateTimeFilter<"Plots"> | Date | string
    societies?: XOR<SocietiesScalarRelationFilter, SocietiesWhereInput>
  }

  export type PlotsOrderByWithRelationInput = {
    id?: SortOrder
    society_id?: SortOrder
    date?: SortOrderInput | SortOrder
    plot_type?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    apartment_size_ft?: SortOrderInput | SortOrder
    shop_size?: SortOrderInput | SortOrder
    office_size?: SortOrderInput | SortOrder
    plot_price?: SortOrderInput | SortOrder
    plot_rent?: SortOrderInput | SortOrder
    banglow_price?: SortOrderInput | SortOrder
    banglow_rent?: SortOrderInput | SortOrder
    direction?: SortOrderInput | SortOrder
    is_corner?: SortOrderInput | SortOrder
    payment_mode?: SortOrderInput | SortOrder
    ins_total_price?: SortOrderInput | SortOrder
    ins_down_payment?: SortOrderInput | SortOrder
    ins_possession_Amount?: SortOrderInput | SortOrder
    ins_period?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    societies?: SocietiesOrderByWithRelationInput
  }

  export type PlotsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PlotsWhereInput | PlotsWhereInput[]
    OR?: PlotsWhereInput[]
    NOT?: PlotsWhereInput | PlotsWhereInput[]
    society_id?: IntFilter<"Plots"> | number
    date?: StringNullableFilter<"Plots"> | string | null
    plot_type?: StringNullableFilter<"Plots"> | string | null
    type?: StringNullableFilter<"Plots"> | string | null
    size?: StringNullableFilter<"Plots"> | string | null
    apartment_size?: StringNullableFilter<"Plots"> | string | null
    apartment_size_ft?: StringNullableFilter<"Plots"> | string | null
    shop_size?: StringNullableFilter<"Plots"> | string | null
    office_size?: StringNullableFilter<"Plots"> | string | null
    plot_price?: IntNullableFilter<"Plots"> | number | null
    plot_rent?: IntNullableFilter<"Plots"> | number | null
    banglow_price?: StringNullableFilter<"Plots"> | string | null
    banglow_rent?: StringNullableFilter<"Plots"> | string | null
    direction?: StringNullableFilter<"Plots"> | string | null
    is_corner?: StringNullableFilter<"Plots"> | string | null
    payment_mode?: StringNullableFilter<"Plots"> | string | null
    ins_total_price?: IntNullableFilter<"Plots"> | number | null
    ins_down_payment?: IntNullableFilter<"Plots"> | number | null
    ins_possession_Amount?: IntNullableFilter<"Plots"> | number | null
    ins_period?: IntNullableFilter<"Plots"> | number | null
    remarks?: StringNullableFilter<"Plots"> | string | null
    imagePath?: StringNullableFilter<"Plots"> | string | null
    createdAt?: DateTimeFilter<"Plots"> | Date | string
    updatedAt?: DateTimeFilter<"Plots"> | Date | string
    societies?: XOR<SocietiesScalarRelationFilter, SocietiesWhereInput>
  }, "id">

  export type PlotsOrderByWithAggregationInput = {
    id?: SortOrder
    society_id?: SortOrder
    date?: SortOrderInput | SortOrder
    plot_type?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    apartment_size_ft?: SortOrderInput | SortOrder
    shop_size?: SortOrderInput | SortOrder
    office_size?: SortOrderInput | SortOrder
    plot_price?: SortOrderInput | SortOrder
    plot_rent?: SortOrderInput | SortOrder
    banglow_price?: SortOrderInput | SortOrder
    banglow_rent?: SortOrderInput | SortOrder
    direction?: SortOrderInput | SortOrder
    is_corner?: SortOrderInput | SortOrder
    payment_mode?: SortOrderInput | SortOrder
    ins_total_price?: SortOrderInput | SortOrder
    ins_down_payment?: SortOrderInput | SortOrder
    ins_possession_Amount?: SortOrderInput | SortOrder
    ins_period?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PlotsCountOrderByAggregateInput
    _avg?: PlotsAvgOrderByAggregateInput
    _max?: PlotsMaxOrderByAggregateInput
    _min?: PlotsMinOrderByAggregateInput
    _sum?: PlotsSumOrderByAggregateInput
  }

  export type PlotsScalarWhereWithAggregatesInput = {
    AND?: PlotsScalarWhereWithAggregatesInput | PlotsScalarWhereWithAggregatesInput[]
    OR?: PlotsScalarWhereWithAggregatesInput[]
    NOT?: PlotsScalarWhereWithAggregatesInput | PlotsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Plots"> | number
    society_id?: IntWithAggregatesFilter<"Plots"> | number
    date?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    plot_type?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    type?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    size?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    apartment_size?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    apartment_size_ft?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    shop_size?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    office_size?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    plot_price?: IntNullableWithAggregatesFilter<"Plots"> | number | null
    plot_rent?: IntNullableWithAggregatesFilter<"Plots"> | number | null
    banglow_price?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    banglow_rent?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    direction?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    is_corner?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    payment_mode?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    ins_total_price?: IntNullableWithAggregatesFilter<"Plots"> | number | null
    ins_down_payment?: IntNullableWithAggregatesFilter<"Plots"> | number | null
    ins_possession_Amount?: IntNullableWithAggregatesFilter<"Plots"> | number | null
    ins_period?: IntNullableWithAggregatesFilter<"Plots"> | number | null
    remarks?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    imagePath?: StringNullableWithAggregatesFilter<"Plots"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Plots"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Plots"> | Date | string
  }

  export type Plots_historyWhereInput = {
    AND?: Plots_historyWhereInput | Plots_historyWhereInput[]
    OR?: Plots_historyWhereInput[]
    NOT?: Plots_historyWhereInput | Plots_historyWhereInput[]
    id?: IntFilter<"Plots_history"> | number
    society_id?: IntFilter<"Plots_history"> | number
    plot_id?: IntFilter<"Plots_history"> | number
    date?: StringNullableFilter<"Plots_history"> | string | null
    plot_type?: StringNullableFilter<"Plots_history"> | string | null
    type?: StringNullableFilter<"Plots_history"> | string | null
    size?: StringNullableFilter<"Plots_history"> | string | null
    apartment_size?: StringNullableFilter<"Plots_history"> | string | null
    apartment_size_ft?: StringNullableFilter<"Plots_history"> | string | null
    shop_size?: StringNullableFilter<"Plots_history"> | string | null
    office_size?: StringNullableFilter<"Plots_history"> | string | null
    plot_price?: IntNullableFilter<"Plots_history"> | number | null
    plot_rent?: IntNullableFilter<"Plots_history"> | number | null
    banglow_price?: StringNullableFilter<"Plots_history"> | string | null
    banglow_rent?: StringNullableFilter<"Plots_history"> | string | null
    direction?: StringNullableFilter<"Plots_history"> | string | null
    is_corner?: StringNullableFilter<"Plots_history"> | string | null
    payment_mode?: StringNullableFilter<"Plots_history"> | string | null
    ins_total_price?: IntNullableFilter<"Plots_history"> | number | null
    ins_down_payment?: IntNullableFilter<"Plots_history"> | number | null
    ins_possession_Amount?: IntNullableFilter<"Plots_history"> | number | null
    ins_period?: IntNullableFilter<"Plots_history"> | number | null
    remarks?: StringNullableFilter<"Plots_history"> | string | null
    imagePath?: StringNullableFilter<"Plots_history"> | string | null
    createdAt?: DateTimeFilter<"Plots_history"> | Date | string
    updatedAt?: DateTimeFilter<"Plots_history"> | Date | string
  }

  export type Plots_historyOrderByWithRelationInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_id?: SortOrder
    date?: SortOrderInput | SortOrder
    plot_type?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    apartment_size_ft?: SortOrderInput | SortOrder
    shop_size?: SortOrderInput | SortOrder
    office_size?: SortOrderInput | SortOrder
    plot_price?: SortOrderInput | SortOrder
    plot_rent?: SortOrderInput | SortOrder
    banglow_price?: SortOrderInput | SortOrder
    banglow_rent?: SortOrderInput | SortOrder
    direction?: SortOrderInput | SortOrder
    is_corner?: SortOrderInput | SortOrder
    payment_mode?: SortOrderInput | SortOrder
    ins_total_price?: SortOrderInput | SortOrder
    ins_down_payment?: SortOrderInput | SortOrder
    ins_possession_Amount?: SortOrderInput | SortOrder
    ins_period?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Plots_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Plots_historyWhereInput | Plots_historyWhereInput[]
    OR?: Plots_historyWhereInput[]
    NOT?: Plots_historyWhereInput | Plots_historyWhereInput[]
    society_id?: IntFilter<"Plots_history"> | number
    plot_id?: IntFilter<"Plots_history"> | number
    date?: StringNullableFilter<"Plots_history"> | string | null
    plot_type?: StringNullableFilter<"Plots_history"> | string | null
    type?: StringNullableFilter<"Plots_history"> | string | null
    size?: StringNullableFilter<"Plots_history"> | string | null
    apartment_size?: StringNullableFilter<"Plots_history"> | string | null
    apartment_size_ft?: StringNullableFilter<"Plots_history"> | string | null
    shop_size?: StringNullableFilter<"Plots_history"> | string | null
    office_size?: StringNullableFilter<"Plots_history"> | string | null
    plot_price?: IntNullableFilter<"Plots_history"> | number | null
    plot_rent?: IntNullableFilter<"Plots_history"> | number | null
    banglow_price?: StringNullableFilter<"Plots_history"> | string | null
    banglow_rent?: StringNullableFilter<"Plots_history"> | string | null
    direction?: StringNullableFilter<"Plots_history"> | string | null
    is_corner?: StringNullableFilter<"Plots_history"> | string | null
    payment_mode?: StringNullableFilter<"Plots_history"> | string | null
    ins_total_price?: IntNullableFilter<"Plots_history"> | number | null
    ins_down_payment?: IntNullableFilter<"Plots_history"> | number | null
    ins_possession_Amount?: IntNullableFilter<"Plots_history"> | number | null
    ins_period?: IntNullableFilter<"Plots_history"> | number | null
    remarks?: StringNullableFilter<"Plots_history"> | string | null
    imagePath?: StringNullableFilter<"Plots_history"> | string | null
    createdAt?: DateTimeFilter<"Plots_history"> | Date | string
    updatedAt?: DateTimeFilter<"Plots_history"> | Date | string
  }, "id">

  export type Plots_historyOrderByWithAggregationInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_id?: SortOrder
    date?: SortOrderInput | SortOrder
    plot_type?: SortOrderInput | SortOrder
    type?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    apartment_size_ft?: SortOrderInput | SortOrder
    shop_size?: SortOrderInput | SortOrder
    office_size?: SortOrderInput | SortOrder
    plot_price?: SortOrderInput | SortOrder
    plot_rent?: SortOrderInput | SortOrder
    banglow_price?: SortOrderInput | SortOrder
    banglow_rent?: SortOrderInput | SortOrder
    direction?: SortOrderInput | SortOrder
    is_corner?: SortOrderInput | SortOrder
    payment_mode?: SortOrderInput | SortOrder
    ins_total_price?: SortOrderInput | SortOrder
    ins_down_payment?: SortOrderInput | SortOrder
    ins_possession_Amount?: SortOrderInput | SortOrder
    ins_period?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    imagePath?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: Plots_historyCountOrderByAggregateInput
    _avg?: Plots_historyAvgOrderByAggregateInput
    _max?: Plots_historyMaxOrderByAggregateInput
    _min?: Plots_historyMinOrderByAggregateInput
    _sum?: Plots_historySumOrderByAggregateInput
  }

  export type Plots_historyScalarWhereWithAggregatesInput = {
    AND?: Plots_historyScalarWhereWithAggregatesInput | Plots_historyScalarWhereWithAggregatesInput[]
    OR?: Plots_historyScalarWhereWithAggregatesInput[]
    NOT?: Plots_historyScalarWhereWithAggregatesInput | Plots_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Plots_history"> | number
    society_id?: IntWithAggregatesFilter<"Plots_history"> | number
    plot_id?: IntWithAggregatesFilter<"Plots_history"> | number
    date?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    plot_type?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    type?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    size?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    apartment_size?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    apartment_size_ft?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    shop_size?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    office_size?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    plot_price?: IntNullableWithAggregatesFilter<"Plots_history"> | number | null
    plot_rent?: IntNullableWithAggregatesFilter<"Plots_history"> | number | null
    banglow_price?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    banglow_rent?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    direction?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    is_corner?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    payment_mode?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    ins_total_price?: IntNullableWithAggregatesFilter<"Plots_history"> | number | null
    ins_down_payment?: IntNullableWithAggregatesFilter<"Plots_history"> | number | null
    ins_possession_Amount?: IntNullableWithAggregatesFilter<"Plots_history"> | number | null
    ins_period?: IntNullableWithAggregatesFilter<"Plots_history"> | number | null
    remarks?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    imagePath?: StringNullableWithAggregatesFilter<"Plots_history"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Plots_history"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Plots_history"> | Date | string
  }

  export type PriceWhereInput = {
    AND?: PriceWhereInput | PriceWhereInput[]
    OR?: PriceWhereInput[]
    NOT?: PriceWhereInput | PriceWhereInput[]
    id?: IntFilter<"Price"> | number
    commercial_id?: IntFilter<"Price"> | number
    date?: StringNullableFilter<"Price"> | string | null
    property_type?: StringNullableFilter<"Price"> | string | null
    plot_size?: StringNullableFilter<"Price"> | string | null
    building_size?: StringNullableFilter<"Price"> | string | null
    total_floor?: StringNullableFilter<"Price"> | string | null
    building_size_sq?: StringNullableFilter<"Price"> | string | null
    shop_size?: StringNullableFilter<"Price"> | string | null
    office_size?: StringNullableFilter<"Price"> | string | null
    apartment_size?: StringNullableFilter<"Price"> | string | null
    warehouse_size?: StringNullableFilter<"Price"> | string | null
    total_bed?: StringNullableFilter<"Price"> | string | null
    payment_mode?: StringNullableFilter<"Price"> | string | null
    price?: IntNullableFilter<"Price"> | number | null
    rent?: IntNullableFilter<"Price"> | number | null
    total_price?: IntNullableFilter<"Price"> | number | null
    installment_period?: IntNullableFilter<"Price"> | number | null
    down_payment?: IntNullableFilter<"Price"> | number | null
    possession_amount?: IntNullableFilter<"Price"> | number | null
    remarks?: StringNullableFilter<"Price"> | string | null
    createdAt?: DateTimeFilter<"Price"> | Date | string
    updatedAt?: DateTimeFilter<"Price"> | Date | string
    commercial?: XOR<CommercialScalarRelationFilter, CommercialWhereInput>
  }

  export type PriceOrderByWithRelationInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    date?: SortOrderInput | SortOrder
    property_type?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    building_size?: SortOrderInput | SortOrder
    total_floor?: SortOrderInput | SortOrder
    building_size_sq?: SortOrderInput | SortOrder
    shop_size?: SortOrderInput | SortOrder
    office_size?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    warehouse_size?: SortOrderInput | SortOrder
    total_bed?: SortOrderInput | SortOrder
    payment_mode?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    rent?: SortOrderInput | SortOrder
    total_price?: SortOrderInput | SortOrder
    installment_period?: SortOrderInput | SortOrder
    down_payment?: SortOrderInput | SortOrder
    possession_amount?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    commercial?: CommercialOrderByWithRelationInput
  }

  export type PriceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PriceWhereInput | PriceWhereInput[]
    OR?: PriceWhereInput[]
    NOT?: PriceWhereInput | PriceWhereInput[]
    commercial_id?: IntFilter<"Price"> | number
    date?: StringNullableFilter<"Price"> | string | null
    property_type?: StringNullableFilter<"Price"> | string | null
    plot_size?: StringNullableFilter<"Price"> | string | null
    building_size?: StringNullableFilter<"Price"> | string | null
    total_floor?: StringNullableFilter<"Price"> | string | null
    building_size_sq?: StringNullableFilter<"Price"> | string | null
    shop_size?: StringNullableFilter<"Price"> | string | null
    office_size?: StringNullableFilter<"Price"> | string | null
    apartment_size?: StringNullableFilter<"Price"> | string | null
    warehouse_size?: StringNullableFilter<"Price"> | string | null
    total_bed?: StringNullableFilter<"Price"> | string | null
    payment_mode?: StringNullableFilter<"Price"> | string | null
    price?: IntNullableFilter<"Price"> | number | null
    rent?: IntNullableFilter<"Price"> | number | null
    total_price?: IntNullableFilter<"Price"> | number | null
    installment_period?: IntNullableFilter<"Price"> | number | null
    down_payment?: IntNullableFilter<"Price"> | number | null
    possession_amount?: IntNullableFilter<"Price"> | number | null
    remarks?: StringNullableFilter<"Price"> | string | null
    createdAt?: DateTimeFilter<"Price"> | Date | string
    updatedAt?: DateTimeFilter<"Price"> | Date | string
    commercial?: XOR<CommercialScalarRelationFilter, CommercialWhereInput>
  }, "id">

  export type PriceOrderByWithAggregationInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    date?: SortOrderInput | SortOrder
    property_type?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    building_size?: SortOrderInput | SortOrder
    total_floor?: SortOrderInput | SortOrder
    building_size_sq?: SortOrderInput | SortOrder
    shop_size?: SortOrderInput | SortOrder
    office_size?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    warehouse_size?: SortOrderInput | SortOrder
    total_bed?: SortOrderInput | SortOrder
    payment_mode?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    rent?: SortOrderInput | SortOrder
    total_price?: SortOrderInput | SortOrder
    installment_period?: SortOrderInput | SortOrder
    down_payment?: SortOrderInput | SortOrder
    possession_amount?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PriceCountOrderByAggregateInput
    _avg?: PriceAvgOrderByAggregateInput
    _max?: PriceMaxOrderByAggregateInput
    _min?: PriceMinOrderByAggregateInput
    _sum?: PriceSumOrderByAggregateInput
  }

  export type PriceScalarWhereWithAggregatesInput = {
    AND?: PriceScalarWhereWithAggregatesInput | PriceScalarWhereWithAggregatesInput[]
    OR?: PriceScalarWhereWithAggregatesInput[]
    NOT?: PriceScalarWhereWithAggregatesInput | PriceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Price"> | number
    commercial_id?: IntWithAggregatesFilter<"Price"> | number
    date?: StringNullableWithAggregatesFilter<"Price"> | string | null
    property_type?: StringNullableWithAggregatesFilter<"Price"> | string | null
    plot_size?: StringNullableWithAggregatesFilter<"Price"> | string | null
    building_size?: StringNullableWithAggregatesFilter<"Price"> | string | null
    total_floor?: StringNullableWithAggregatesFilter<"Price"> | string | null
    building_size_sq?: StringNullableWithAggregatesFilter<"Price"> | string | null
    shop_size?: StringNullableWithAggregatesFilter<"Price"> | string | null
    office_size?: StringNullableWithAggregatesFilter<"Price"> | string | null
    apartment_size?: StringNullableWithAggregatesFilter<"Price"> | string | null
    warehouse_size?: StringNullableWithAggregatesFilter<"Price"> | string | null
    total_bed?: StringNullableWithAggregatesFilter<"Price"> | string | null
    payment_mode?: StringNullableWithAggregatesFilter<"Price"> | string | null
    price?: IntNullableWithAggregatesFilter<"Price"> | number | null
    rent?: IntNullableWithAggregatesFilter<"Price"> | number | null
    total_price?: IntNullableWithAggregatesFilter<"Price"> | number | null
    installment_period?: IntNullableWithAggregatesFilter<"Price"> | number | null
    down_payment?: IntNullableWithAggregatesFilter<"Price"> | number | null
    possession_amount?: IntNullableWithAggregatesFilter<"Price"> | number | null
    remarks?: StringNullableWithAggregatesFilter<"Price"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Price"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Price"> | Date | string
  }

  export type Price_historyWhereInput = {
    AND?: Price_historyWhereInput | Price_historyWhereInput[]
    OR?: Price_historyWhereInput[]
    NOT?: Price_historyWhereInput | Price_historyWhereInput[]
    id?: IntFilter<"Price_history"> | number
    commercial_id?: IntFilter<"Price_history"> | number
    price_id?: IntFilter<"Price_history"> | number
    date?: StringNullableFilter<"Price_history"> | string | null
    property_type?: StringNullableFilter<"Price_history"> | string | null
    plot_size?: StringNullableFilter<"Price_history"> | string | null
    building_size?: StringNullableFilter<"Price_history"> | string | null
    total_floor?: StringNullableFilter<"Price_history"> | string | null
    building_size_sq?: StringNullableFilter<"Price_history"> | string | null
    shop_size?: StringNullableFilter<"Price_history"> | string | null
    office_size?: StringNullableFilter<"Price_history"> | string | null
    apartment_size?: StringNullableFilter<"Price_history"> | string | null
    warehouse_size?: StringNullableFilter<"Price_history"> | string | null
    total_bed?: StringNullableFilter<"Price_history"> | string | null
    payment_mode?: StringNullableFilter<"Price_history"> | string | null
    price?: IntNullableFilter<"Price_history"> | number | null
    rent?: IntNullableFilter<"Price_history"> | number | null
    total_price?: IntNullableFilter<"Price_history"> | number | null
    installment_period?: IntNullableFilter<"Price_history"> | number | null
    down_payment?: IntNullableFilter<"Price_history"> | number | null
    possession_amount?: IntNullableFilter<"Price_history"> | number | null
    remarks?: StringNullableFilter<"Price_history"> | string | null
    createdAt?: DateTimeFilter<"Price_history"> | Date | string
    updatedAt?: DateTimeFilter<"Price_history"> | Date | string
  }

  export type Price_historyOrderByWithRelationInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price_id?: SortOrder
    date?: SortOrderInput | SortOrder
    property_type?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    building_size?: SortOrderInput | SortOrder
    total_floor?: SortOrderInput | SortOrder
    building_size_sq?: SortOrderInput | SortOrder
    shop_size?: SortOrderInput | SortOrder
    office_size?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    warehouse_size?: SortOrderInput | SortOrder
    total_bed?: SortOrderInput | SortOrder
    payment_mode?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    rent?: SortOrderInput | SortOrder
    total_price?: SortOrderInput | SortOrder
    installment_period?: SortOrderInput | SortOrder
    down_payment?: SortOrderInput | SortOrder
    possession_amount?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Price_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: Price_historyWhereInput | Price_historyWhereInput[]
    OR?: Price_historyWhereInput[]
    NOT?: Price_historyWhereInput | Price_historyWhereInput[]
    commercial_id?: IntFilter<"Price_history"> | number
    price_id?: IntFilter<"Price_history"> | number
    date?: StringNullableFilter<"Price_history"> | string | null
    property_type?: StringNullableFilter<"Price_history"> | string | null
    plot_size?: StringNullableFilter<"Price_history"> | string | null
    building_size?: StringNullableFilter<"Price_history"> | string | null
    total_floor?: StringNullableFilter<"Price_history"> | string | null
    building_size_sq?: StringNullableFilter<"Price_history"> | string | null
    shop_size?: StringNullableFilter<"Price_history"> | string | null
    office_size?: StringNullableFilter<"Price_history"> | string | null
    apartment_size?: StringNullableFilter<"Price_history"> | string | null
    warehouse_size?: StringNullableFilter<"Price_history"> | string | null
    total_bed?: StringNullableFilter<"Price_history"> | string | null
    payment_mode?: StringNullableFilter<"Price_history"> | string | null
    price?: IntNullableFilter<"Price_history"> | number | null
    rent?: IntNullableFilter<"Price_history"> | number | null
    total_price?: IntNullableFilter<"Price_history"> | number | null
    installment_period?: IntNullableFilter<"Price_history"> | number | null
    down_payment?: IntNullableFilter<"Price_history"> | number | null
    possession_amount?: IntNullableFilter<"Price_history"> | number | null
    remarks?: StringNullableFilter<"Price_history"> | string | null
    createdAt?: DateTimeFilter<"Price_history"> | Date | string
    updatedAt?: DateTimeFilter<"Price_history"> | Date | string
  }, "id">

  export type Price_historyOrderByWithAggregationInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price_id?: SortOrder
    date?: SortOrderInput | SortOrder
    property_type?: SortOrderInput | SortOrder
    plot_size?: SortOrderInput | SortOrder
    building_size?: SortOrderInput | SortOrder
    total_floor?: SortOrderInput | SortOrder
    building_size_sq?: SortOrderInput | SortOrder
    shop_size?: SortOrderInput | SortOrder
    office_size?: SortOrderInput | SortOrder
    apartment_size?: SortOrderInput | SortOrder
    warehouse_size?: SortOrderInput | SortOrder
    total_bed?: SortOrderInput | SortOrder
    payment_mode?: SortOrderInput | SortOrder
    price?: SortOrderInput | SortOrder
    rent?: SortOrderInput | SortOrder
    total_price?: SortOrderInput | SortOrder
    installment_period?: SortOrderInput | SortOrder
    down_payment?: SortOrderInput | SortOrder
    possession_amount?: SortOrderInput | SortOrder
    remarks?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: Price_historyCountOrderByAggregateInput
    _avg?: Price_historyAvgOrderByAggregateInput
    _max?: Price_historyMaxOrderByAggregateInput
    _min?: Price_historyMinOrderByAggregateInput
    _sum?: Price_historySumOrderByAggregateInput
  }

  export type Price_historyScalarWhereWithAggregatesInput = {
    AND?: Price_historyScalarWhereWithAggregatesInput | Price_historyScalarWhereWithAggregatesInput[]
    OR?: Price_historyScalarWhereWithAggregatesInput[]
    NOT?: Price_historyScalarWhereWithAggregatesInput | Price_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Price_history"> | number
    commercial_id?: IntWithAggregatesFilter<"Price_history"> | number
    price_id?: IntWithAggregatesFilter<"Price_history"> | number
    date?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    property_type?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    plot_size?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    building_size?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    total_floor?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    building_size_sq?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    shop_size?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    office_size?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    apartment_size?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    warehouse_size?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    total_bed?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    payment_mode?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    price?: IntNullableWithAggregatesFilter<"Price_history"> | number | null
    rent?: IntNullableWithAggregatesFilter<"Price_history"> | number | null
    total_price?: IntNullableWithAggregatesFilter<"Price_history"> | number | null
    installment_period?: IntNullableWithAggregatesFilter<"Price_history"> | number | null
    down_payment?: IntNullableWithAggregatesFilter<"Price_history"> | number | null
    possession_amount?: IntNullableWithAggregatesFilter<"Price_history"> | number | null
    remarks?: StringNullableWithAggregatesFilter<"Price_history"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Price_history"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Price_history"> | Date | string
  }

  export type UserCreateInput = {
    name: string
    email: string
    contact?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    contact?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateManyInput = {
    id?: number
    name: string
    email: string
    contact?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    contact?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BuildingsCreateInput = {
    name: string
    city: string
    status?: string | null
    is_centrally_air_conditioned?: string | null
    has_security?: string | null
    has_escalators?: string | null
    has_food_court?: string | null
    has_entertainment_area?: string | null
    has_none?: string | null
    type_mixed_use?: string | null
    type_retail?: string | null
    type_offices?: string | null
    type_apartments?: string | null
    type_other?: string | null
    zone?: string | null
    area?: string | null
    address?: string | null
    plot_size?: number | null
    construction_area?: number | null
    construction_year?: number | null
    launch_year?: number | null
    builder_name?: string | null
    building_rank?: string | null
    total_floors?: number | null
    parking_floors?: number | null
    apartment_floors?: number | null
    apartments_count?: number | null
    apartments_studio?: string | null
    apartments_has_type_1_bed?: string | null
    apartments_has_type_2_bed?: string | null
    apartments_has_type_3_bed?: string | null
    apartments_has_type_4_bed?: string | null
    apartments_has_type_5_bed?: string | null
    apartments_has_type_duplex?: string | null
    apartments_has_type_penthouse?: string | null
    apartments_has_servant_quarter?: string | null
    has_furnished?: string | null
    has_semi_furnished?: string | null
    has_service_apartments?: string | null
    has_hotel_suites_apartments?: string | null
    apartments_maintenance_fee?: number | null
    retail_floors_count?: number | null
    retail_floors_shops_count?: number | null
    retail_floors_maintenance_fee?: number | null
    retail_floors_brands?: string | null
    has_fashion_health?: string | null
    has_electronics_appliancecs?: string | null
    has_home_living?: string | null
    has_restaurants_courts?: string | null
    has_bakery_ice?: string | null
    has_grocery_supermarkets?: string | null
    has_banks_atm?: string | null
    has_real_estate?: string | null
    has_labs_pharmacies?: string | null
    has_play_fitness?: string | null
    has_swimming_pool?: string | null
    has_cinema?: string | null
    office_floors_count?: number | null
    offices_count?: number | null
    office_maintenance_fee?: number | null
    survey_date?: string | null
    surveyor_name?: string | null
    building_survery_remarks?: string | null
    building_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    floors?: FloorsCreateNestedManyWithoutBuildingsInput
  }

  export type BuildingsUncheckedCreateInput = {
    id?: number
    name: string
    city: string
    status?: string | null
    is_centrally_air_conditioned?: string | null
    has_security?: string | null
    has_escalators?: string | null
    has_food_court?: string | null
    has_entertainment_area?: string | null
    has_none?: string | null
    type_mixed_use?: string | null
    type_retail?: string | null
    type_offices?: string | null
    type_apartments?: string | null
    type_other?: string | null
    zone?: string | null
    area?: string | null
    address?: string | null
    plot_size?: number | null
    construction_area?: number | null
    construction_year?: number | null
    launch_year?: number | null
    builder_name?: string | null
    building_rank?: string | null
    total_floors?: number | null
    parking_floors?: number | null
    apartment_floors?: number | null
    apartments_count?: number | null
    apartments_studio?: string | null
    apartments_has_type_1_bed?: string | null
    apartments_has_type_2_bed?: string | null
    apartments_has_type_3_bed?: string | null
    apartments_has_type_4_bed?: string | null
    apartments_has_type_5_bed?: string | null
    apartments_has_type_duplex?: string | null
    apartments_has_type_penthouse?: string | null
    apartments_has_servant_quarter?: string | null
    has_furnished?: string | null
    has_semi_furnished?: string | null
    has_service_apartments?: string | null
    has_hotel_suites_apartments?: string | null
    apartments_maintenance_fee?: number | null
    retail_floors_count?: number | null
    retail_floors_shops_count?: number | null
    retail_floors_maintenance_fee?: number | null
    retail_floors_brands?: string | null
    has_fashion_health?: string | null
    has_electronics_appliancecs?: string | null
    has_home_living?: string | null
    has_restaurants_courts?: string | null
    has_bakery_ice?: string | null
    has_grocery_supermarkets?: string | null
    has_banks_atm?: string | null
    has_real_estate?: string | null
    has_labs_pharmacies?: string | null
    has_play_fitness?: string | null
    has_swimming_pool?: string | null
    has_cinema?: string | null
    office_floors_count?: number | null
    offices_count?: number | null
    office_maintenance_fee?: number | null
    survey_date?: string | null
    surveyor_name?: string | null
    building_survery_remarks?: string | null
    building_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    floors?: FloorsUncheckedCreateNestedManyWithoutBuildingsInput
  }

  export type BuildingsUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    floors?: FloorsUpdateManyWithoutBuildingsNestedInput
  }

  export type BuildingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    floors?: FloorsUncheckedUpdateManyWithoutBuildingsNestedInput
  }

  export type BuildingsCreateManyInput = {
    id?: number
    name: string
    city: string
    status?: string | null
    is_centrally_air_conditioned?: string | null
    has_security?: string | null
    has_escalators?: string | null
    has_food_court?: string | null
    has_entertainment_area?: string | null
    has_none?: string | null
    type_mixed_use?: string | null
    type_retail?: string | null
    type_offices?: string | null
    type_apartments?: string | null
    type_other?: string | null
    zone?: string | null
    area?: string | null
    address?: string | null
    plot_size?: number | null
    construction_area?: number | null
    construction_year?: number | null
    launch_year?: number | null
    builder_name?: string | null
    building_rank?: string | null
    total_floors?: number | null
    parking_floors?: number | null
    apartment_floors?: number | null
    apartments_count?: number | null
    apartments_studio?: string | null
    apartments_has_type_1_bed?: string | null
    apartments_has_type_2_bed?: string | null
    apartments_has_type_3_bed?: string | null
    apartments_has_type_4_bed?: string | null
    apartments_has_type_5_bed?: string | null
    apartments_has_type_duplex?: string | null
    apartments_has_type_penthouse?: string | null
    apartments_has_servant_quarter?: string | null
    has_furnished?: string | null
    has_semi_furnished?: string | null
    has_service_apartments?: string | null
    has_hotel_suites_apartments?: string | null
    apartments_maintenance_fee?: number | null
    retail_floors_count?: number | null
    retail_floors_shops_count?: number | null
    retail_floors_maintenance_fee?: number | null
    retail_floors_brands?: string | null
    has_fashion_health?: string | null
    has_electronics_appliancecs?: string | null
    has_home_living?: string | null
    has_restaurants_courts?: string | null
    has_bakery_ice?: string | null
    has_grocery_supermarkets?: string | null
    has_banks_atm?: string | null
    has_real_estate?: string | null
    has_labs_pharmacies?: string | null
    has_play_fitness?: string | null
    has_swimming_pool?: string | null
    has_cinema?: string | null
    office_floors_count?: number | null
    offices_count?: number | null
    office_maintenance_fee?: number | null
    survey_date?: string | null
    surveyor_name?: string | null
    building_survery_remarks?: string | null
    building_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BuildingsUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BuildingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Buildings_historyCreateInput = {
    building_id: number
    name: string
    city: string
    status?: string | null
    is_centrally_air_conditioned?: string | null
    has_security?: string | null
    has_escalators?: string | null
    has_food_court?: string | null
    has_entertainment_area?: string | null
    has_none?: string | null
    type_mixed_use?: string | null
    type_retail?: string | null
    type_offices?: string | null
    type_apartments?: string | null
    type_other?: string | null
    zone?: string | null
    area?: string | null
    address?: string | null
    plot_size?: number | null
    construction_area?: number | null
    construction_year?: number | null
    launch_year?: number | null
    builder_name?: string | null
    building_rank?: string | null
    total_floors?: number | null
    parking_floors?: number | null
    apartment_floors?: number | null
    apartments_count?: number | null
    apartments_studio?: string | null
    apartments_has_type_1_bed?: string | null
    apartments_has_type_2_bed?: string | null
    apartments_has_type_3_bed?: string | null
    apartments_has_type_4_bed?: string | null
    apartments_has_type_5_bed?: string | null
    apartments_has_type_duplex?: string | null
    apartments_has_type_penthouse?: string | null
    apartments_has_servant_quarter?: string | null
    has_furnished?: string | null
    has_semi_furnished?: string | null
    has_service_apartments?: string | null
    has_hotel_suites_apartments?: string | null
    apartments_maintenance_fee?: number | null
    retail_floors_count?: number | null
    retail_floors_shops_count?: number | null
    retail_floors_maintenance_fee?: number | null
    retail_floors_brands?: string | null
    has_fashion_health?: string | null
    has_electronics_appliancecs?: string | null
    has_home_living?: string | null
    has_restaurants_courts?: string | null
    has_bakery_ice?: string | null
    has_grocery_supermarkets?: string | null
    has_banks_atm?: string | null
    has_real_estate?: string | null
    has_labs_pharmacies?: string | null
    has_play_fitness?: string | null
    has_swimming_pool?: string | null
    has_cinema?: string | null
    office_floors_count?: number | null
    offices_count?: number | null
    office_maintenance_fee?: number | null
    survey_date?: string | null
    surveyor_name?: string | null
    building_survery_remarks?: string | null
    building_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Buildings_historyUncheckedCreateInput = {
    id?: number
    building_id: number
    name: string
    city: string
    status?: string | null
    is_centrally_air_conditioned?: string | null
    has_security?: string | null
    has_escalators?: string | null
    has_food_court?: string | null
    has_entertainment_area?: string | null
    has_none?: string | null
    type_mixed_use?: string | null
    type_retail?: string | null
    type_offices?: string | null
    type_apartments?: string | null
    type_other?: string | null
    zone?: string | null
    area?: string | null
    address?: string | null
    plot_size?: number | null
    construction_area?: number | null
    construction_year?: number | null
    launch_year?: number | null
    builder_name?: string | null
    building_rank?: string | null
    total_floors?: number | null
    parking_floors?: number | null
    apartment_floors?: number | null
    apartments_count?: number | null
    apartments_studio?: string | null
    apartments_has_type_1_bed?: string | null
    apartments_has_type_2_bed?: string | null
    apartments_has_type_3_bed?: string | null
    apartments_has_type_4_bed?: string | null
    apartments_has_type_5_bed?: string | null
    apartments_has_type_duplex?: string | null
    apartments_has_type_penthouse?: string | null
    apartments_has_servant_quarter?: string | null
    has_furnished?: string | null
    has_semi_furnished?: string | null
    has_service_apartments?: string | null
    has_hotel_suites_apartments?: string | null
    apartments_maintenance_fee?: number | null
    retail_floors_count?: number | null
    retail_floors_shops_count?: number | null
    retail_floors_maintenance_fee?: number | null
    retail_floors_brands?: string | null
    has_fashion_health?: string | null
    has_electronics_appliancecs?: string | null
    has_home_living?: string | null
    has_restaurants_courts?: string | null
    has_bakery_ice?: string | null
    has_grocery_supermarkets?: string | null
    has_banks_atm?: string | null
    has_real_estate?: string | null
    has_labs_pharmacies?: string | null
    has_play_fitness?: string | null
    has_swimming_pool?: string | null
    has_cinema?: string | null
    office_floors_count?: number | null
    offices_count?: number | null
    office_maintenance_fee?: number | null
    survey_date?: string | null
    surveyor_name?: string | null
    building_survery_remarks?: string | null
    building_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Buildings_historyUpdateInput = {
    building_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Buildings_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    building_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Buildings_historyCreateManyInput = {
    id?: number
    building_id: number
    name: string
    city: string
    status?: string | null
    is_centrally_air_conditioned?: string | null
    has_security?: string | null
    has_escalators?: string | null
    has_food_court?: string | null
    has_entertainment_area?: string | null
    has_none?: string | null
    type_mixed_use?: string | null
    type_retail?: string | null
    type_offices?: string | null
    type_apartments?: string | null
    type_other?: string | null
    zone?: string | null
    area?: string | null
    address?: string | null
    plot_size?: number | null
    construction_area?: number | null
    construction_year?: number | null
    launch_year?: number | null
    builder_name?: string | null
    building_rank?: string | null
    total_floors?: number | null
    parking_floors?: number | null
    apartment_floors?: number | null
    apartments_count?: number | null
    apartments_studio?: string | null
    apartments_has_type_1_bed?: string | null
    apartments_has_type_2_bed?: string | null
    apartments_has_type_3_bed?: string | null
    apartments_has_type_4_bed?: string | null
    apartments_has_type_5_bed?: string | null
    apartments_has_type_duplex?: string | null
    apartments_has_type_penthouse?: string | null
    apartments_has_servant_quarter?: string | null
    has_furnished?: string | null
    has_semi_furnished?: string | null
    has_service_apartments?: string | null
    has_hotel_suites_apartments?: string | null
    apartments_maintenance_fee?: number | null
    retail_floors_count?: number | null
    retail_floors_shops_count?: number | null
    retail_floors_maintenance_fee?: number | null
    retail_floors_brands?: string | null
    has_fashion_health?: string | null
    has_electronics_appliancecs?: string | null
    has_home_living?: string | null
    has_restaurants_courts?: string | null
    has_bakery_ice?: string | null
    has_grocery_supermarkets?: string | null
    has_banks_atm?: string | null
    has_real_estate?: string | null
    has_labs_pharmacies?: string | null
    has_play_fitness?: string | null
    has_swimming_pool?: string | null
    has_cinema?: string | null
    office_floors_count?: number | null
    offices_count?: number | null
    office_maintenance_fee?: number | null
    survey_date?: string | null
    surveyor_name?: string | null
    building_survery_remarks?: string | null
    building_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Buildings_historyUpdateManyMutationInput = {
    building_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Buildings_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    building_id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FloorsCreateInput = {
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    buildings: BuildingsCreateNestedOneWithoutFloorsInput
  }

  export type FloorsUncheckedCreateInput = {
    id?: number
    building_id: number
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FloorsUpdateInput = {
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    buildings?: BuildingsUpdateOneRequiredWithoutFloorsNestedInput
  }

  export type FloorsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    building_id?: IntFieldUpdateOperationsInput | number
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FloorsCreateManyInput = {
    id?: number
    building_id: number
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FloorsUpdateManyMutationInput = {
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FloorsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    building_id?: IntFieldUpdateOperationsInput | number
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Floors_historyCreateInput = {
    building_id: number
    floor_id: number
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Floors_historyUncheckedCreateInput = {
    id?: number
    building_id: number
    floor_id: number
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Floors_historyUpdateInput = {
    building_id?: IntFieldUpdateOperationsInput | number
    floor_id?: IntFieldUpdateOperationsInput | number
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Floors_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    building_id?: IntFieldUpdateOperationsInput | number
    floor_id?: IntFieldUpdateOperationsInput | number
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Floors_historyCreateManyInput = {
    id?: number
    building_id: number
    floor_id: number
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Floors_historyUpdateManyMutationInput = {
    building_id?: IntFieldUpdateOperationsInput | number
    floor_id?: IntFieldUpdateOperationsInput | number
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Floors_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    building_id?: IntFieldUpdateOperationsInput | number
    floor_id?: IntFieldUpdateOperationsInput | number
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SocietiesCreateInput = {
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Plots?: PlotsCreateNestedManyWithoutSocietiesInput
    Houses?: HousesCreateNestedManyWithoutSocietiesInput
  }

  export type SocietiesUncheckedCreateInput = {
    id?: number
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Plots?: PlotsUncheckedCreateNestedManyWithoutSocietiesInput
    Houses?: HousesUncheckedCreateNestedManyWithoutSocietiesInput
  }

  export type SocietiesUpdateInput = {
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Plots?: PlotsUpdateManyWithoutSocietiesNestedInput
    Houses?: HousesUpdateManyWithoutSocietiesNestedInput
  }

  export type SocietiesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Plots?: PlotsUncheckedUpdateManyWithoutSocietiesNestedInput
    Houses?: HousesUncheckedUpdateManyWithoutSocietiesNestedInput
  }

  export type SocietiesCreateManyInput = {
    id?: number
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type SocietiesUpdateManyMutationInput = {
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SocietiesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Societies_historyCreateInput = {
    society_id: number
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Societies_historyUncheckedCreateInput = {
    id?: number
    society_id: number
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Societies_historyUpdateInput = {
    society_id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Societies_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    society_id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Societies_historyCreateManyInput = {
    id?: number
    society_id: number
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Societies_historyUpdateManyMutationInput = {
    society_id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Societies_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    society_id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommercialCreateInput = {
    survey_date?: string | null
    city?: string | null
    commercial_zone_name?: string | null
    zone?: string | null
    type?: string | null
    location?: string | null
    project_status?: string | null
    launch_year?: number | null
    grade?: string | null
    area?: number | null
    occupancy?: number | null
    total_plots?: number | null
    total_shops?: number | null
    total_offices?: number | null
    total_apartments?: number | null
    property_feature?: string | null
    property_title?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Price?: PriceCreateNestedManyWithoutCommercialInput
  }

  export type CommercialUncheckedCreateInput = {
    id?: number
    survey_date?: string | null
    city?: string | null
    commercial_zone_name?: string | null
    zone?: string | null
    type?: string | null
    location?: string | null
    project_status?: string | null
    launch_year?: number | null
    grade?: string | null
    area?: number | null
    occupancy?: number | null
    total_plots?: number | null
    total_shops?: number | null
    total_offices?: number | null
    total_apartments?: number | null
    property_feature?: string | null
    property_title?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Price?: PriceUncheckedCreateNestedManyWithoutCommercialInput
  }

  export type CommercialUpdateInput = {
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Price?: PriceUpdateManyWithoutCommercialNestedInput
  }

  export type CommercialUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Price?: PriceUncheckedUpdateManyWithoutCommercialNestedInput
  }

  export type CommercialCreateManyInput = {
    id?: number
    survey_date?: string | null
    city?: string | null
    commercial_zone_name?: string | null
    zone?: string | null
    type?: string | null
    location?: string | null
    project_status?: string | null
    launch_year?: number | null
    grade?: string | null
    area?: number | null
    occupancy?: number | null
    total_plots?: number | null
    total_shops?: number | null
    total_offices?: number | null
    total_apartments?: number | null
    property_feature?: string | null
    property_title?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CommercialUpdateManyMutationInput = {
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommercialUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Commercial_historyCreateInput = {
    commercial_id: number
    survey_date?: string | null
    city?: string | null
    commercial_zone_name?: string | null
    zone?: string | null
    type?: string | null
    location?: string | null
    project_status?: string | null
    launch_year?: string | null
    grade?: string | null
    area?: number | null
    occupancy?: number | null
    total_plots?: number | null
    total_shops?: number | null
    total_offices?: number | null
    total_apartments?: number | null
    property_feature?: string | null
    property_title?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Commercial_historyUncheckedCreateInput = {
    id?: number
    commercial_id: number
    survey_date?: string | null
    city?: string | null
    commercial_zone_name?: string | null
    zone?: string | null
    type?: string | null
    location?: string | null
    project_status?: string | null
    launch_year?: string | null
    grade?: string | null
    area?: number | null
    occupancy?: number | null
    total_plots?: number | null
    total_shops?: number | null
    total_offices?: number | null
    total_apartments?: number | null
    property_feature?: string | null
    property_title?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Commercial_historyUpdateInput = {
    commercial_id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Commercial_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    commercial_id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Commercial_historyCreateManyInput = {
    id?: number
    commercial_id: number
    survey_date?: string | null
    city?: string | null
    commercial_zone_name?: string | null
    zone?: string | null
    type?: string | null
    location?: string | null
    project_status?: string | null
    launch_year?: string | null
    grade?: string | null
    area?: number | null
    occupancy?: number | null
    total_plots?: number | null
    total_shops?: number | null
    total_offices?: number | null
    total_apartments?: number | null
    property_feature?: string | null
    property_title?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Commercial_historyUpdateManyMutationInput = {
    commercial_id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Commercial_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    commercial_id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HousesCreateInput = {
    type?: string | null
    size?: string | null
    price?: string | null
    direction?: string | null
    is_corner?: string | null
    condition?: string | null
    floors?: string | null
    has_basement?: string | null
    construction_year?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    societies: SocietiesCreateNestedOneWithoutHousesInput
  }

  export type HousesUncheckedCreateInput = {
    id?: number
    society_id: number
    type?: string | null
    size?: string | null
    price?: string | null
    direction?: string | null
    is_corner?: string | null
    condition?: string | null
    floors?: string | null
    has_basement?: string | null
    construction_year?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HousesUpdateInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    floors?: NullableStringFieldUpdateOperationsInput | string | null
    has_basement?: NullableStringFieldUpdateOperationsInput | string | null
    construction_year?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    societies?: SocietiesUpdateOneRequiredWithoutHousesNestedInput
  }

  export type HousesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    society_id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    floors?: NullableStringFieldUpdateOperationsInput | string | null
    has_basement?: NullableStringFieldUpdateOperationsInput | string | null
    construction_year?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HousesCreateManyInput = {
    id?: number
    society_id: number
    type?: string | null
    size?: string | null
    price?: string | null
    direction?: string | null
    is_corner?: string | null
    condition?: string | null
    floors?: string | null
    has_basement?: string | null
    construction_year?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HousesUpdateManyMutationInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    floors?: NullableStringFieldUpdateOperationsInput | string | null
    has_basement?: NullableStringFieldUpdateOperationsInput | string | null
    construction_year?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HousesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    society_id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    floors?: NullableStringFieldUpdateOperationsInput | string | null
    has_basement?: NullableStringFieldUpdateOperationsInput | string | null
    construction_year?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlotsCreateInput = {
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    societies: SocietiesCreateNestedOneWithoutPlotsInput
  }

  export type PlotsUncheckedCreateInput = {
    id?: number
    society_id: number
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlotsUpdateInput = {
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    societies?: SocietiesUpdateOneRequiredWithoutPlotsNestedInput
  }

  export type PlotsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    society_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlotsCreateManyInput = {
    id?: number
    society_id: number
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlotsUpdateManyMutationInput = {
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlotsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    society_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Plots_historyCreateInput = {
    society_id: number
    plot_id: number
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Plots_historyUncheckedCreateInput = {
    id?: number
    society_id: number
    plot_id: number
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Plots_historyUpdateInput = {
    society_id?: IntFieldUpdateOperationsInput | number
    plot_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Plots_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    society_id?: IntFieldUpdateOperationsInput | number
    plot_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Plots_historyCreateManyInput = {
    id?: number
    society_id: number
    plot_id: number
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Plots_historyUpdateManyMutationInput = {
    society_id?: IntFieldUpdateOperationsInput | number
    plot_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Plots_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    society_id?: IntFieldUpdateOperationsInput | number
    plot_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceCreateInput = {
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    commercial: CommercialCreateNestedOneWithoutPriceInput
  }

  export type PriceUncheckedCreateInput = {
    id?: number
    commercial_id: number
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceUpdateInput = {
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    commercial?: CommercialUpdateOneRequiredWithoutPriceNestedInput
  }

  export type PriceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    commercial_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceCreateManyInput = {
    id?: number
    commercial_id: number
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceUpdateManyMutationInput = {
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    commercial_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Price_historyCreateInput = {
    commercial_id: number
    price_id: number
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Price_historyUncheckedCreateInput = {
    id?: number
    commercial_id: number
    price_id: number
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Price_historyUpdateInput = {
    commercial_id?: IntFieldUpdateOperationsInput | number
    price_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Price_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    commercial_id?: IntFieldUpdateOperationsInput | number
    price_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Price_historyCreateManyInput = {
    id?: number
    commercial_id: number
    price_id: number
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type Price_historyUpdateManyMutationInput = {
    commercial_id?: IntFieldUpdateOperationsInput | number
    price_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type Price_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    commercial_id?: IntFieldUpdateOperationsInput | number
    price_id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    contact?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloorsListRelationFilter = {
    every?: FloorsWhereInput
    some?: FloorsWhereInput
    none?: FloorsWhereInput
  }

  export type FloorsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type BuildingsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrder
    is_centrally_air_conditioned?: SortOrder
    has_security?: SortOrder
    has_escalators?: SortOrder
    has_food_court?: SortOrder
    has_entertainment_area?: SortOrder
    has_none?: SortOrder
    type_mixed_use?: SortOrder
    type_retail?: SortOrder
    type_offices?: SortOrder
    type_apartments?: SortOrder
    type_other?: SortOrder
    zone?: SortOrder
    area?: SortOrder
    address?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    builder_name?: SortOrder
    building_rank?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_studio?: SortOrder
    apartments_has_type_1_bed?: SortOrder
    apartments_has_type_2_bed?: SortOrder
    apartments_has_type_3_bed?: SortOrder
    apartments_has_type_4_bed?: SortOrder
    apartments_has_type_5_bed?: SortOrder
    apartments_has_type_duplex?: SortOrder
    apartments_has_type_penthouse?: SortOrder
    apartments_has_servant_quarter?: SortOrder
    has_furnished?: SortOrder
    has_semi_furnished?: SortOrder
    has_service_apartments?: SortOrder
    has_hotel_suites_apartments?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    retail_floors_brands?: SortOrder
    has_fashion_health?: SortOrder
    has_electronics_appliancecs?: SortOrder
    has_home_living?: SortOrder
    has_restaurants_courts?: SortOrder
    has_bakery_ice?: SortOrder
    has_grocery_supermarkets?: SortOrder
    has_banks_atm?: SortOrder
    has_real_estate?: SortOrder
    has_labs_pharmacies?: SortOrder
    has_play_fitness?: SortOrder
    has_swimming_pool?: SortOrder
    has_cinema?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
    survey_date?: SortOrder
    surveyor_name?: SortOrder
    building_survery_remarks?: SortOrder
    building_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BuildingsAvgOrderByAggregateInput = {
    id?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
  }

  export type BuildingsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrder
    is_centrally_air_conditioned?: SortOrder
    has_security?: SortOrder
    has_escalators?: SortOrder
    has_food_court?: SortOrder
    has_entertainment_area?: SortOrder
    has_none?: SortOrder
    type_mixed_use?: SortOrder
    type_retail?: SortOrder
    type_offices?: SortOrder
    type_apartments?: SortOrder
    type_other?: SortOrder
    zone?: SortOrder
    area?: SortOrder
    address?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    builder_name?: SortOrder
    building_rank?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_studio?: SortOrder
    apartments_has_type_1_bed?: SortOrder
    apartments_has_type_2_bed?: SortOrder
    apartments_has_type_3_bed?: SortOrder
    apartments_has_type_4_bed?: SortOrder
    apartments_has_type_5_bed?: SortOrder
    apartments_has_type_duplex?: SortOrder
    apartments_has_type_penthouse?: SortOrder
    apartments_has_servant_quarter?: SortOrder
    has_furnished?: SortOrder
    has_semi_furnished?: SortOrder
    has_service_apartments?: SortOrder
    has_hotel_suites_apartments?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    retail_floors_brands?: SortOrder
    has_fashion_health?: SortOrder
    has_electronics_appliancecs?: SortOrder
    has_home_living?: SortOrder
    has_restaurants_courts?: SortOrder
    has_bakery_ice?: SortOrder
    has_grocery_supermarkets?: SortOrder
    has_banks_atm?: SortOrder
    has_real_estate?: SortOrder
    has_labs_pharmacies?: SortOrder
    has_play_fitness?: SortOrder
    has_swimming_pool?: SortOrder
    has_cinema?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
    survey_date?: SortOrder
    surveyor_name?: SortOrder
    building_survery_remarks?: SortOrder
    building_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BuildingsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrder
    is_centrally_air_conditioned?: SortOrder
    has_security?: SortOrder
    has_escalators?: SortOrder
    has_food_court?: SortOrder
    has_entertainment_area?: SortOrder
    has_none?: SortOrder
    type_mixed_use?: SortOrder
    type_retail?: SortOrder
    type_offices?: SortOrder
    type_apartments?: SortOrder
    type_other?: SortOrder
    zone?: SortOrder
    area?: SortOrder
    address?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    builder_name?: SortOrder
    building_rank?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_studio?: SortOrder
    apartments_has_type_1_bed?: SortOrder
    apartments_has_type_2_bed?: SortOrder
    apartments_has_type_3_bed?: SortOrder
    apartments_has_type_4_bed?: SortOrder
    apartments_has_type_5_bed?: SortOrder
    apartments_has_type_duplex?: SortOrder
    apartments_has_type_penthouse?: SortOrder
    apartments_has_servant_quarter?: SortOrder
    has_furnished?: SortOrder
    has_semi_furnished?: SortOrder
    has_service_apartments?: SortOrder
    has_hotel_suites_apartments?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    retail_floors_brands?: SortOrder
    has_fashion_health?: SortOrder
    has_electronics_appliancecs?: SortOrder
    has_home_living?: SortOrder
    has_restaurants_courts?: SortOrder
    has_bakery_ice?: SortOrder
    has_grocery_supermarkets?: SortOrder
    has_banks_atm?: SortOrder
    has_real_estate?: SortOrder
    has_labs_pharmacies?: SortOrder
    has_play_fitness?: SortOrder
    has_swimming_pool?: SortOrder
    has_cinema?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
    survey_date?: SortOrder
    surveyor_name?: SortOrder
    building_survery_remarks?: SortOrder
    building_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type BuildingsSumOrderByAggregateInput = {
    id?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type Buildings_historyCountOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrder
    is_centrally_air_conditioned?: SortOrder
    has_security?: SortOrder
    has_escalators?: SortOrder
    has_food_court?: SortOrder
    has_entertainment_area?: SortOrder
    has_none?: SortOrder
    type_mixed_use?: SortOrder
    type_retail?: SortOrder
    type_offices?: SortOrder
    type_apartments?: SortOrder
    type_other?: SortOrder
    zone?: SortOrder
    area?: SortOrder
    address?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    builder_name?: SortOrder
    building_rank?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_studio?: SortOrder
    apartments_has_type_1_bed?: SortOrder
    apartments_has_type_2_bed?: SortOrder
    apartments_has_type_3_bed?: SortOrder
    apartments_has_type_4_bed?: SortOrder
    apartments_has_type_5_bed?: SortOrder
    apartments_has_type_duplex?: SortOrder
    apartments_has_type_penthouse?: SortOrder
    apartments_has_servant_quarter?: SortOrder
    has_furnished?: SortOrder
    has_semi_furnished?: SortOrder
    has_service_apartments?: SortOrder
    has_hotel_suites_apartments?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    retail_floors_brands?: SortOrder
    has_fashion_health?: SortOrder
    has_electronics_appliancecs?: SortOrder
    has_home_living?: SortOrder
    has_restaurants_courts?: SortOrder
    has_bakery_ice?: SortOrder
    has_grocery_supermarkets?: SortOrder
    has_banks_atm?: SortOrder
    has_real_estate?: SortOrder
    has_labs_pharmacies?: SortOrder
    has_play_fitness?: SortOrder
    has_swimming_pool?: SortOrder
    has_cinema?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
    survey_date?: SortOrder
    surveyor_name?: SortOrder
    building_survery_remarks?: SortOrder
    building_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Buildings_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
  }

  export type Buildings_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrder
    is_centrally_air_conditioned?: SortOrder
    has_security?: SortOrder
    has_escalators?: SortOrder
    has_food_court?: SortOrder
    has_entertainment_area?: SortOrder
    has_none?: SortOrder
    type_mixed_use?: SortOrder
    type_retail?: SortOrder
    type_offices?: SortOrder
    type_apartments?: SortOrder
    type_other?: SortOrder
    zone?: SortOrder
    area?: SortOrder
    address?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    builder_name?: SortOrder
    building_rank?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_studio?: SortOrder
    apartments_has_type_1_bed?: SortOrder
    apartments_has_type_2_bed?: SortOrder
    apartments_has_type_3_bed?: SortOrder
    apartments_has_type_4_bed?: SortOrder
    apartments_has_type_5_bed?: SortOrder
    apartments_has_type_duplex?: SortOrder
    apartments_has_type_penthouse?: SortOrder
    apartments_has_servant_quarter?: SortOrder
    has_furnished?: SortOrder
    has_semi_furnished?: SortOrder
    has_service_apartments?: SortOrder
    has_hotel_suites_apartments?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    retail_floors_brands?: SortOrder
    has_fashion_health?: SortOrder
    has_electronics_appliancecs?: SortOrder
    has_home_living?: SortOrder
    has_restaurants_courts?: SortOrder
    has_bakery_ice?: SortOrder
    has_grocery_supermarkets?: SortOrder
    has_banks_atm?: SortOrder
    has_real_estate?: SortOrder
    has_labs_pharmacies?: SortOrder
    has_play_fitness?: SortOrder
    has_swimming_pool?: SortOrder
    has_cinema?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
    survey_date?: SortOrder
    surveyor_name?: SortOrder
    building_survery_remarks?: SortOrder
    building_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Buildings_historyMinOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    name?: SortOrder
    city?: SortOrder
    status?: SortOrder
    is_centrally_air_conditioned?: SortOrder
    has_security?: SortOrder
    has_escalators?: SortOrder
    has_food_court?: SortOrder
    has_entertainment_area?: SortOrder
    has_none?: SortOrder
    type_mixed_use?: SortOrder
    type_retail?: SortOrder
    type_offices?: SortOrder
    type_apartments?: SortOrder
    type_other?: SortOrder
    zone?: SortOrder
    area?: SortOrder
    address?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    builder_name?: SortOrder
    building_rank?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_studio?: SortOrder
    apartments_has_type_1_bed?: SortOrder
    apartments_has_type_2_bed?: SortOrder
    apartments_has_type_3_bed?: SortOrder
    apartments_has_type_4_bed?: SortOrder
    apartments_has_type_5_bed?: SortOrder
    apartments_has_type_duplex?: SortOrder
    apartments_has_type_penthouse?: SortOrder
    apartments_has_servant_quarter?: SortOrder
    has_furnished?: SortOrder
    has_semi_furnished?: SortOrder
    has_service_apartments?: SortOrder
    has_hotel_suites_apartments?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    retail_floors_brands?: SortOrder
    has_fashion_health?: SortOrder
    has_electronics_appliancecs?: SortOrder
    has_home_living?: SortOrder
    has_restaurants_courts?: SortOrder
    has_bakery_ice?: SortOrder
    has_grocery_supermarkets?: SortOrder
    has_banks_atm?: SortOrder
    has_real_estate?: SortOrder
    has_labs_pharmacies?: SortOrder
    has_play_fitness?: SortOrder
    has_swimming_pool?: SortOrder
    has_cinema?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
    survey_date?: SortOrder
    surveyor_name?: SortOrder
    building_survery_remarks?: SortOrder
    building_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Buildings_historySumOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    plot_size?: SortOrder
    construction_area?: SortOrder
    construction_year?: SortOrder
    launch_year?: SortOrder
    total_floors?: SortOrder
    parking_floors?: SortOrder
    apartment_floors?: SortOrder
    apartments_count?: SortOrder
    apartments_maintenance_fee?: SortOrder
    retail_floors_count?: SortOrder
    retail_floors_shops_count?: SortOrder
    retail_floors_maintenance_fee?: SortOrder
    office_floors_count?: SortOrder
    offices_count?: SortOrder
    office_maintenance_fee?: SortOrder
  }

  export type BuildingsScalarRelationFilter = {
    is?: BuildingsWhereInput
    isNot?: BuildingsWhereInput
  }

  export type FloorsCountOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrder
    floor_apartments_studio?: SortOrder
    floor_apartments_1_bed?: SortOrder
    floor_apartments_2_bed?: SortOrder
    floor_apartments_3_bed?: SortOrder
    floor_apartments_4_bed?: SortOrder
    floor_apartments_5_bed?: SortOrder
    floor_apartments_duplex?: SortOrder
    floor_apartments_penthouse?: SortOrder
    floor_has_furnished?: SortOrder
    floor_has_semi_furnished?: SortOrder
    floor_has_service_apartments?: SortOrder
    floor_has_hotel_suites_apartments?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_plan?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
    date?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FloorsAvgOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
  }

  export type FloorsMaxOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrder
    floor_apartments_studio?: SortOrder
    floor_apartments_1_bed?: SortOrder
    floor_apartments_2_bed?: SortOrder
    floor_apartments_3_bed?: SortOrder
    floor_apartments_4_bed?: SortOrder
    floor_apartments_5_bed?: SortOrder
    floor_apartments_duplex?: SortOrder
    floor_apartments_penthouse?: SortOrder
    floor_has_furnished?: SortOrder
    floor_has_semi_furnished?: SortOrder
    floor_has_service_apartments?: SortOrder
    floor_has_hotel_suites_apartments?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_plan?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
    date?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FloorsMinOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrder
    floor_apartments_studio?: SortOrder
    floor_apartments_1_bed?: SortOrder
    floor_apartments_2_bed?: SortOrder
    floor_apartments_3_bed?: SortOrder
    floor_apartments_4_bed?: SortOrder
    floor_apartments_5_bed?: SortOrder
    floor_apartments_duplex?: SortOrder
    floor_apartments_penthouse?: SortOrder
    floor_has_furnished?: SortOrder
    floor_has_semi_furnished?: SortOrder
    floor_has_service_apartments?: SortOrder
    floor_has_hotel_suites_apartments?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_plan?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
    date?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FloorsSumOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
  }

  export type Floors_historyCountOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrder
    floor_apartments_studio?: SortOrder
    floor_apartments_1_bed?: SortOrder
    floor_apartments_2_bed?: SortOrder
    floor_apartments_3_bed?: SortOrder
    floor_apartments_4_bed?: SortOrder
    floor_apartments_5_bed?: SortOrder
    floor_apartments_duplex?: SortOrder
    floor_apartments_penthouse?: SortOrder
    floor_has_furnished?: SortOrder
    floor_has_semi_furnished?: SortOrder
    floor_has_service_apartments?: SortOrder
    floor_has_hotel_suites_apartments?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_plan?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
    date?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Floors_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_id?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
  }

  export type Floors_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrder
    floor_apartments_studio?: SortOrder
    floor_apartments_1_bed?: SortOrder
    floor_apartments_2_bed?: SortOrder
    floor_apartments_3_bed?: SortOrder
    floor_apartments_4_bed?: SortOrder
    floor_apartments_5_bed?: SortOrder
    floor_apartments_duplex?: SortOrder
    floor_apartments_penthouse?: SortOrder
    floor_has_furnished?: SortOrder
    floor_has_semi_furnished?: SortOrder
    floor_has_service_apartments?: SortOrder
    floor_has_hotel_suites_apartments?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_plan?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
    date?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Floors_historyMinOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_id?: SortOrder
    floor_no?: SortOrder
    floor_type?: SortOrder
    unit_type?: SortOrder
    floor_apartments_studio?: SortOrder
    floor_apartments_1_bed?: SortOrder
    floor_apartments_2_bed?: SortOrder
    floor_apartments_3_bed?: SortOrder
    floor_apartments_4_bed?: SortOrder
    floor_apartments_5_bed?: SortOrder
    floor_apartments_duplex?: SortOrder
    floor_apartments_penthouse?: SortOrder
    floor_has_furnished?: SortOrder
    floor_has_semi_furnished?: SortOrder
    floor_has_service_apartments?: SortOrder
    floor_has_hotel_suites_apartments?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_plan?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
    date?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Floors_historySumOrderByAggregateInput = {
    id?: SortOrder
    building_id?: SortOrder
    floor_id?: SortOrder
    occupancy?: SortOrder
    size_min?: SortOrder
    size_max?: SortOrder
    avg_sale_price?: SortOrder
    avg_monthly_rent?: SortOrder
    instalment_period?: SortOrder
    down_payment_amount?: SortOrder
    instalment_amount?: SortOrder
    possession_amount?: SortOrder
  }

  export type PlotsListRelationFilter = {
    every?: PlotsWhereInput
    some?: PlotsWhereInput
    none?: PlotsWhereInput
  }

  export type HousesListRelationFilter = {
    every?: HousesWhereInput
    some?: HousesWhereInput
    none?: HousesWhereInput
  }

  export type PlotsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type HousesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SocietiesCountOrderByAggregateInput = {
    id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    type?: SortOrder
    name?: SortOrder
    zone?: SortOrder
    address?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    grade?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    plot_sizes_residential_87_5?: SortOrder
    plot_sizes_residential_125?: SortOrder
    plot_sizes_residential_200?: SortOrder
    plot_sizes_residential_250?: SortOrder
    plot_sizes_residential_300?: SortOrder
    plot_sizes_residential_400?: SortOrder
    plot_sizes_residential_500?: SortOrder
    plot_sizes_residential_600?: SortOrder
    plot_sizes_residential_800?: SortOrder
    plot_sizes_residential_1000?: SortOrder
    plot_sizes_residential_2000?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    plot_sizes_commercial_87_5?: SortOrder
    plot_sizes_commercial_100?: SortOrder
    plot_sizes_commercial_125?: SortOrder
    plot_sizes_commercial_200?: SortOrder
    plot_sizes_commercial_250?: SortOrder
    plot_sizes_commercial_500?: SortOrder
    plot_sizes_commercial_1000?: SortOrder
    plot_sizes_commercial_2000?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    apartment_studio?: SortOrder
    apartment_one_bad?: SortOrder
    apartment_two_bad?: SortOrder
    apartment_three_bad?: SortOrder
    apartment_four_bad?: SortOrder
    apartment_five_bad?: SortOrder
    apartment_penthouse?: SortOrder
    apartment_duplex?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    payment_terms?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    features_type_parks?: SortOrder
    features_type_school?: SortOrder
    features_type_university?: SortOrder
    features_type_hospital?: SortOrder
    features_type_commercial_market?: SortOrder
    features_type_zoo?: SortOrder
    features_type_food_arena?: SortOrder
    features_type_college?: SortOrder
    features_type_graveyard?: SortOrder
    features_type_grid_station?: SortOrder
    features_type_masjid?: SortOrder
    features_type_community_club?: SortOrder
    features_type_gated_community?: SortOrder
    utilities_type_underground_electrification?: SortOrder
    utilities_type_gas?: SortOrder
    utilities_type_water?: SortOrder
    utilities_type_utilities_electricity?: SortOrder
    utilities_type_drainage?: SortOrder
    developer_name?: SortOrder
    contact_no?: SortOrder
    survery_remarks?: SortOrder
    imagePath?: SortOrder
    societies_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SocietiesAvgOrderByAggregateInput = {
    id?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    contact_no?: SortOrder
  }

  export type SocietiesMaxOrderByAggregateInput = {
    id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    type?: SortOrder
    name?: SortOrder
    zone?: SortOrder
    address?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    grade?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    plot_sizes_residential_87_5?: SortOrder
    plot_sizes_residential_125?: SortOrder
    plot_sizes_residential_200?: SortOrder
    plot_sizes_residential_250?: SortOrder
    plot_sizes_residential_300?: SortOrder
    plot_sizes_residential_400?: SortOrder
    plot_sizes_residential_500?: SortOrder
    plot_sizes_residential_600?: SortOrder
    plot_sizes_residential_800?: SortOrder
    plot_sizes_residential_1000?: SortOrder
    plot_sizes_residential_2000?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    plot_sizes_commercial_87_5?: SortOrder
    plot_sizes_commercial_100?: SortOrder
    plot_sizes_commercial_125?: SortOrder
    plot_sizes_commercial_200?: SortOrder
    plot_sizes_commercial_250?: SortOrder
    plot_sizes_commercial_500?: SortOrder
    plot_sizes_commercial_1000?: SortOrder
    plot_sizes_commercial_2000?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    apartment_studio?: SortOrder
    apartment_one_bad?: SortOrder
    apartment_two_bad?: SortOrder
    apartment_three_bad?: SortOrder
    apartment_four_bad?: SortOrder
    apartment_five_bad?: SortOrder
    apartment_penthouse?: SortOrder
    apartment_duplex?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    payment_terms?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    features_type_parks?: SortOrder
    features_type_school?: SortOrder
    features_type_university?: SortOrder
    features_type_hospital?: SortOrder
    features_type_commercial_market?: SortOrder
    features_type_zoo?: SortOrder
    features_type_food_arena?: SortOrder
    features_type_college?: SortOrder
    features_type_graveyard?: SortOrder
    features_type_grid_station?: SortOrder
    features_type_masjid?: SortOrder
    features_type_community_club?: SortOrder
    features_type_gated_community?: SortOrder
    utilities_type_underground_electrification?: SortOrder
    utilities_type_gas?: SortOrder
    utilities_type_water?: SortOrder
    utilities_type_utilities_electricity?: SortOrder
    utilities_type_drainage?: SortOrder
    developer_name?: SortOrder
    contact_no?: SortOrder
    survery_remarks?: SortOrder
    imagePath?: SortOrder
    societies_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SocietiesMinOrderByAggregateInput = {
    id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    type?: SortOrder
    name?: SortOrder
    zone?: SortOrder
    address?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    grade?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    plot_sizes_residential_87_5?: SortOrder
    plot_sizes_residential_125?: SortOrder
    plot_sizes_residential_200?: SortOrder
    plot_sizes_residential_250?: SortOrder
    plot_sizes_residential_300?: SortOrder
    plot_sizes_residential_400?: SortOrder
    plot_sizes_residential_500?: SortOrder
    plot_sizes_residential_600?: SortOrder
    plot_sizes_residential_800?: SortOrder
    plot_sizes_residential_1000?: SortOrder
    plot_sizes_residential_2000?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    plot_sizes_commercial_87_5?: SortOrder
    plot_sizes_commercial_100?: SortOrder
    plot_sizes_commercial_125?: SortOrder
    plot_sizes_commercial_200?: SortOrder
    plot_sizes_commercial_250?: SortOrder
    plot_sizes_commercial_500?: SortOrder
    plot_sizes_commercial_1000?: SortOrder
    plot_sizes_commercial_2000?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    apartment_studio?: SortOrder
    apartment_one_bad?: SortOrder
    apartment_two_bad?: SortOrder
    apartment_three_bad?: SortOrder
    apartment_four_bad?: SortOrder
    apartment_five_bad?: SortOrder
    apartment_penthouse?: SortOrder
    apartment_duplex?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    payment_terms?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    features_type_parks?: SortOrder
    features_type_school?: SortOrder
    features_type_university?: SortOrder
    features_type_hospital?: SortOrder
    features_type_commercial_market?: SortOrder
    features_type_zoo?: SortOrder
    features_type_food_arena?: SortOrder
    features_type_college?: SortOrder
    features_type_graveyard?: SortOrder
    features_type_grid_station?: SortOrder
    features_type_masjid?: SortOrder
    features_type_community_club?: SortOrder
    features_type_gated_community?: SortOrder
    utilities_type_underground_electrification?: SortOrder
    utilities_type_gas?: SortOrder
    utilities_type_water?: SortOrder
    utilities_type_utilities_electricity?: SortOrder
    utilities_type_drainage?: SortOrder
    developer_name?: SortOrder
    contact_no?: SortOrder
    survery_remarks?: SortOrder
    imagePath?: SortOrder
    societies_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type SocietiesSumOrderByAggregateInput = {
    id?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    contact_no?: SortOrder
  }

  export type Societies_historyCountOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    type?: SortOrder
    name?: SortOrder
    zone?: SortOrder
    address?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    grade?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    plot_sizes_residential_87_5?: SortOrder
    plot_sizes_residential_125?: SortOrder
    plot_sizes_residential_200?: SortOrder
    plot_sizes_residential_250?: SortOrder
    plot_sizes_residential_300?: SortOrder
    plot_sizes_residential_400?: SortOrder
    plot_sizes_residential_500?: SortOrder
    plot_sizes_residential_600?: SortOrder
    plot_sizes_residential_800?: SortOrder
    plot_sizes_residential_1000?: SortOrder
    plot_sizes_residential_2000?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    plot_sizes_commercial_87_5?: SortOrder
    plot_sizes_commercial_100?: SortOrder
    plot_sizes_commercial_125?: SortOrder
    plot_sizes_commercial_200?: SortOrder
    plot_sizes_commercial_250?: SortOrder
    plot_sizes_commercial_500?: SortOrder
    plot_sizes_commercial_1000?: SortOrder
    plot_sizes_commercial_2000?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    apartment_studio?: SortOrder
    apartment_one_bad?: SortOrder
    apartment_two_bad?: SortOrder
    apartment_three_bad?: SortOrder
    apartment_four_bad?: SortOrder
    apartment_five_bad?: SortOrder
    apartment_penthouse?: SortOrder
    apartment_duplex?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    payment_terms?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    features_type_parks?: SortOrder
    features_type_school?: SortOrder
    features_type_university?: SortOrder
    features_type_hospital?: SortOrder
    features_type_commercial_market?: SortOrder
    features_type_zoo?: SortOrder
    features_type_food_arena?: SortOrder
    features_type_college?: SortOrder
    features_type_graveyard?: SortOrder
    features_type_grid_station?: SortOrder
    features_type_masjid?: SortOrder
    features_type_community_club?: SortOrder
    features_type_gated_community?: SortOrder
    utilities_type_underground_electrification?: SortOrder
    utilities_type_gas?: SortOrder
    utilities_type_water?: SortOrder
    utilities_type_utilities_electricity?: SortOrder
    utilities_type_drainage?: SortOrder
    developer_name?: SortOrder
    contact_no?: SortOrder
    survery_remarks?: SortOrder
    imagePath?: SortOrder
    societies_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Societies_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    contact_no?: SortOrder
  }

  export type Societies_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    type?: SortOrder
    name?: SortOrder
    zone?: SortOrder
    address?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    grade?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    plot_sizes_residential_87_5?: SortOrder
    plot_sizes_residential_125?: SortOrder
    plot_sizes_residential_200?: SortOrder
    plot_sizes_residential_250?: SortOrder
    plot_sizes_residential_300?: SortOrder
    plot_sizes_residential_400?: SortOrder
    plot_sizes_residential_500?: SortOrder
    plot_sizes_residential_600?: SortOrder
    plot_sizes_residential_800?: SortOrder
    plot_sizes_residential_1000?: SortOrder
    plot_sizes_residential_2000?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    plot_sizes_commercial_87_5?: SortOrder
    plot_sizes_commercial_100?: SortOrder
    plot_sizes_commercial_125?: SortOrder
    plot_sizes_commercial_200?: SortOrder
    plot_sizes_commercial_250?: SortOrder
    plot_sizes_commercial_500?: SortOrder
    plot_sizes_commercial_1000?: SortOrder
    plot_sizes_commercial_2000?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    apartment_studio?: SortOrder
    apartment_one_bad?: SortOrder
    apartment_two_bad?: SortOrder
    apartment_three_bad?: SortOrder
    apartment_four_bad?: SortOrder
    apartment_five_bad?: SortOrder
    apartment_penthouse?: SortOrder
    apartment_duplex?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    payment_terms?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    features_type_parks?: SortOrder
    features_type_school?: SortOrder
    features_type_university?: SortOrder
    features_type_hospital?: SortOrder
    features_type_commercial_market?: SortOrder
    features_type_zoo?: SortOrder
    features_type_food_arena?: SortOrder
    features_type_college?: SortOrder
    features_type_graveyard?: SortOrder
    features_type_grid_station?: SortOrder
    features_type_masjid?: SortOrder
    features_type_community_club?: SortOrder
    features_type_gated_community?: SortOrder
    utilities_type_underground_electrification?: SortOrder
    utilities_type_gas?: SortOrder
    utilities_type_water?: SortOrder
    utilities_type_utilities_electricity?: SortOrder
    utilities_type_drainage?: SortOrder
    developer_name?: SortOrder
    contact_no?: SortOrder
    survery_remarks?: SortOrder
    imagePath?: SortOrder
    societies_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Societies_historyMinOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    type?: SortOrder
    name?: SortOrder
    zone?: SortOrder
    address?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    grade?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    plot_sizes_residential_87_5?: SortOrder
    plot_sizes_residential_125?: SortOrder
    plot_sizes_residential_200?: SortOrder
    plot_sizes_residential_250?: SortOrder
    plot_sizes_residential_300?: SortOrder
    plot_sizes_residential_400?: SortOrder
    plot_sizes_residential_500?: SortOrder
    plot_sizes_residential_600?: SortOrder
    plot_sizes_residential_800?: SortOrder
    plot_sizes_residential_1000?: SortOrder
    plot_sizes_residential_2000?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    plot_sizes_commercial_87_5?: SortOrder
    plot_sizes_commercial_100?: SortOrder
    plot_sizes_commercial_125?: SortOrder
    plot_sizes_commercial_200?: SortOrder
    plot_sizes_commercial_250?: SortOrder
    plot_sizes_commercial_500?: SortOrder
    plot_sizes_commercial_1000?: SortOrder
    plot_sizes_commercial_2000?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    apartment_studio?: SortOrder
    apartment_one_bad?: SortOrder
    apartment_two_bad?: SortOrder
    apartment_three_bad?: SortOrder
    apartment_four_bad?: SortOrder
    apartment_five_bad?: SortOrder
    apartment_penthouse?: SortOrder
    apartment_duplex?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    payment_terms?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    features_type_parks?: SortOrder
    features_type_school?: SortOrder
    features_type_university?: SortOrder
    features_type_hospital?: SortOrder
    features_type_commercial_market?: SortOrder
    features_type_zoo?: SortOrder
    features_type_food_arena?: SortOrder
    features_type_college?: SortOrder
    features_type_graveyard?: SortOrder
    features_type_grid_station?: SortOrder
    features_type_masjid?: SortOrder
    features_type_community_club?: SortOrder
    features_type_gated_community?: SortOrder
    utilities_type_underground_electrification?: SortOrder
    utilities_type_gas?: SortOrder
    utilities_type_water?: SortOrder
    utilities_type_utilities_electricity?: SortOrder
    utilities_type_drainage?: SortOrder
    developer_name?: SortOrder
    contact_no?: SortOrder
    survery_remarks?: SortOrder
    imagePath?: SortOrder
    societies_draft?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Societies_historySumOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    blocks?: SortOrder
    phase?: SortOrder
    occupancy?: SortOrder
    area?: SortOrder
    population?: SortOrder
    launch_year?: SortOrder
    total_plots_residential?: SortOrder
    plot_sizes_residential?: SortOrder
    total_plots_commercial?: SortOrder
    plot_sizes_commercial?: SortOrder
    total_apartments?: SortOrder
    societies_apartment_size?: SortOrder
    plot_size?: SortOrder
    plot_price?: SortOrder
    vilas_size?: SortOrder
    vilas_price?: SortOrder
    vilas_monthly_rent?: SortOrder
    commercial_plot_size?: SortOrder
    commercial_plot_price?: SortOrder
    apartment_size?: SortOrder
    min_apartments_price?: SortOrder
    max_apartments_price?: SortOrder
    min_apartments_monthly_rent?: SortOrder
    max_apartments_monthly_rent?: SortOrder
    instalment_total_amount?: SortOrder
    instalment_down_payment?: SortOrder
    instalment_possession_Amount?: SortOrder
    instalment_period?: SortOrder
    contact_no?: SortOrder
  }

  export type PriceListRelationFilter = {
    every?: PriceWhereInput
    some?: PriceWhereInput
    none?: PriceWhereInput
  }

  export type PriceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CommercialCountOrderByAggregateInput = {
    id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    commercial_zone_name?: SortOrder
    zone?: SortOrder
    type?: SortOrder
    location?: SortOrder
    project_status?: SortOrder
    launch_year?: SortOrder
    grade?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
    property_feature?: SortOrder
    property_title?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CommercialAvgOrderByAggregateInput = {
    id?: SortOrder
    launch_year?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
  }

  export type CommercialMaxOrderByAggregateInput = {
    id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    commercial_zone_name?: SortOrder
    zone?: SortOrder
    type?: SortOrder
    location?: SortOrder
    project_status?: SortOrder
    launch_year?: SortOrder
    grade?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
    property_feature?: SortOrder
    property_title?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CommercialMinOrderByAggregateInput = {
    id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    commercial_zone_name?: SortOrder
    zone?: SortOrder
    type?: SortOrder
    location?: SortOrder
    project_status?: SortOrder
    launch_year?: SortOrder
    grade?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
    property_feature?: SortOrder
    property_title?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CommercialSumOrderByAggregateInput = {
    id?: SortOrder
    launch_year?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
  }

  export type Commercial_historyCountOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    commercial_zone_name?: SortOrder
    zone?: SortOrder
    type?: SortOrder
    location?: SortOrder
    project_status?: SortOrder
    launch_year?: SortOrder
    grade?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
    property_feature?: SortOrder
    property_title?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Commercial_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
  }

  export type Commercial_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    commercial_zone_name?: SortOrder
    zone?: SortOrder
    type?: SortOrder
    location?: SortOrder
    project_status?: SortOrder
    launch_year?: SortOrder
    grade?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
    property_feature?: SortOrder
    property_title?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Commercial_historyMinOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    survey_date?: SortOrder
    city?: SortOrder
    commercial_zone_name?: SortOrder
    zone?: SortOrder
    type?: SortOrder
    location?: SortOrder
    project_status?: SortOrder
    launch_year?: SortOrder
    grade?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
    property_feature?: SortOrder
    property_title?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Commercial_historySumOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    area?: SortOrder
    occupancy?: SortOrder
    total_plots?: SortOrder
    total_shops?: SortOrder
    total_offices?: SortOrder
    total_apartments?: SortOrder
  }

  export type SocietiesScalarRelationFilter = {
    is?: SocietiesWhereInput
    isNot?: SocietiesWhereInput
  }

  export type HousesCountOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    type?: SortOrder
    size?: SortOrder
    price?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    condition?: SortOrder
    floors?: SortOrder
    has_basement?: SortOrder
    construction_year?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HousesAvgOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
  }

  export type HousesMaxOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    type?: SortOrder
    size?: SortOrder
    price?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    condition?: SortOrder
    floors?: SortOrder
    has_basement?: SortOrder
    construction_year?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HousesMinOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    type?: SortOrder
    size?: SortOrder
    price?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    condition?: SortOrder
    floors?: SortOrder
    has_basement?: SortOrder
    construction_year?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HousesSumOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
  }

  export type PlotsCountOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    date?: SortOrder
    plot_type?: SortOrder
    type?: SortOrder
    size?: SortOrder
    apartment_size?: SortOrder
    apartment_size_ft?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    banglow_price?: SortOrder
    banglow_rent?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    payment_mode?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
    remarks?: SortOrder
    imagePath?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlotsAvgOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
  }

  export type PlotsMaxOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    date?: SortOrder
    plot_type?: SortOrder
    type?: SortOrder
    size?: SortOrder
    apartment_size?: SortOrder
    apartment_size_ft?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    banglow_price?: SortOrder
    banglow_rent?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    payment_mode?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
    remarks?: SortOrder
    imagePath?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlotsMinOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    date?: SortOrder
    plot_type?: SortOrder
    type?: SortOrder
    size?: SortOrder
    apartment_size?: SortOrder
    apartment_size_ft?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    banglow_price?: SortOrder
    banglow_rent?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    payment_mode?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
    remarks?: SortOrder
    imagePath?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PlotsSumOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
  }

  export type Plots_historyCountOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_id?: SortOrder
    date?: SortOrder
    plot_type?: SortOrder
    type?: SortOrder
    size?: SortOrder
    apartment_size?: SortOrder
    apartment_size_ft?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    banglow_price?: SortOrder
    banglow_rent?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    payment_mode?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
    remarks?: SortOrder
    imagePath?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Plots_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_id?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
  }

  export type Plots_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_id?: SortOrder
    date?: SortOrder
    plot_type?: SortOrder
    type?: SortOrder
    size?: SortOrder
    apartment_size?: SortOrder
    apartment_size_ft?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    banglow_price?: SortOrder
    banglow_rent?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    payment_mode?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
    remarks?: SortOrder
    imagePath?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Plots_historyMinOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_id?: SortOrder
    date?: SortOrder
    plot_type?: SortOrder
    type?: SortOrder
    size?: SortOrder
    apartment_size?: SortOrder
    apartment_size_ft?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    banglow_price?: SortOrder
    banglow_rent?: SortOrder
    direction?: SortOrder
    is_corner?: SortOrder
    payment_mode?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
    remarks?: SortOrder
    imagePath?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Plots_historySumOrderByAggregateInput = {
    id?: SortOrder
    society_id?: SortOrder
    plot_id?: SortOrder
    plot_price?: SortOrder
    plot_rent?: SortOrder
    ins_total_price?: SortOrder
    ins_down_payment?: SortOrder
    ins_possession_Amount?: SortOrder
    ins_period?: SortOrder
  }

  export type CommercialScalarRelationFilter = {
    is?: CommercialWhereInput
    isNot?: CommercialWhereInput
  }

  export type PriceCountOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    date?: SortOrder
    property_type?: SortOrder
    plot_size?: SortOrder
    building_size?: SortOrder
    total_floor?: SortOrder
    building_size_sq?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    apartment_size?: SortOrder
    warehouse_size?: SortOrder
    total_bed?: SortOrder
    payment_mode?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceAvgOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
  }

  export type PriceMaxOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    date?: SortOrder
    property_type?: SortOrder
    plot_size?: SortOrder
    building_size?: SortOrder
    total_floor?: SortOrder
    building_size_sq?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    apartment_size?: SortOrder
    warehouse_size?: SortOrder
    total_bed?: SortOrder
    payment_mode?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceMinOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    date?: SortOrder
    property_type?: SortOrder
    plot_size?: SortOrder
    building_size?: SortOrder
    total_floor?: SortOrder
    building_size_sq?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    apartment_size?: SortOrder
    warehouse_size?: SortOrder
    total_bed?: SortOrder
    payment_mode?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PriceSumOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
  }

  export type Price_historyCountOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price_id?: SortOrder
    date?: SortOrder
    property_type?: SortOrder
    plot_size?: SortOrder
    building_size?: SortOrder
    total_floor?: SortOrder
    building_size_sq?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    apartment_size?: SortOrder
    warehouse_size?: SortOrder
    total_bed?: SortOrder
    payment_mode?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Price_historyAvgOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price_id?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
  }

  export type Price_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price_id?: SortOrder
    date?: SortOrder
    property_type?: SortOrder
    plot_size?: SortOrder
    building_size?: SortOrder
    total_floor?: SortOrder
    building_size_sq?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    apartment_size?: SortOrder
    warehouse_size?: SortOrder
    total_bed?: SortOrder
    payment_mode?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Price_historyMinOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price_id?: SortOrder
    date?: SortOrder
    property_type?: SortOrder
    plot_size?: SortOrder
    building_size?: SortOrder
    total_floor?: SortOrder
    building_size_sq?: SortOrder
    shop_size?: SortOrder
    office_size?: SortOrder
    apartment_size?: SortOrder
    warehouse_size?: SortOrder
    total_bed?: SortOrder
    payment_mode?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
    remarks?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type Price_historySumOrderByAggregateInput = {
    id?: SortOrder
    commercial_id?: SortOrder
    price_id?: SortOrder
    price?: SortOrder
    rent?: SortOrder
    total_price?: SortOrder
    installment_period?: SortOrder
    down_payment?: SortOrder
    possession_amount?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FloorsCreateNestedManyWithoutBuildingsInput = {
    create?: XOR<FloorsCreateWithoutBuildingsInput, FloorsUncheckedCreateWithoutBuildingsInput> | FloorsCreateWithoutBuildingsInput[] | FloorsUncheckedCreateWithoutBuildingsInput[]
    connectOrCreate?: FloorsCreateOrConnectWithoutBuildingsInput | FloorsCreateOrConnectWithoutBuildingsInput[]
    createMany?: FloorsCreateManyBuildingsInputEnvelope
    connect?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
  }

  export type FloorsUncheckedCreateNestedManyWithoutBuildingsInput = {
    create?: XOR<FloorsCreateWithoutBuildingsInput, FloorsUncheckedCreateWithoutBuildingsInput> | FloorsCreateWithoutBuildingsInput[] | FloorsUncheckedCreateWithoutBuildingsInput[]
    connectOrCreate?: FloorsCreateOrConnectWithoutBuildingsInput | FloorsCreateOrConnectWithoutBuildingsInput[]
    createMany?: FloorsCreateManyBuildingsInputEnvelope
    connect?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type FloorsUpdateManyWithoutBuildingsNestedInput = {
    create?: XOR<FloorsCreateWithoutBuildingsInput, FloorsUncheckedCreateWithoutBuildingsInput> | FloorsCreateWithoutBuildingsInput[] | FloorsUncheckedCreateWithoutBuildingsInput[]
    connectOrCreate?: FloorsCreateOrConnectWithoutBuildingsInput | FloorsCreateOrConnectWithoutBuildingsInput[]
    upsert?: FloorsUpsertWithWhereUniqueWithoutBuildingsInput | FloorsUpsertWithWhereUniqueWithoutBuildingsInput[]
    createMany?: FloorsCreateManyBuildingsInputEnvelope
    set?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
    disconnect?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
    delete?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
    connect?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
    update?: FloorsUpdateWithWhereUniqueWithoutBuildingsInput | FloorsUpdateWithWhereUniqueWithoutBuildingsInput[]
    updateMany?: FloorsUpdateManyWithWhereWithoutBuildingsInput | FloorsUpdateManyWithWhereWithoutBuildingsInput[]
    deleteMany?: FloorsScalarWhereInput | FloorsScalarWhereInput[]
  }

  export type FloorsUncheckedUpdateManyWithoutBuildingsNestedInput = {
    create?: XOR<FloorsCreateWithoutBuildingsInput, FloorsUncheckedCreateWithoutBuildingsInput> | FloorsCreateWithoutBuildingsInput[] | FloorsUncheckedCreateWithoutBuildingsInput[]
    connectOrCreate?: FloorsCreateOrConnectWithoutBuildingsInput | FloorsCreateOrConnectWithoutBuildingsInput[]
    upsert?: FloorsUpsertWithWhereUniqueWithoutBuildingsInput | FloorsUpsertWithWhereUniqueWithoutBuildingsInput[]
    createMany?: FloorsCreateManyBuildingsInputEnvelope
    set?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
    disconnect?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
    delete?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
    connect?: FloorsWhereUniqueInput | FloorsWhereUniqueInput[]
    update?: FloorsUpdateWithWhereUniqueWithoutBuildingsInput | FloorsUpdateWithWhereUniqueWithoutBuildingsInput[]
    updateMany?: FloorsUpdateManyWithWhereWithoutBuildingsInput | FloorsUpdateManyWithWhereWithoutBuildingsInput[]
    deleteMany?: FloorsScalarWhereInput | FloorsScalarWhereInput[]
  }

  export type BuildingsCreateNestedOneWithoutFloorsInput = {
    create?: XOR<BuildingsCreateWithoutFloorsInput, BuildingsUncheckedCreateWithoutFloorsInput>
    connectOrCreate?: BuildingsCreateOrConnectWithoutFloorsInput
    connect?: BuildingsWhereUniqueInput
  }

  export type BuildingsUpdateOneRequiredWithoutFloorsNestedInput = {
    create?: XOR<BuildingsCreateWithoutFloorsInput, BuildingsUncheckedCreateWithoutFloorsInput>
    connectOrCreate?: BuildingsCreateOrConnectWithoutFloorsInput
    upsert?: BuildingsUpsertWithoutFloorsInput
    connect?: BuildingsWhereUniqueInput
    update?: XOR<XOR<BuildingsUpdateToOneWithWhereWithoutFloorsInput, BuildingsUpdateWithoutFloorsInput>, BuildingsUncheckedUpdateWithoutFloorsInput>
  }

  export type PlotsCreateNestedManyWithoutSocietiesInput = {
    create?: XOR<PlotsCreateWithoutSocietiesInput, PlotsUncheckedCreateWithoutSocietiesInput> | PlotsCreateWithoutSocietiesInput[] | PlotsUncheckedCreateWithoutSocietiesInput[]
    connectOrCreate?: PlotsCreateOrConnectWithoutSocietiesInput | PlotsCreateOrConnectWithoutSocietiesInput[]
    createMany?: PlotsCreateManySocietiesInputEnvelope
    connect?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
  }

  export type HousesCreateNestedManyWithoutSocietiesInput = {
    create?: XOR<HousesCreateWithoutSocietiesInput, HousesUncheckedCreateWithoutSocietiesInput> | HousesCreateWithoutSocietiesInput[] | HousesUncheckedCreateWithoutSocietiesInput[]
    connectOrCreate?: HousesCreateOrConnectWithoutSocietiesInput | HousesCreateOrConnectWithoutSocietiesInput[]
    createMany?: HousesCreateManySocietiesInputEnvelope
    connect?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
  }

  export type PlotsUncheckedCreateNestedManyWithoutSocietiesInput = {
    create?: XOR<PlotsCreateWithoutSocietiesInput, PlotsUncheckedCreateWithoutSocietiesInput> | PlotsCreateWithoutSocietiesInput[] | PlotsUncheckedCreateWithoutSocietiesInput[]
    connectOrCreate?: PlotsCreateOrConnectWithoutSocietiesInput | PlotsCreateOrConnectWithoutSocietiesInput[]
    createMany?: PlotsCreateManySocietiesInputEnvelope
    connect?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
  }

  export type HousesUncheckedCreateNestedManyWithoutSocietiesInput = {
    create?: XOR<HousesCreateWithoutSocietiesInput, HousesUncheckedCreateWithoutSocietiesInput> | HousesCreateWithoutSocietiesInput[] | HousesUncheckedCreateWithoutSocietiesInput[]
    connectOrCreate?: HousesCreateOrConnectWithoutSocietiesInput | HousesCreateOrConnectWithoutSocietiesInput[]
    createMany?: HousesCreateManySocietiesInputEnvelope
    connect?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
  }

  export type PlotsUpdateManyWithoutSocietiesNestedInput = {
    create?: XOR<PlotsCreateWithoutSocietiesInput, PlotsUncheckedCreateWithoutSocietiesInput> | PlotsCreateWithoutSocietiesInput[] | PlotsUncheckedCreateWithoutSocietiesInput[]
    connectOrCreate?: PlotsCreateOrConnectWithoutSocietiesInput | PlotsCreateOrConnectWithoutSocietiesInput[]
    upsert?: PlotsUpsertWithWhereUniqueWithoutSocietiesInput | PlotsUpsertWithWhereUniqueWithoutSocietiesInput[]
    createMany?: PlotsCreateManySocietiesInputEnvelope
    set?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
    disconnect?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
    delete?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
    connect?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
    update?: PlotsUpdateWithWhereUniqueWithoutSocietiesInput | PlotsUpdateWithWhereUniqueWithoutSocietiesInput[]
    updateMany?: PlotsUpdateManyWithWhereWithoutSocietiesInput | PlotsUpdateManyWithWhereWithoutSocietiesInput[]
    deleteMany?: PlotsScalarWhereInput | PlotsScalarWhereInput[]
  }

  export type HousesUpdateManyWithoutSocietiesNestedInput = {
    create?: XOR<HousesCreateWithoutSocietiesInput, HousesUncheckedCreateWithoutSocietiesInput> | HousesCreateWithoutSocietiesInput[] | HousesUncheckedCreateWithoutSocietiesInput[]
    connectOrCreate?: HousesCreateOrConnectWithoutSocietiesInput | HousesCreateOrConnectWithoutSocietiesInput[]
    upsert?: HousesUpsertWithWhereUniqueWithoutSocietiesInput | HousesUpsertWithWhereUniqueWithoutSocietiesInput[]
    createMany?: HousesCreateManySocietiesInputEnvelope
    set?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
    disconnect?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
    delete?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
    connect?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
    update?: HousesUpdateWithWhereUniqueWithoutSocietiesInput | HousesUpdateWithWhereUniqueWithoutSocietiesInput[]
    updateMany?: HousesUpdateManyWithWhereWithoutSocietiesInput | HousesUpdateManyWithWhereWithoutSocietiesInput[]
    deleteMany?: HousesScalarWhereInput | HousesScalarWhereInput[]
  }

  export type PlotsUncheckedUpdateManyWithoutSocietiesNestedInput = {
    create?: XOR<PlotsCreateWithoutSocietiesInput, PlotsUncheckedCreateWithoutSocietiesInput> | PlotsCreateWithoutSocietiesInput[] | PlotsUncheckedCreateWithoutSocietiesInput[]
    connectOrCreate?: PlotsCreateOrConnectWithoutSocietiesInput | PlotsCreateOrConnectWithoutSocietiesInput[]
    upsert?: PlotsUpsertWithWhereUniqueWithoutSocietiesInput | PlotsUpsertWithWhereUniqueWithoutSocietiesInput[]
    createMany?: PlotsCreateManySocietiesInputEnvelope
    set?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
    disconnect?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
    delete?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
    connect?: PlotsWhereUniqueInput | PlotsWhereUniqueInput[]
    update?: PlotsUpdateWithWhereUniqueWithoutSocietiesInput | PlotsUpdateWithWhereUniqueWithoutSocietiesInput[]
    updateMany?: PlotsUpdateManyWithWhereWithoutSocietiesInput | PlotsUpdateManyWithWhereWithoutSocietiesInput[]
    deleteMany?: PlotsScalarWhereInput | PlotsScalarWhereInput[]
  }

  export type HousesUncheckedUpdateManyWithoutSocietiesNestedInput = {
    create?: XOR<HousesCreateWithoutSocietiesInput, HousesUncheckedCreateWithoutSocietiesInput> | HousesCreateWithoutSocietiesInput[] | HousesUncheckedCreateWithoutSocietiesInput[]
    connectOrCreate?: HousesCreateOrConnectWithoutSocietiesInput | HousesCreateOrConnectWithoutSocietiesInput[]
    upsert?: HousesUpsertWithWhereUniqueWithoutSocietiesInput | HousesUpsertWithWhereUniqueWithoutSocietiesInput[]
    createMany?: HousesCreateManySocietiesInputEnvelope
    set?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
    disconnect?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
    delete?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
    connect?: HousesWhereUniqueInput | HousesWhereUniqueInput[]
    update?: HousesUpdateWithWhereUniqueWithoutSocietiesInput | HousesUpdateWithWhereUniqueWithoutSocietiesInput[]
    updateMany?: HousesUpdateManyWithWhereWithoutSocietiesInput | HousesUpdateManyWithWhereWithoutSocietiesInput[]
    deleteMany?: HousesScalarWhereInput | HousesScalarWhereInput[]
  }

  export type PriceCreateNestedManyWithoutCommercialInput = {
    create?: XOR<PriceCreateWithoutCommercialInput, PriceUncheckedCreateWithoutCommercialInput> | PriceCreateWithoutCommercialInput[] | PriceUncheckedCreateWithoutCommercialInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutCommercialInput | PriceCreateOrConnectWithoutCommercialInput[]
    createMany?: PriceCreateManyCommercialInputEnvelope
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
  }

  export type PriceUncheckedCreateNestedManyWithoutCommercialInput = {
    create?: XOR<PriceCreateWithoutCommercialInput, PriceUncheckedCreateWithoutCommercialInput> | PriceCreateWithoutCommercialInput[] | PriceUncheckedCreateWithoutCommercialInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutCommercialInput | PriceCreateOrConnectWithoutCommercialInput[]
    createMany?: PriceCreateManyCommercialInputEnvelope
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
  }

  export type PriceUpdateManyWithoutCommercialNestedInput = {
    create?: XOR<PriceCreateWithoutCommercialInput, PriceUncheckedCreateWithoutCommercialInput> | PriceCreateWithoutCommercialInput[] | PriceUncheckedCreateWithoutCommercialInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutCommercialInput | PriceCreateOrConnectWithoutCommercialInput[]
    upsert?: PriceUpsertWithWhereUniqueWithoutCommercialInput | PriceUpsertWithWhereUniqueWithoutCommercialInput[]
    createMany?: PriceCreateManyCommercialInputEnvelope
    set?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    disconnect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    delete?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    update?: PriceUpdateWithWhereUniqueWithoutCommercialInput | PriceUpdateWithWhereUniqueWithoutCommercialInput[]
    updateMany?: PriceUpdateManyWithWhereWithoutCommercialInput | PriceUpdateManyWithWhereWithoutCommercialInput[]
    deleteMany?: PriceScalarWhereInput | PriceScalarWhereInput[]
  }

  export type PriceUncheckedUpdateManyWithoutCommercialNestedInput = {
    create?: XOR<PriceCreateWithoutCommercialInput, PriceUncheckedCreateWithoutCommercialInput> | PriceCreateWithoutCommercialInput[] | PriceUncheckedCreateWithoutCommercialInput[]
    connectOrCreate?: PriceCreateOrConnectWithoutCommercialInput | PriceCreateOrConnectWithoutCommercialInput[]
    upsert?: PriceUpsertWithWhereUniqueWithoutCommercialInput | PriceUpsertWithWhereUniqueWithoutCommercialInput[]
    createMany?: PriceCreateManyCommercialInputEnvelope
    set?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    disconnect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    delete?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    connect?: PriceWhereUniqueInput | PriceWhereUniqueInput[]
    update?: PriceUpdateWithWhereUniqueWithoutCommercialInput | PriceUpdateWithWhereUniqueWithoutCommercialInput[]
    updateMany?: PriceUpdateManyWithWhereWithoutCommercialInput | PriceUpdateManyWithWhereWithoutCommercialInput[]
    deleteMany?: PriceScalarWhereInput | PriceScalarWhereInput[]
  }

  export type SocietiesCreateNestedOneWithoutHousesInput = {
    create?: XOR<SocietiesCreateWithoutHousesInput, SocietiesUncheckedCreateWithoutHousesInput>
    connectOrCreate?: SocietiesCreateOrConnectWithoutHousesInput
    connect?: SocietiesWhereUniqueInput
  }

  export type SocietiesUpdateOneRequiredWithoutHousesNestedInput = {
    create?: XOR<SocietiesCreateWithoutHousesInput, SocietiesUncheckedCreateWithoutHousesInput>
    connectOrCreate?: SocietiesCreateOrConnectWithoutHousesInput
    upsert?: SocietiesUpsertWithoutHousesInput
    connect?: SocietiesWhereUniqueInput
    update?: XOR<XOR<SocietiesUpdateToOneWithWhereWithoutHousesInput, SocietiesUpdateWithoutHousesInput>, SocietiesUncheckedUpdateWithoutHousesInput>
  }

  export type SocietiesCreateNestedOneWithoutPlotsInput = {
    create?: XOR<SocietiesCreateWithoutPlotsInput, SocietiesUncheckedCreateWithoutPlotsInput>
    connectOrCreate?: SocietiesCreateOrConnectWithoutPlotsInput
    connect?: SocietiesWhereUniqueInput
  }

  export type SocietiesUpdateOneRequiredWithoutPlotsNestedInput = {
    create?: XOR<SocietiesCreateWithoutPlotsInput, SocietiesUncheckedCreateWithoutPlotsInput>
    connectOrCreate?: SocietiesCreateOrConnectWithoutPlotsInput
    upsert?: SocietiesUpsertWithoutPlotsInput
    connect?: SocietiesWhereUniqueInput
    update?: XOR<XOR<SocietiesUpdateToOneWithWhereWithoutPlotsInput, SocietiesUpdateWithoutPlotsInput>, SocietiesUncheckedUpdateWithoutPlotsInput>
  }

  export type CommercialCreateNestedOneWithoutPriceInput = {
    create?: XOR<CommercialCreateWithoutPriceInput, CommercialUncheckedCreateWithoutPriceInput>
    connectOrCreate?: CommercialCreateOrConnectWithoutPriceInput
    connect?: CommercialWhereUniqueInput
  }

  export type CommercialUpdateOneRequiredWithoutPriceNestedInput = {
    create?: XOR<CommercialCreateWithoutPriceInput, CommercialUncheckedCreateWithoutPriceInput>
    connectOrCreate?: CommercialCreateOrConnectWithoutPriceInput
    upsert?: CommercialUpsertWithoutPriceInput
    connect?: CommercialWhereUniqueInput
    update?: XOR<XOR<CommercialUpdateToOneWithWhereWithoutPriceInput, CommercialUpdateWithoutPriceInput>, CommercialUncheckedUpdateWithoutPriceInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type FloorsCreateWithoutBuildingsInput = {
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FloorsUncheckedCreateWithoutBuildingsInput = {
    id?: number
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FloorsCreateOrConnectWithoutBuildingsInput = {
    where: FloorsWhereUniqueInput
    create: XOR<FloorsCreateWithoutBuildingsInput, FloorsUncheckedCreateWithoutBuildingsInput>
  }

  export type FloorsCreateManyBuildingsInputEnvelope = {
    data: FloorsCreateManyBuildingsInput | FloorsCreateManyBuildingsInput[]
    skipDuplicates?: boolean
  }

  export type FloorsUpsertWithWhereUniqueWithoutBuildingsInput = {
    where: FloorsWhereUniqueInput
    update: XOR<FloorsUpdateWithoutBuildingsInput, FloorsUncheckedUpdateWithoutBuildingsInput>
    create: XOR<FloorsCreateWithoutBuildingsInput, FloorsUncheckedCreateWithoutBuildingsInput>
  }

  export type FloorsUpdateWithWhereUniqueWithoutBuildingsInput = {
    where: FloorsWhereUniqueInput
    data: XOR<FloorsUpdateWithoutBuildingsInput, FloorsUncheckedUpdateWithoutBuildingsInput>
  }

  export type FloorsUpdateManyWithWhereWithoutBuildingsInput = {
    where: FloorsScalarWhereInput
    data: XOR<FloorsUpdateManyMutationInput, FloorsUncheckedUpdateManyWithoutBuildingsInput>
  }

  export type FloorsScalarWhereInput = {
    AND?: FloorsScalarWhereInput | FloorsScalarWhereInput[]
    OR?: FloorsScalarWhereInput[]
    NOT?: FloorsScalarWhereInput | FloorsScalarWhereInput[]
    id?: IntFilter<"Floors"> | number
    building_id?: IntFilter<"Floors"> | number
    floor_no?: StringFilter<"Floors"> | string
    floor_type?: StringFilter<"Floors"> | string
    unit_type?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_studio?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_1_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_2_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_3_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_4_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_5_bed?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_duplex?: StringNullableFilter<"Floors"> | string | null
    floor_apartments_penthouse?: StringNullableFilter<"Floors"> | string | null
    floor_has_furnished?: StringNullableFilter<"Floors"> | string | null
    floor_has_semi_furnished?: StringNullableFilter<"Floors"> | string | null
    floor_has_service_apartments?: StringNullableFilter<"Floors"> | string | null
    floor_has_hotel_suites_apartments?: StringNullableFilter<"Floors"> | string | null
    occupancy?: IntNullableFilter<"Floors"> | number | null
    size_min?: IntNullableFilter<"Floors"> | number | null
    size_max?: IntNullableFilter<"Floors"> | number | null
    avg_sale_price?: IntNullableFilter<"Floors"> | number | null
    avg_monthly_rent?: IntNullableFilter<"Floors"> | number | null
    instalment_plan?: StringNullableFilter<"Floors"> | string | null
    instalment_period?: IntNullableFilter<"Floors"> | number | null
    down_payment_amount?: IntNullableFilter<"Floors"> | number | null
    instalment_amount?: IntNullableFilter<"Floors"> | number | null
    possession_amount?: IntNullableFilter<"Floors"> | number | null
    date?: StringNullableFilter<"Floors"> | string | null
    remarks?: StringNullableFilter<"Floors"> | string | null
    createdAt?: DateTimeFilter<"Floors"> | Date | string
    updatedAt?: DateTimeFilter<"Floors"> | Date | string
  }

  export type BuildingsCreateWithoutFloorsInput = {
    name: string
    city: string
    status?: string | null
    is_centrally_air_conditioned?: string | null
    has_security?: string | null
    has_escalators?: string | null
    has_food_court?: string | null
    has_entertainment_area?: string | null
    has_none?: string | null
    type_mixed_use?: string | null
    type_retail?: string | null
    type_offices?: string | null
    type_apartments?: string | null
    type_other?: string | null
    zone?: string | null
    area?: string | null
    address?: string | null
    plot_size?: number | null
    construction_area?: number | null
    construction_year?: number | null
    launch_year?: number | null
    builder_name?: string | null
    building_rank?: string | null
    total_floors?: number | null
    parking_floors?: number | null
    apartment_floors?: number | null
    apartments_count?: number | null
    apartments_studio?: string | null
    apartments_has_type_1_bed?: string | null
    apartments_has_type_2_bed?: string | null
    apartments_has_type_3_bed?: string | null
    apartments_has_type_4_bed?: string | null
    apartments_has_type_5_bed?: string | null
    apartments_has_type_duplex?: string | null
    apartments_has_type_penthouse?: string | null
    apartments_has_servant_quarter?: string | null
    has_furnished?: string | null
    has_semi_furnished?: string | null
    has_service_apartments?: string | null
    has_hotel_suites_apartments?: string | null
    apartments_maintenance_fee?: number | null
    retail_floors_count?: number | null
    retail_floors_shops_count?: number | null
    retail_floors_maintenance_fee?: number | null
    retail_floors_brands?: string | null
    has_fashion_health?: string | null
    has_electronics_appliancecs?: string | null
    has_home_living?: string | null
    has_restaurants_courts?: string | null
    has_bakery_ice?: string | null
    has_grocery_supermarkets?: string | null
    has_banks_atm?: string | null
    has_real_estate?: string | null
    has_labs_pharmacies?: string | null
    has_play_fitness?: string | null
    has_swimming_pool?: string | null
    has_cinema?: string | null
    office_floors_count?: number | null
    offices_count?: number | null
    office_maintenance_fee?: number | null
    survey_date?: string | null
    surveyor_name?: string | null
    building_survery_remarks?: string | null
    building_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BuildingsUncheckedCreateWithoutFloorsInput = {
    id?: number
    name: string
    city: string
    status?: string | null
    is_centrally_air_conditioned?: string | null
    has_security?: string | null
    has_escalators?: string | null
    has_food_court?: string | null
    has_entertainment_area?: string | null
    has_none?: string | null
    type_mixed_use?: string | null
    type_retail?: string | null
    type_offices?: string | null
    type_apartments?: string | null
    type_other?: string | null
    zone?: string | null
    area?: string | null
    address?: string | null
    plot_size?: number | null
    construction_area?: number | null
    construction_year?: number | null
    launch_year?: number | null
    builder_name?: string | null
    building_rank?: string | null
    total_floors?: number | null
    parking_floors?: number | null
    apartment_floors?: number | null
    apartments_count?: number | null
    apartments_studio?: string | null
    apartments_has_type_1_bed?: string | null
    apartments_has_type_2_bed?: string | null
    apartments_has_type_3_bed?: string | null
    apartments_has_type_4_bed?: string | null
    apartments_has_type_5_bed?: string | null
    apartments_has_type_duplex?: string | null
    apartments_has_type_penthouse?: string | null
    apartments_has_servant_quarter?: string | null
    has_furnished?: string | null
    has_semi_furnished?: string | null
    has_service_apartments?: string | null
    has_hotel_suites_apartments?: string | null
    apartments_maintenance_fee?: number | null
    retail_floors_count?: number | null
    retail_floors_shops_count?: number | null
    retail_floors_maintenance_fee?: number | null
    retail_floors_brands?: string | null
    has_fashion_health?: string | null
    has_electronics_appliancecs?: string | null
    has_home_living?: string | null
    has_restaurants_courts?: string | null
    has_bakery_ice?: string | null
    has_grocery_supermarkets?: string | null
    has_banks_atm?: string | null
    has_real_estate?: string | null
    has_labs_pharmacies?: string | null
    has_play_fitness?: string | null
    has_swimming_pool?: string | null
    has_cinema?: string | null
    office_floors_count?: number | null
    offices_count?: number | null
    office_maintenance_fee?: number | null
    survey_date?: string | null
    surveyor_name?: string | null
    building_survery_remarks?: string | null
    building_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type BuildingsCreateOrConnectWithoutFloorsInput = {
    where: BuildingsWhereUniqueInput
    create: XOR<BuildingsCreateWithoutFloorsInput, BuildingsUncheckedCreateWithoutFloorsInput>
  }

  export type BuildingsUpsertWithoutFloorsInput = {
    update: XOR<BuildingsUpdateWithoutFloorsInput, BuildingsUncheckedUpdateWithoutFloorsInput>
    create: XOR<BuildingsCreateWithoutFloorsInput, BuildingsUncheckedCreateWithoutFloorsInput>
    where?: BuildingsWhereInput
  }

  export type BuildingsUpdateToOneWithWhereWithoutFloorsInput = {
    where?: BuildingsWhereInput
    data: XOR<BuildingsUpdateWithoutFloorsInput, BuildingsUncheckedUpdateWithoutFloorsInput>
  }

  export type BuildingsUpdateWithoutFloorsInput = {
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BuildingsUncheckedUpdateWithoutFloorsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    is_centrally_air_conditioned?: NullableStringFieldUpdateOperationsInput | string | null
    has_security?: NullableStringFieldUpdateOperationsInput | string | null
    has_escalators?: NullableStringFieldUpdateOperationsInput | string | null
    has_food_court?: NullableStringFieldUpdateOperationsInput | string | null
    has_entertainment_area?: NullableStringFieldUpdateOperationsInput | string | null
    has_none?: NullableStringFieldUpdateOperationsInput | string | null
    type_mixed_use?: NullableStringFieldUpdateOperationsInput | string | null
    type_retail?: NullableStringFieldUpdateOperationsInput | string | null
    type_offices?: NullableStringFieldUpdateOperationsInput | string | null
    type_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    type_other?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    construction_area?: NullableIntFieldUpdateOperationsInput | number | null
    construction_year?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    builder_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_rank?: NullableStringFieldUpdateOperationsInput | string | null
    total_floors?: NullableIntFieldUpdateOperationsInput | number | null
    parking_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_floors?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_count?: NullableIntFieldUpdateOperationsInput | number | null
    apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_type_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_has_servant_quarter?: NullableStringFieldUpdateOperationsInput | string | null
    has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    apartments_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_shops_count?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    retail_floors_brands?: NullableStringFieldUpdateOperationsInput | string | null
    has_fashion_health?: NullableStringFieldUpdateOperationsInput | string | null
    has_electronics_appliancecs?: NullableStringFieldUpdateOperationsInput | string | null
    has_home_living?: NullableStringFieldUpdateOperationsInput | string | null
    has_restaurants_courts?: NullableStringFieldUpdateOperationsInput | string | null
    has_bakery_ice?: NullableStringFieldUpdateOperationsInput | string | null
    has_grocery_supermarkets?: NullableStringFieldUpdateOperationsInput | string | null
    has_banks_atm?: NullableStringFieldUpdateOperationsInput | string | null
    has_real_estate?: NullableStringFieldUpdateOperationsInput | string | null
    has_labs_pharmacies?: NullableStringFieldUpdateOperationsInput | string | null
    has_play_fitness?: NullableStringFieldUpdateOperationsInput | string | null
    has_swimming_pool?: NullableStringFieldUpdateOperationsInput | string | null
    has_cinema?: NullableStringFieldUpdateOperationsInput | string | null
    office_floors_count?: NullableIntFieldUpdateOperationsInput | number | null
    offices_count?: NullableIntFieldUpdateOperationsInput | number | null
    office_maintenance_fee?: NullableIntFieldUpdateOperationsInput | number | null
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    surveyor_name?: NullableStringFieldUpdateOperationsInput | string | null
    building_survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    building_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlotsCreateWithoutSocietiesInput = {
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlotsUncheckedCreateWithoutSocietiesInput = {
    id?: number
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlotsCreateOrConnectWithoutSocietiesInput = {
    where: PlotsWhereUniqueInput
    create: XOR<PlotsCreateWithoutSocietiesInput, PlotsUncheckedCreateWithoutSocietiesInput>
  }

  export type PlotsCreateManySocietiesInputEnvelope = {
    data: PlotsCreateManySocietiesInput | PlotsCreateManySocietiesInput[]
    skipDuplicates?: boolean
  }

  export type HousesCreateWithoutSocietiesInput = {
    type?: string | null
    size?: string | null
    price?: string | null
    direction?: string | null
    is_corner?: string | null
    condition?: string | null
    floors?: string | null
    has_basement?: string | null
    construction_year?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HousesUncheckedCreateWithoutSocietiesInput = {
    id?: number
    type?: string | null
    size?: string | null
    price?: string | null
    direction?: string | null
    is_corner?: string | null
    condition?: string | null
    floors?: string | null
    has_basement?: string | null
    construction_year?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HousesCreateOrConnectWithoutSocietiesInput = {
    where: HousesWhereUniqueInput
    create: XOR<HousesCreateWithoutSocietiesInput, HousesUncheckedCreateWithoutSocietiesInput>
  }

  export type HousesCreateManySocietiesInputEnvelope = {
    data: HousesCreateManySocietiesInput | HousesCreateManySocietiesInput[]
    skipDuplicates?: boolean
  }

  export type PlotsUpsertWithWhereUniqueWithoutSocietiesInput = {
    where: PlotsWhereUniqueInput
    update: XOR<PlotsUpdateWithoutSocietiesInput, PlotsUncheckedUpdateWithoutSocietiesInput>
    create: XOR<PlotsCreateWithoutSocietiesInput, PlotsUncheckedCreateWithoutSocietiesInput>
  }

  export type PlotsUpdateWithWhereUniqueWithoutSocietiesInput = {
    where: PlotsWhereUniqueInput
    data: XOR<PlotsUpdateWithoutSocietiesInput, PlotsUncheckedUpdateWithoutSocietiesInput>
  }

  export type PlotsUpdateManyWithWhereWithoutSocietiesInput = {
    where: PlotsScalarWhereInput
    data: XOR<PlotsUpdateManyMutationInput, PlotsUncheckedUpdateManyWithoutSocietiesInput>
  }

  export type PlotsScalarWhereInput = {
    AND?: PlotsScalarWhereInput | PlotsScalarWhereInput[]
    OR?: PlotsScalarWhereInput[]
    NOT?: PlotsScalarWhereInput | PlotsScalarWhereInput[]
    id?: IntFilter<"Plots"> | number
    society_id?: IntFilter<"Plots"> | number
    date?: StringNullableFilter<"Plots"> | string | null
    plot_type?: StringNullableFilter<"Plots"> | string | null
    type?: StringNullableFilter<"Plots"> | string | null
    size?: StringNullableFilter<"Plots"> | string | null
    apartment_size?: StringNullableFilter<"Plots"> | string | null
    apartment_size_ft?: StringNullableFilter<"Plots"> | string | null
    shop_size?: StringNullableFilter<"Plots"> | string | null
    office_size?: StringNullableFilter<"Plots"> | string | null
    plot_price?: IntNullableFilter<"Plots"> | number | null
    plot_rent?: IntNullableFilter<"Plots"> | number | null
    banglow_price?: StringNullableFilter<"Plots"> | string | null
    banglow_rent?: StringNullableFilter<"Plots"> | string | null
    direction?: StringNullableFilter<"Plots"> | string | null
    is_corner?: StringNullableFilter<"Plots"> | string | null
    payment_mode?: StringNullableFilter<"Plots"> | string | null
    ins_total_price?: IntNullableFilter<"Plots"> | number | null
    ins_down_payment?: IntNullableFilter<"Plots"> | number | null
    ins_possession_Amount?: IntNullableFilter<"Plots"> | number | null
    ins_period?: IntNullableFilter<"Plots"> | number | null
    remarks?: StringNullableFilter<"Plots"> | string | null
    imagePath?: StringNullableFilter<"Plots"> | string | null
    createdAt?: DateTimeFilter<"Plots"> | Date | string
    updatedAt?: DateTimeFilter<"Plots"> | Date | string
  }

  export type HousesUpsertWithWhereUniqueWithoutSocietiesInput = {
    where: HousesWhereUniqueInput
    update: XOR<HousesUpdateWithoutSocietiesInput, HousesUncheckedUpdateWithoutSocietiesInput>
    create: XOR<HousesCreateWithoutSocietiesInput, HousesUncheckedCreateWithoutSocietiesInput>
  }

  export type HousesUpdateWithWhereUniqueWithoutSocietiesInput = {
    where: HousesWhereUniqueInput
    data: XOR<HousesUpdateWithoutSocietiesInput, HousesUncheckedUpdateWithoutSocietiesInput>
  }

  export type HousesUpdateManyWithWhereWithoutSocietiesInput = {
    where: HousesScalarWhereInput
    data: XOR<HousesUpdateManyMutationInput, HousesUncheckedUpdateManyWithoutSocietiesInput>
  }

  export type HousesScalarWhereInput = {
    AND?: HousesScalarWhereInput | HousesScalarWhereInput[]
    OR?: HousesScalarWhereInput[]
    NOT?: HousesScalarWhereInput | HousesScalarWhereInput[]
    id?: IntFilter<"Houses"> | number
    society_id?: IntFilter<"Houses"> | number
    type?: StringNullableFilter<"Houses"> | string | null
    size?: StringNullableFilter<"Houses"> | string | null
    price?: StringNullableFilter<"Houses"> | string | null
    direction?: StringNullableFilter<"Houses"> | string | null
    is_corner?: StringNullableFilter<"Houses"> | string | null
    condition?: StringNullableFilter<"Houses"> | string | null
    floors?: StringNullableFilter<"Houses"> | string | null
    has_basement?: StringNullableFilter<"Houses"> | string | null
    construction_year?: StringNullableFilter<"Houses"> | string | null
    remarks?: StringNullableFilter<"Houses"> | string | null
    createdAt?: DateTimeFilter<"Houses"> | Date | string
    updatedAt?: DateTimeFilter<"Houses"> | Date | string
  }

  export type PriceCreateWithoutCommercialInput = {
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceUncheckedCreateWithoutCommercialInput = {
    id?: number
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceCreateOrConnectWithoutCommercialInput = {
    where: PriceWhereUniqueInput
    create: XOR<PriceCreateWithoutCommercialInput, PriceUncheckedCreateWithoutCommercialInput>
  }

  export type PriceCreateManyCommercialInputEnvelope = {
    data: PriceCreateManyCommercialInput | PriceCreateManyCommercialInput[]
    skipDuplicates?: boolean
  }

  export type PriceUpsertWithWhereUniqueWithoutCommercialInput = {
    where: PriceWhereUniqueInput
    update: XOR<PriceUpdateWithoutCommercialInput, PriceUncheckedUpdateWithoutCommercialInput>
    create: XOR<PriceCreateWithoutCommercialInput, PriceUncheckedCreateWithoutCommercialInput>
  }

  export type PriceUpdateWithWhereUniqueWithoutCommercialInput = {
    where: PriceWhereUniqueInput
    data: XOR<PriceUpdateWithoutCommercialInput, PriceUncheckedUpdateWithoutCommercialInput>
  }

  export type PriceUpdateManyWithWhereWithoutCommercialInput = {
    where: PriceScalarWhereInput
    data: XOR<PriceUpdateManyMutationInput, PriceUncheckedUpdateManyWithoutCommercialInput>
  }

  export type PriceScalarWhereInput = {
    AND?: PriceScalarWhereInput | PriceScalarWhereInput[]
    OR?: PriceScalarWhereInput[]
    NOT?: PriceScalarWhereInput | PriceScalarWhereInput[]
    id?: IntFilter<"Price"> | number
    commercial_id?: IntFilter<"Price"> | number
    date?: StringNullableFilter<"Price"> | string | null
    property_type?: StringNullableFilter<"Price"> | string | null
    plot_size?: StringNullableFilter<"Price"> | string | null
    building_size?: StringNullableFilter<"Price"> | string | null
    total_floor?: StringNullableFilter<"Price"> | string | null
    building_size_sq?: StringNullableFilter<"Price"> | string | null
    shop_size?: StringNullableFilter<"Price"> | string | null
    office_size?: StringNullableFilter<"Price"> | string | null
    apartment_size?: StringNullableFilter<"Price"> | string | null
    warehouse_size?: StringNullableFilter<"Price"> | string | null
    total_bed?: StringNullableFilter<"Price"> | string | null
    payment_mode?: StringNullableFilter<"Price"> | string | null
    price?: IntNullableFilter<"Price"> | number | null
    rent?: IntNullableFilter<"Price"> | number | null
    total_price?: IntNullableFilter<"Price"> | number | null
    installment_period?: IntNullableFilter<"Price"> | number | null
    down_payment?: IntNullableFilter<"Price"> | number | null
    possession_amount?: IntNullableFilter<"Price"> | number | null
    remarks?: StringNullableFilter<"Price"> | string | null
    createdAt?: DateTimeFilter<"Price"> | Date | string
    updatedAt?: DateTimeFilter<"Price"> | Date | string
  }

  export type SocietiesCreateWithoutHousesInput = {
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Plots?: PlotsCreateNestedManyWithoutSocietiesInput
  }

  export type SocietiesUncheckedCreateWithoutHousesInput = {
    id?: number
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Plots?: PlotsUncheckedCreateNestedManyWithoutSocietiesInput
  }

  export type SocietiesCreateOrConnectWithoutHousesInput = {
    where: SocietiesWhereUniqueInput
    create: XOR<SocietiesCreateWithoutHousesInput, SocietiesUncheckedCreateWithoutHousesInput>
  }

  export type SocietiesUpsertWithoutHousesInput = {
    update: XOR<SocietiesUpdateWithoutHousesInput, SocietiesUncheckedUpdateWithoutHousesInput>
    create: XOR<SocietiesCreateWithoutHousesInput, SocietiesUncheckedCreateWithoutHousesInput>
    where?: SocietiesWhereInput
  }

  export type SocietiesUpdateToOneWithWhereWithoutHousesInput = {
    where?: SocietiesWhereInput
    data: XOR<SocietiesUpdateWithoutHousesInput, SocietiesUncheckedUpdateWithoutHousesInput>
  }

  export type SocietiesUpdateWithoutHousesInput = {
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Plots?: PlotsUpdateManyWithoutSocietiesNestedInput
  }

  export type SocietiesUncheckedUpdateWithoutHousesInput = {
    id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Plots?: PlotsUncheckedUpdateManyWithoutSocietiesNestedInput
  }

  export type SocietiesCreateWithoutPlotsInput = {
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Houses?: HousesCreateNestedManyWithoutSocietiesInput
  }

  export type SocietiesUncheckedCreateWithoutPlotsInput = {
    id?: number
    survey_date?: string | null
    city: string
    type?: string | null
    name?: string | null
    zone?: string | null
    address?: string | null
    blocks?: number | null
    phase?: number | null
    grade?: string | null
    occupancy?: number | null
    area?: number | null
    population?: number | null
    launch_year?: number | null
    total_plots_residential?: number | null
    plot_sizes_residential?: number | null
    plot_sizes_residential_87_5?: string | null
    plot_sizes_residential_125?: string | null
    plot_sizes_residential_200?: string | null
    plot_sizes_residential_250?: string | null
    plot_sizes_residential_300?: string | null
    plot_sizes_residential_400?: string | null
    plot_sizes_residential_500?: string | null
    plot_sizes_residential_600?: string | null
    plot_sizes_residential_800?: string | null
    plot_sizes_residential_1000?: string | null
    plot_sizes_residential_2000?: string | null
    total_plots_commercial?: number | null
    plot_sizes_commercial?: number | null
    plot_sizes_commercial_87_5?: string | null
    plot_sizes_commercial_100?: string | null
    plot_sizes_commercial_125?: string | null
    plot_sizes_commercial_200?: string | null
    plot_sizes_commercial_250?: string | null
    plot_sizes_commercial_500?: string | null
    plot_sizes_commercial_1000?: string | null
    plot_sizes_commercial_2000?: string | null
    total_apartments?: number | null
    societies_apartment_size?: number | null
    apartment_studio?: string | null
    apartment_one_bad?: string | null
    apartment_two_bad?: string | null
    apartment_three_bad?: string | null
    apartment_four_bad?: string | null
    apartment_five_bad?: string | null
    apartment_penthouse?: string | null
    apartment_duplex?: string | null
    plot_size?: number | null
    plot_price?: number | null
    vilas_size?: number | null
    vilas_price?: number | null
    vilas_monthly_rent?: number | null
    commercial_plot_size?: number | null
    commercial_plot_price?: number | null
    apartment_size?: number | null
    min_apartments_price?: number | null
    max_apartments_price?: number | null
    min_apartments_monthly_rent?: number | null
    max_apartments_monthly_rent?: number | null
    payment_terms?: string | null
    instalment_total_amount?: number | null
    instalment_down_payment?: number | null
    instalment_possession_Amount?: number | null
    instalment_period?: number | null
    features_type_parks?: string | null
    features_type_school?: string | null
    features_type_university?: string | null
    features_type_hospital?: string | null
    features_type_commercial_market?: string | null
    features_type_zoo?: string | null
    features_type_food_arena?: string | null
    features_type_college?: string | null
    features_type_graveyard?: string | null
    features_type_grid_station?: string | null
    features_type_masjid?: string | null
    features_type_community_club?: string | null
    features_type_gated_community?: string | null
    utilities_type_underground_electrification?: string | null
    utilities_type_gas?: string | null
    utilities_type_water?: string | null
    utilities_type_utilities_electricity?: string | null
    utilities_type_drainage?: string | null
    developer_name?: string | null
    contact_no?: number | null
    survery_remarks?: string | null
    imagePath?: string | null
    societies_draft?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    Houses?: HousesUncheckedCreateNestedManyWithoutSocietiesInput
  }

  export type SocietiesCreateOrConnectWithoutPlotsInput = {
    where: SocietiesWhereUniqueInput
    create: XOR<SocietiesCreateWithoutPlotsInput, SocietiesUncheckedCreateWithoutPlotsInput>
  }

  export type SocietiesUpsertWithoutPlotsInput = {
    update: XOR<SocietiesUpdateWithoutPlotsInput, SocietiesUncheckedUpdateWithoutPlotsInput>
    create: XOR<SocietiesCreateWithoutPlotsInput, SocietiesUncheckedCreateWithoutPlotsInput>
    where?: SocietiesWhereInput
  }

  export type SocietiesUpdateToOneWithWhereWithoutPlotsInput = {
    where?: SocietiesWhereInput
    data: XOR<SocietiesUpdateWithoutPlotsInput, SocietiesUncheckedUpdateWithoutPlotsInput>
  }

  export type SocietiesUpdateWithoutPlotsInput = {
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Houses?: HousesUpdateManyWithoutSocietiesNestedInput
  }

  export type SocietiesUncheckedUpdateWithoutPlotsInput = {
    id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    address?: NullableStringFieldUpdateOperationsInput | string | null
    blocks?: NullableIntFieldUpdateOperationsInput | number | null
    phase?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    population?: NullableIntFieldUpdateOperationsInput | number | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_residential_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_300?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_400?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_600?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_800?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_residential_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_plots_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial?: NullableIntFieldUpdateOperationsInput | number | null
    plot_sizes_commercial_87_5?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_100?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_125?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_200?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_250?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_500?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_1000?: NullableStringFieldUpdateOperationsInput | string | null
    plot_sizes_commercial_2000?: NullableStringFieldUpdateOperationsInput | string | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    societies_apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_studio?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_one_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_two_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_three_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_four_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_five_bad?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_size?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_price?: NullableIntFieldUpdateOperationsInput | number | null
    vilas_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_size?: NullableIntFieldUpdateOperationsInput | number | null
    commercial_plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    apartment_size?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_price?: NullableIntFieldUpdateOperationsInput | number | null
    min_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    max_apartments_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    payment_terms?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_total_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    features_type_parks?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_school?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_university?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_hospital?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_commercial_market?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_zoo?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_food_arena?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_college?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_graveyard?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_grid_station?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_masjid?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_community_club?: NullableStringFieldUpdateOperationsInput | string | null
    features_type_gated_community?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_underground_electrification?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_gas?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_water?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_utilities_electricity?: NullableStringFieldUpdateOperationsInput | string | null
    utilities_type_drainage?: NullableStringFieldUpdateOperationsInput | string | null
    developer_name?: NullableStringFieldUpdateOperationsInput | string | null
    contact_no?: NullableIntFieldUpdateOperationsInput | number | null
    survery_remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    societies_draft?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Houses?: HousesUncheckedUpdateManyWithoutSocietiesNestedInput
  }

  export type CommercialCreateWithoutPriceInput = {
    survey_date?: string | null
    city?: string | null
    commercial_zone_name?: string | null
    zone?: string | null
    type?: string | null
    location?: string | null
    project_status?: string | null
    launch_year?: number | null
    grade?: string | null
    area?: number | null
    occupancy?: number | null
    total_plots?: number | null
    total_shops?: number | null
    total_offices?: number | null
    total_apartments?: number | null
    property_feature?: string | null
    property_title?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CommercialUncheckedCreateWithoutPriceInput = {
    id?: number
    survey_date?: string | null
    city?: string | null
    commercial_zone_name?: string | null
    zone?: string | null
    type?: string | null
    location?: string | null
    project_status?: string | null
    launch_year?: number | null
    grade?: string | null
    area?: number | null
    occupancy?: number | null
    total_plots?: number | null
    total_shops?: number | null
    total_offices?: number | null
    total_apartments?: number | null
    property_feature?: string | null
    property_title?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CommercialCreateOrConnectWithoutPriceInput = {
    where: CommercialWhereUniqueInput
    create: XOR<CommercialCreateWithoutPriceInput, CommercialUncheckedCreateWithoutPriceInput>
  }

  export type CommercialUpsertWithoutPriceInput = {
    update: XOR<CommercialUpdateWithoutPriceInput, CommercialUncheckedUpdateWithoutPriceInput>
    create: XOR<CommercialCreateWithoutPriceInput, CommercialUncheckedCreateWithoutPriceInput>
    where?: CommercialWhereInput
  }

  export type CommercialUpdateToOneWithWhereWithoutPriceInput = {
    where?: CommercialWhereInput
    data: XOR<CommercialUpdateWithoutPriceInput, CommercialUncheckedUpdateWithoutPriceInput>
  }

  export type CommercialUpdateWithoutPriceInput = {
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CommercialUncheckedUpdateWithoutPriceInput = {
    id?: IntFieldUpdateOperationsInput | number
    survey_date?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    commercial_zone_name?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    project_status?: NullableStringFieldUpdateOperationsInput | string | null
    launch_year?: NullableIntFieldUpdateOperationsInput | number | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    area?: NullableIntFieldUpdateOperationsInput | number | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    total_plots?: NullableIntFieldUpdateOperationsInput | number | null
    total_shops?: NullableIntFieldUpdateOperationsInput | number | null
    total_offices?: NullableIntFieldUpdateOperationsInput | number | null
    total_apartments?: NullableIntFieldUpdateOperationsInput | number | null
    property_feature?: NullableStringFieldUpdateOperationsInput | string | null
    property_title?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FloorsCreateManyBuildingsInput = {
    id?: number
    floor_no: string
    floor_type: string
    unit_type?: string | null
    floor_apartments_studio?: string | null
    floor_apartments_1_bed?: string | null
    floor_apartments_2_bed?: string | null
    floor_apartments_3_bed?: string | null
    floor_apartments_4_bed?: string | null
    floor_apartments_5_bed?: string | null
    floor_apartments_duplex?: string | null
    floor_apartments_penthouse?: string | null
    floor_has_furnished?: string | null
    floor_has_semi_furnished?: string | null
    floor_has_service_apartments?: string | null
    floor_has_hotel_suites_apartments?: string | null
    occupancy?: number | null
    size_min?: number | null
    size_max?: number | null
    avg_sale_price?: number | null
    avg_monthly_rent?: number | null
    instalment_plan?: string | null
    instalment_period?: number | null
    down_payment_amount?: number | null
    instalment_amount?: number | null
    possession_amount?: number | null
    date?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type FloorsUpdateWithoutBuildingsInput = {
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FloorsUncheckedUpdateWithoutBuildingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FloorsUncheckedUpdateManyWithoutBuildingsInput = {
    id?: IntFieldUpdateOperationsInput | number
    floor_no?: StringFieldUpdateOperationsInput | string
    floor_type?: StringFieldUpdateOperationsInput | string
    unit_type?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_studio?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_1_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_2_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_3_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_4_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_5_bed?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_duplex?: NullableStringFieldUpdateOperationsInput | string | null
    floor_apartments_penthouse?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_semi_furnished?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_service_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    floor_has_hotel_suites_apartments?: NullableStringFieldUpdateOperationsInput | string | null
    occupancy?: NullableIntFieldUpdateOperationsInput | number | null
    size_min?: NullableIntFieldUpdateOperationsInput | number | null
    size_max?: NullableIntFieldUpdateOperationsInput | number | null
    avg_sale_price?: NullableIntFieldUpdateOperationsInput | number | null
    avg_monthly_rent?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_plan?: NullableStringFieldUpdateOperationsInput | string | null
    instalment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    instalment_amount?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    date?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlotsCreateManySocietiesInput = {
    id?: number
    date?: string | null
    plot_type?: string | null
    type?: string | null
    size?: string | null
    apartment_size?: string | null
    apartment_size_ft?: string | null
    shop_size?: string | null
    office_size?: string | null
    plot_price?: number | null
    plot_rent?: number | null
    banglow_price?: string | null
    banglow_rent?: string | null
    direction?: string | null
    is_corner?: string | null
    payment_mode?: string | null
    ins_total_price?: number | null
    ins_down_payment?: number | null
    ins_possession_Amount?: number | null
    ins_period?: number | null
    remarks?: string | null
    imagePath?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type HousesCreateManySocietiesInput = {
    id?: number
    type?: string | null
    size?: string | null
    price?: string | null
    direction?: string | null
    is_corner?: string | null
    condition?: string | null
    floors?: string | null
    has_basement?: string | null
    construction_year?: string | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PlotsUpdateWithoutSocietiesInput = {
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlotsUncheckedUpdateWithoutSocietiesInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PlotsUncheckedUpdateManyWithoutSocietiesInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    plot_type?: NullableStringFieldUpdateOperationsInput | string | null
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size_ft?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    plot_price?: NullableIntFieldUpdateOperationsInput | number | null
    plot_rent?: NullableIntFieldUpdateOperationsInput | number | null
    banglow_price?: NullableStringFieldUpdateOperationsInput | string | null
    banglow_rent?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    ins_total_price?: NullableIntFieldUpdateOperationsInput | number | null
    ins_down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    ins_possession_Amount?: NullableIntFieldUpdateOperationsInput | number | null
    ins_period?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    imagePath?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HousesUpdateWithoutSocietiesInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    floors?: NullableStringFieldUpdateOperationsInput | string | null
    has_basement?: NullableStringFieldUpdateOperationsInput | string | null
    construction_year?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HousesUncheckedUpdateWithoutSocietiesInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    floors?: NullableStringFieldUpdateOperationsInput | string | null
    has_basement?: NullableStringFieldUpdateOperationsInput | string | null
    construction_year?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HousesUncheckedUpdateManyWithoutSocietiesInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableStringFieldUpdateOperationsInput | string | null
    direction?: NullableStringFieldUpdateOperationsInput | string | null
    is_corner?: NullableStringFieldUpdateOperationsInput | string | null
    condition?: NullableStringFieldUpdateOperationsInput | string | null
    floors?: NullableStringFieldUpdateOperationsInput | string | null
    has_basement?: NullableStringFieldUpdateOperationsInput | string | null
    construction_year?: NullableStringFieldUpdateOperationsInput | string | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceCreateManyCommercialInput = {
    id?: number
    date?: string | null
    property_type?: string | null
    plot_size?: string | null
    building_size?: string | null
    total_floor?: string | null
    building_size_sq?: string | null
    shop_size?: string | null
    office_size?: string | null
    apartment_size?: string | null
    warehouse_size?: string | null
    total_bed?: string | null
    payment_mode?: string | null
    price?: number | null
    rent?: number | null
    total_price?: number | null
    installment_period?: number | null
    down_payment?: number | null
    possession_amount?: number | null
    remarks?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PriceUpdateWithoutCommercialInput = {
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceUncheckedUpdateWithoutCommercialInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PriceUncheckedUpdateManyWithoutCommercialInput = {
    id?: IntFieldUpdateOperationsInput | number
    date?: NullableStringFieldUpdateOperationsInput | string | null
    property_type?: NullableStringFieldUpdateOperationsInput | string | null
    plot_size?: NullableStringFieldUpdateOperationsInput | string | null
    building_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_floor?: NullableStringFieldUpdateOperationsInput | string | null
    building_size_sq?: NullableStringFieldUpdateOperationsInput | string | null
    shop_size?: NullableStringFieldUpdateOperationsInput | string | null
    office_size?: NullableStringFieldUpdateOperationsInput | string | null
    apartment_size?: NullableStringFieldUpdateOperationsInput | string | null
    warehouse_size?: NullableStringFieldUpdateOperationsInput | string | null
    total_bed?: NullableStringFieldUpdateOperationsInput | string | null
    payment_mode?: NullableStringFieldUpdateOperationsInput | string | null
    price?: NullableIntFieldUpdateOperationsInput | number | null
    rent?: NullableIntFieldUpdateOperationsInput | number | null
    total_price?: NullableIntFieldUpdateOperationsInput | number | null
    installment_period?: NullableIntFieldUpdateOperationsInput | number | null
    down_payment?: NullableIntFieldUpdateOperationsInput | number | null
    possession_amount?: NullableIntFieldUpdateOperationsInput | number | null
    remarks?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}